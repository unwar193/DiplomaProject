{"version":3,"file":"js/887.9f8afab4.js","mappings":"oNACEA,EAAAA,EAAAA,GAAM,mB,GACDC,MAAM,a,GACTD,EAAAA,EAAAA,GAOS,UANPE,KAAK,SACLD,MAAM,kBACN,iBAAe,QACf,iBAAe,iBAChB,qBAED,G,GAEAD,EAAAA,EAAAA,GAAM,mB,GACNA,EAAAA,EAAAA,GAA+C,MAA3CG,MAAA,yBAA2B,eAAW,G,GAC1CH,EAAAA,EAAAA,GAAM,mB,GACDC,MAAM,gE,GAEFA,MAAM,yB,GACNG,KAAK,K,aAIHH,MAAM,uB,GACNA,MAAM,aAAaG,KAAK,K,GAExBH,MAAM,a,GACJA,MAAM,iB,GACHA,MAAM,6C,GAIZD,EAAAA,EAAAA,GAIC,QAJKC,MAAM,aAAW,EACpBD,EAAAA,EAAAA,GAEA,KAFGI,KAAK,IAAIH,MAAM,4CAChB,aAFL,G,GAMEA,MAAM,c,GACLI,OAAO,SAASD,KAAK,K,GAGrBH,MAAM,qB,+BAgCXD,EAAAA,EAAAA,GAAiC,OAA5BC,MAAM,iBAAe,S,GAQhCA,MAAM,aACNK,GAAG,eACH,mBAAiB,SACjB,mBAAiB,QACjBC,SAAS,KACT,kBAAgB,sBAChB,cAAY,Q,GAEPN,MAAM,gB,GACJA,MAAM,iB,GACTD,EAAAA,EAAAA,GAQM,OARDC,MAAM,gBAAc,EACvBD,EAAAA,EAAAA,GAAiE,MAA7DC,MAAM,cAAcK,GAAG,uBAAsB,gBACjDN,EAAAA,EAAAA,GAKU,UAJRE,KAAK,SACLD,MAAM,YACN,kBAAgB,QAChB,aAAW,YANf,G,GASKA,MAAM,c,WAAa,O,GAkBfA,MAAM,e,GAQTD,EAAAA,EAAAA,GAAuC,QAAjCC,MAAM,oBAAmB,KAAC,G,qBA0B7BA,MAAM,uB,GAGXD,EAAAA,EAAAA,GAA0D,UAAlDE,KAAK,SAASD,MAAM,mBAAkB,OAAG,G,GAIrDD,EAAAA,EAAAA,GAQM,OARDC,MAAM,gBAAc,EACvBD,EAAAA,EAAAA,GAMS,UALPE,KAAK,SACLD,MAAM,oBACN,kBAAgB,SACjB,aALH,G,GAcJA,MAAM,aACNK,GAAG,SACH,mBAAiB,SACjB,mBAAiB,QACjBC,SAAS,KACT,kBAAgB,sBAChB,cAAY,Q,GAEPN,MAAM,gB,GACJA,MAAM,iB,GACTD,EAAAA,EAAAA,GAQM,OARDC,MAAM,gBAAc,EACvBD,EAAAA,EAAAA,GAAoE,MAAhEC,MAAM,cAAcK,GAAG,uBAAsB,mBACjDN,EAAAA,EAAAA,GAKU,UAJRE,KAAK,SACLD,MAAM,YACN,kBAAgB,QAChB,aAAW,YANf,G,GASKA,MAAM,c,WAAa,O,SAiCfA,MAAM,uB,GAGXD,EAAAA,EAAAA,GAA6D,UAArDE,KAAK,SAASD,MAAM,mBAAkB,UAAM,G,GAIxDD,EAAAA,EAAAA,GAQM,OARDC,MAAM,gBAAc,EACvBD,EAAAA,EAAAA,GAMS,UALPE,KAAK,SACLD,MAAM,oBACN,kBAAgB,SACjB,aALH,G,GAcJA,MAAM,aACNK,GAAG,SACH,mBAAiB,SACjB,mBAAiB,QACjBC,SAAS,KACT,kBAAgB,sBAChB,cAAY,Q,GAEPN,MAAM,gB,GACJA,MAAM,iB,GACTD,EAAAA,EAAAA,GAQM,OARDC,MAAM,gBAAc,EACvBD,EAAAA,EAAAA,GAAoE,MAAhEC,MAAM,cAAcK,GAAG,uBAAsB,mBACjDN,EAAAA,EAAAA,GAKU,UAJRE,KAAK,SACLD,MAAM,YACN,kBAAgB,QAChB,aAAW,YANf,G,GASKA,MAAM,c,YAAa,O,IAIpBD,EAAAA,EAAAA,GAA4C,UAAxC,uCAAmC,G,IACvCA,EAAAA,EAAAA,GAAM,mB,IAKLC,MAAM,gB,IACTD,EAAAA,EAAAA,GAOS,UANPE,KAAK,SACLI,GAAG,QACHL,MAAM,oBACN,kBAAgB,SACjB,WAED,G,iEA1RVO,GACAR,EAAAA,EAAAA,GAqSM,MArSN,EAqSM,CApSJS,EASAC,EACAC,EACAC,GACAZ,EAAAA,EAAAA,GA8DM,MA9DN,EA8DM,gBA7DJa,EAAAA,EAAAA,IA4DMC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IA5D6BC,GAAAA,UAARC,K,WAA3BJ,EAAAA,EAAAA,IA4DM,OA5DDZ,MAAM,SAAmCiB,IAAKD,EAAKE,MAAxD,EACEnB,EAAAA,EAAAA,GA0DM,MA1DN,EA0DM,EAzDJA,EAAAA,EAAAA,GAEI,IAFJ,EAEI,EADFA,EAAAA,EAAAA,GAAmE,OAA7DoB,IAAKH,EAAKI,MAAOpB,MAAM,gBAAgBqB,IAAI,iBAAjD,aAGFtB,EAAAA,EAAAA,GAEM,MAFN,EAEM,EADJA,EAAAA,EAAAA,GAAmD,IAAnD,GAAmDuB,EAAAA,EAAAA,IAAjBN,EAAKO,OAAK,MAE9CxB,EAAAA,EAAAA,GAiDM,MAjDN,EAiDM,EAhDJA,EAAAA,EAAAA,GAUM,MAVN,EAUM,EATJA,EAAAA,EAAAA,GAEC,OAFD,GAECuB,EAAAA,EAAAA,IADKN,EAAKQ,OAAQ,KAAE,GAGrBC,KAMF1B,EAAAA,EAAAA,GAEK,KAFL,EAEK,EADHA,EAAAA,EAAAA,GAAsD,IAAtD,GAAsDuB,EAAAA,EAAAA,IAAvBN,EAAKU,aAAW,MAGjD3B,EAAAA,EAAAA,GA+BM,MA/BN,EA+BM,EA3BJA,EAAAA,EAAAA,GAiBS,UAhBPE,KAAK,SACLD,MAAM,wBACN,iBAAe,QACf,iBAAe,UACV2B,QAAK,GAAqBC,GAAAA,QAA6BZ,EAAKE,KAA0BF,EAAKO,MAA2BP,EAAKQ,MAA2BR,EAAKU,YAAiCV,EAAKI,MAA2BJ,EAAKC,MAUvO,WAED,EAAAY,IACA9B,EAAAA,EAAAA,GAQS,UAPPE,KAAK,SACLD,MAAM,0BACN,iBAAe,QACf,iBAAe,UACV2B,QAAK,GAAEC,GAAAA,WAAWZ,EAAKC,IAAKD,EAAKE,OACvC,WAED,EAAAY,KAEFC,WAzDN,SAgEFhC,EAAAA,EAAAA,GA0FM,MA1FN,EA0FM,EAjFJA,EAAAA,EAAAA,GAgFM,MAhFN,EAgFM,EA/EJA,EAAAA,EAAAA,GA8EM,MA9EN,EA8EM,CA7EJiC,GASAjC,EAAAA,EAAAA,GA0DM,MA1DN,EA0DM,IAvDJA,EAAAA,EAAAA,GAqDO,QArDAkC,SAAM,8BAAUL,GAAAA,YAAAA,GAAAA,cAAAA,IAAU,eAAjC,WACE7B,EAAAA,EAAAA,GAME,SALAC,MAAM,eACNC,KAAK,OACLiC,YAAY,OACZ,aAAW,wB,qCACFnB,GAAAA,QAAQG,KAAIiB,IALvB,iBAKWpB,GAAAA,QAAQG,SAAAA,EAAAA,EAAAA,KAEnBnB,EAAAA,EAAAA,GAME,SALAC,MAAM,eACNC,KAAK,OACLiC,YAAY,QACZ,aAAW,wB,qCACFnB,GAAAA,QAAQQ,MAAKY,IALxB,iBAKWpB,GAAAA,QAAQQ,UAEnBxB,EAAAA,EAAAA,GASM,MATN,EASM,WARJA,EAAAA,EAAAA,GAME,SALAC,MAAM,eACNC,KAAK,SACLiC,YAAY,QACZ,aAAW,kD,qCACFnB,GAAAA,QAAQS,MAAKW,IALxB,iBAKWpB,GAAAA,QAAQS,SAEnBY,KAGFrC,EAAAA,EAAAA,GAOE,SANAC,MAAM,eACNqC,KAAK,KACLpC,KAAK,OACLiC,YAAY,MACZI,OAAO,YACNC,SAAM,oBAAEX,GAAAA,cAAAA,GAAAA,gBAAAA,KANX,SASQb,GAAAA,eAAAA,EAAAA,EAAAA,OADRH,EAAAA,EAAAA,IAMY,Y,MAJVP,GAAG,iBACHL,MAAM,cACLwC,MAAOzB,GAAAA,YACR0B,IAAI,OALN,qCAQA1C,EAAAA,EAAAA,GAMY,YALVC,MAAM,eACNK,GAAG,8BACHqC,KAAK,IACLR,YAAY,c,qCACHnB,GAAAA,QAAQW,YAAWS,IAL9B,iBAKWpB,GAAAA,QAAQW,eAEoBX,GAAAA,iBAAAA,EAAAA,EAAAA,OAAvCH,EAAAA,EAAAA,IAEM,MAFN,GAEMU,EAAAA,EAAAA,IADDP,GAAAA,gBAAc,KADnB,eAGA4B,GApDF,MAwDFC,SAaN7C,EAAAA,EAAAA,GAuEM,MAvEN,EAuEM,EA9DJA,EAAAA,EAAAA,GA6DM,MA7DN,EA6DM,EA5DJA,EAAAA,EAAAA,GA2DM,MA3DN,EA2DM,CA1DJ8C,GASA9C,EAAAA,EAAAA,GAuCM,MAvCN,EAuCM,IApCJA,EAAAA,EAAAA,GAkCO,QAlCAkC,SAAM,gCAAUL,GAAAA,eAAAA,GAAAA,iBAAAA,IAAa,eAApC,WACE7B,EAAAA,EAAAA,GAME,SALAC,MAAM,eACNC,KAAK,OACLiC,YAAY,OACZ,aAAW,wB,qCACFnB,GAAAA,YAAYG,KAAIiB,IAL3B,iBAKWpB,GAAAA,YAAYG,SAAAA,EAAAA,EAAAA,KAEvBnB,EAAAA,EAAAA,GAMY,YALVC,MAAM,eACNK,GAAG,8BACHqC,KAAK,IACLR,YAAY,c,qCACHnB,GAAAA,YAAYW,YAAWS,IALlC,iBAKWpB,GAAAA,YAAYW,gBAAAA,EAAAA,EAAAA,KAEvB3B,EAAAA,EAAAA,GAME,SALAC,MAAM,eACNC,KAAK,OACLiC,YAAY,QACZ,aAAW,wB,qCACFnB,GAAAA,YAAYK,MAAKe,IAL5B,iBAKWpB,GAAAA,YAAYK,UAAAA,EAAAA,EAAAA,KAEvBrB,EAAAA,EAAAA,GAOE,SANAC,MAAM,eACNC,KAAK,SACL6C,IAAA,GACAC,SAAS,QACT,aAAW,wB,qCACFhC,GAAAA,YAAYS,MAAKW,IAN5B,iBAMWpB,GAAAA,YAAYS,SAEgBT,GAAAA,uBAAAA,EAAAA,EAAAA,OAAvCH,EAAAA,EAAAA,IAEM,MAFN,GAEMU,EAAAA,EAAAA,IADDP,GAAAA,sBAAoB,KADzB,eAGAiC,GAjCF,MAqCFC,SAaNlD,EAAAA,EAAAA,GAiDM,MAjDN,EAiDM,EAxCJA,EAAAA,EAAAA,GAuCM,MAvCN,EAuCM,EAtCJA,EAAAA,EAAAA,GAqCM,MArCN,EAqCM,CApCJmD,GASAnD,EAAAA,EAAAA,GASM,MATN,EASM,KANJA,EAAAA,EAAAA,GAIO,aAHLoD,GACAC,IACArD,EAAAA,EAAAA,GAAsC,UAAlC,WAAOuB,EAAAA,EAAAA,IAAGP,GAAAA,YAAYG,MAAI,QAIlCnB,EAAAA,EAAAA,GAgBM,MAhBN,GAgBM,CAfJsD,IAQAtD,EAAAA,EAAAA,GAMS,UALPE,KAAK,SACLD,MAAM,iBACD2B,QAAK,iBAAEC,GAAAA,cAAcb,GAAAA,YAAYE,OACvC,uBA9RX,G;;;;;;;;;;;;;;;;;ACqBK,MAAMqC,GAAe,iCAKfC,GAA4B,gBAO5BC,GAAmC,KAOnCC,GAAgC;;;;;;;;;;;;;;;;;ACjBvC,MAAOC,WAAqBC,GAAAA,GAYhCC,YAAYC,EAAwBC,GAClCC,MACEC,GAAYH,GACZ,qBAAqBC,MAAYE,GAAYH,OAVjD,KAAAI,WAAgD,CAAEC,eAAgB,MAYhEC,KAAKC,aAAeD,KAAKL,QAGzBO,OAAOC,eAAeH,KAAMT,GAAaa,UAC1C,CAKDC,YAAYX,GACV,OAAOG,GAAYH,KAAUM,KAAKN,IACnC,CAKGK,qBACF,OAAOC,KAAKF,WAAWC,cACxB,CAEGA,mBAAeA,GACjBC,KAAKF,WAAWC,eAAiBA,EAC7BC,KAAKF,WAAWC,eAClBC,KAAKL,QAAU,GAAGK,KAAKC,iBAAiBD,KAAKF,WAAWC,iBAExDC,KAAKL,QAAUK,KAAKC,YAEvB,EAuCG,SAAUJ,GAAYH,GAC1B,MAAO,WAAaA,CACrB,C,SAEeY,KACd,MAAMX,EACJ,iFAEF,OAAO,IAAIJ,GAAuC,UAAAI,EACnD,CAEK,SAAUY,GAAeC,GAC7B,OAAO,IAAIjB,GAET,8BAAaiB,EAAO,oBAEvB,CAgBK,SAAUC,GAAcC,GAC5B,OAAO,IAAInB,GAAY,iBAErB,qBACEmB,EADF,yEAKH,C,SAEeC,KACd,MAAMhB,EACJ,8FAEF,OAAO,IAAIJ,GAA+C,kBAAAI,EAC3D,C,SAEeiB,KACd,OAAO,IAAIrB,GAET,mGAEH,CAEK,SAAUsB,GAAaL,GAC3B,OAAO,IAAIjB,GAET,2DAA8CiB,EAAO,KAExD,C,SAEeM,KACd,OAAO,IAAIvB,GAET,kFAEH,C,SAmBewB,KACd,OAAO,IAAIxB,GAET,gDAEH,CASK,SAAUyB,GAAWC,GACzB,OAAO,IAAI1B,GAET,8BAAkB0B,EAAM,KAE3B,CAEK,SAAUC,GAAqBR,GACnC,OAAO,IAAInB,GAET,oDAA6BmB,EAAS,KAEzC,C,SAEeS,KACd,OAAO,IAAI5B,GAAY,oBAErB,6CAEEH,GACA,wCAEL,C,SAEegC,KACd,OAAO,IAAI7B,GAET,6EAEH,C,SAEe8B,KACd,OAAO,IAAI9B,GAET,gGAEH,C,SAEe+B,KACd,OAAO,IAAI/B,GAET,oEAEH,CAKK,SAAUgC,GAAgB5B,GAC9B,OAAO,IAAIJ,GAAgD,mBAAAI,EAC5D,C,SA+Be6B,KACd,OAAO,IAAIjC,GAET,8CAEH,CAOK,SAAUkC,GAAqB1E,GACnC,OAAO,IAAIwC,GAAY,yBAErB,kBACExC,EADF,kHAKH,CAMe,SAAA2E,GAAcC,EAAgBhC,GAC5C,OAAO,IAAIJ,GAAY,iBAErB,iCAAmCoC,EAAS,MAAQhC,EAEvD,CAYK,SAAUiC,GAAcjC,GAC5B,MAAM,IAAIJ,GAAY,iBAEpB,mBAAqBI,EAEzB;;;;;;;;;;;;;;;;SCpTakC,GAGXpC,YAA4BiB,EAAgBF,GAAhB,KAAME,OAANA,EAC1BV,KAAK8B,MAAQtB,CACd,CAEGA,WACF,OAAOR,KAAK8B,KACb,CAEGC,aACF,OAA4B,IAArB/B,KAAKQ,KAAKwB,MAClB,CAEDC,gBACE,MAAMC,EAASC,mBACf,MAAO,MAAQD,EAAOlC,KAAKU,QAAU,MAAQwB,EAAOlC,KAAKQ,KAC1D,CAED4B,sBACE,MAAMF,EAASC,mBACf,MAAO,MAAQD,EAAOlC,KAAKU,QAAU,IACtC,CAEwB,0BAAC2B,EAAsBC,GAC9C,IAAIC,EACJ,IACEA,EAAiBV,GAASW,YAAYH,EAAcC,EAKrD,CAJC,MAAOG,GAGP,OAAO,IAAIZ,GAASQ,EAAc,GACnC,CACD,GAA4B,KAAxBE,EAAe/B,KACjB,OAAO+B,EAEP,MAAMrB,GAAqBmB,EAE9B,CAEiB,mBAACpB,EAAaqB,GAC9B,IAAII,EAA4B,KAChC,MAAMC,EAAe,sBAErB,SAASC,EAASC,GAC6B,MAAzCA,EAAIrC,KAAKsC,OAAOD,EAAIrC,KAAKwB,OAAS,KACpCa,EAAIf,MAAQe,EAAIf,MAAMiB,MAAM,GAAI,GAEnC,CACD,MAAMC,EAAS,YACTC,EAAU,IAAIC,OAAO,SAAWP,EAAeK,EAAQ,KACvDG,EAAY,CAAEzC,OAAQ,EAAGF,KAAM,GAErC,SAAS4C,EAAWP,GAClBA,EAAIf,MAAQuB,mBAAmBR,EAAIrC,KACpC,CACD,MAAM8C,EAAU,iBACVC,EAAsBjB,EAAKkB,QAAQ,OAAQ,OAC3CC,EAAsB,kBACtBC,EAAwB,IAAIR,OAChC,aAAaK,KAAuBD,OAAaX,MAAiBc,IAClE,KAEIE,EAAyB,CAAEjD,OAAQ,EAAGF,KAAM,GAE5CoD,EACJtB,IAASnD,GACL,sDACAmD,EACAuB,EAAmB,WACnBC,EAAqB,IAAIZ,OAChB,aAAAU,KAAoBjB,KAAgBkB,IACjD,KAEIE,EAAsB,CAAErD,OAAQ,EAAGF,KAAM,GAEzCwD,EAAS,CACb,CAAEC,MAAOhB,EAASiB,QAASf,EAAWgB,WAAYvB,GAClD,CACEqB,MAAOP,EACPQ,QAASP,EACTQ,WAAYf,GAEd,CACEa,MAAOH,EACPI,QAASH,EACTI,WAAYf,IAGhB,IAAK,IAAIgB,EAAI,EAAGA,EAAIJ,EAAOhC,OAAQoC,IAAK,CACtC,MAAMC,EAAQL,EAAOI,GACfE,EAAWD,EAAMJ,MAAMM,KAAKtD,GAClC,GAAIqD,EAAU,CACZ,MAAME,EAAcF,EAASD,EAAMH,QAAQxD,QAC3C,IAAI+D,EAAYH,EAASD,EAAMH,QAAQ1D,MAClCiE,IACHA,EAAY,IAEd/B,EAAW,IAAIb,GAAS2C,EAAaC,GACrCJ,EAAMF,WAAWzB,GACjB,KACD,CACF,CACD,GAAgB,MAAZA,EACF,MAAM1B,GAAWC,GAEnB,OAAOyB,CACR,E,MCpHUgC,GAGXjF,YAAYkF,GACV3E,KAAK4E,SAAWC,QAAQC,OAAUH,EACnC,CAGDI,aACE,OAAO/E,KAAK4E,QACb,CAGDI,OAAOC,GAAa,GAAe;;;;;;;;;;;;;;;;GCJ/B,SAAUC,GACdC,EAEAC,EACAC,GAIA,IAAIC,EAAc,EAIdC,EAAsB,KAEtBC,EAAuB,KACvBC,GAAa,EACbC,EAAc,EAElB,SAAS3E,IACP,OAAuB,IAAhB2E,CACR,CACD,IAAIC,GAAoB,EAExB,SAASC,KAAmBC,GACrBF,IACHA,GAAoB,EACpBP,EAASU,MAAM,KAAMD,GAExB,CAED,SAASE,EAAcC,GACrBT,EAAiBU,YAAW,KAC1BV,EAAiB,KACjBJ,EAAEe,EAASnF,IAAX,GACCiF,EACJ,CAED,SAASG,IACHX,GACFY,aAAaZ,EAEhB,CAED,SAASU,EAAQG,KAAqBR,GACpC,GAAIF,EAEF,YADAQ,IAGF,GAAIE,EAGF,OAFAF,SACAP,EAAgBU,KAAK,KAAMD,KAAYR,GAGzC,MAAMU,EAAWxF,KAAc0E,EAC/B,GAAIc,EAGF,OAFAJ,SACAP,EAAgBU,KAAK,KAAMD,KAAYR,GAOzC,IAAIW,EAJAlB,EAAc,KAEhBA,GAAe,GAGG,IAAhBI,GACFA,EAAc,EACdc,EAAa,GAEbA,EAA6C,KAA/BlB,EAAcmB,KAAKC,UAEnCX,EAAcS,EACf,CACD,IAAIG,GAAU,EAEd,SAASC,EAAKC,GACRF,IAGJA,GAAU,EACVR,IACIR,IAGmB,OAAnBJ,GACGsB,IACHnB,EAAc,GAEhBU,aAAab,GACbQ,EAAc,IAETc,IACHnB,EAAc,IAGnB,CAMD,OALAK,EAAc,GACdP,EAAkBS,YAAW,KAC3BR,GAAa,EACbmB,GAAK,EAAL,GACCvB,GACIuB,CACR,CASK,SAAUA,GAAK1K,GACnBA,GAAG,EACL;;;;;;;;;;;;;;;;GC5HM,SAAU4K,GAAaC,GAC3B,YAAa,IAANA,CACR,CAGK,SAAUC,GAAWD,GACzB,MAAoB,oBAANA,CACf,CAEK,SAAUE,GAAiBF,GAC/B,MAAoB,kBAANA,IAAmBG,MAAMC,QAAQJ,EAChD,CAEK,SAAUK,GAASL,GACvB,MAAoB,kBAANA,GAAkBA,aAAaM,MAC9C,CAEK,SAAUC,GAAaP,GAC3B,OAAOQ,MAAyBR,aAAaS,IAC9C,C,SAEeD,KACd,MAAuB,qBAATC,IACf,CAEK,SAAUC,GACdC,EACAC,EACAC,EACAvJ,GAEA,GAAIA,EAAQsJ,EACV,MAAMpG,GACkB,sBAAAmG,gBAAuBC,iBAGjD,GAAItJ,EAAQuJ,EACV,MAAMrG,GACkB,sBAAAmG,gBAAuBE,aAGnD;;;;;;;;;;;;;;;;YCtCgBC,GACdC,EACAxF,EACAyF,GAEA,IAAIC,EAAS1F,EAIb,OAHgB,MAAZyF,IACFC,EAAS,WAAW1F,KAEf,GAAGyF,OAAcC,OAAYF,GACrC,CAEK,SAAUG,GAAgBC,GAC9B,MAAMhG,EAASC,mBACf,IAAIgG,EAAY,IAChB,IAAK,MAAMrL,KAAOoL,EAChB,GAAIA,EAAOE,eAAetL,GAAM,CAC9B,MAAMuL,EAAWnG,EAAOpF,GAAO,IAAMoF,EAAOgG,EAAOpL,IACnDqL,EAAYA,EAAYE,EAAW,GACpC,CAKH,OADAF,EAAYA,EAAUpF,MAAM,GAAI,GACzBoF,CACT;;;;;;;;;;;;;;;;GCyBA,IAAYG,IAAZ,SAAYA,GACVA,EAAAA,EAAAA,YAAAA,GAAAA,WACAA,EAAAA,EAAAA,iBAAAA,GAAAA,gBACAA,EAAAA,EAAAA,SAAAA,GAAAA,OAHF,GAAYA,KAAAA,GAIX;;;;;;;;;;;;;;;;;AC1BD,MAAMC,GAUJ9I,YACU+I,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAVA,KAAIV,KAAJA,EACA,KAAOC,QAAPA,EACA,KAAQC,SAARA,EACA,KAAKC,MAALA,EACA,KAAaC,cAAbA,EACA,KAAqBC,sBAArBA,EACA,KAASC,UAATA,EACA,KAAcC,eAAdA,EACA,KAAQC,SAARA,EACA,KAAiBC,kBAAjBA,EACA,KAAkBC,mBAAlBA,EApBF,KAAkBC,mBAAyB,KAC3C,KAAUC,WAAqB,KAI/B,KAASC,WAAY,EACrB,KAAUC,YAAY,EAgB5BtJ,KAAK4E,SAAW,IAAIC,SAAQ,CAAC0E,EAASzE,KACpC9E,KAAKwJ,SAAWD,EAChBvJ,KAAKyJ,QAAU3E,EACf9E,KAAK0J,QAAL,GAEH,CAKOA,SACN,MAAMC,EAGM,CAACC,EAAiB7I,KAC5B,GAAIA,EAEF,YADA6I,GAAgB,EAAO,IAAIC,IAAiB,EAAO,MAAM,IAG3D,MAAMC,EAAa9J,KAAKkJ,qBACxBlJ,KAAKmJ,mBAAqBW,EAE1B,MAAMC,EACJC,IACE,MAAMC,EAASD,EAAcC,OACvBC,EAAQF,EAAcG,iBACxBH,EAAcE,OACb,EAC0B,OAA3BlK,KAAKiJ,mBACPjJ,KAAKiJ,kBAAkBgB,EAAQC,EAChC,EAE0B,OAA3BlK,KAAKiJ,mBACPa,EAAWM,0BAA0BL,GAKvCD,EACGO,KAAKrK,KAAKwI,KAAMxI,KAAKyI,QAASzI,KAAK2I,MAAO3I,KAAK0I,UAC/C4B,MAAK,KAC2B,OAA3BtK,KAAKiJ,mBACPa,EAAWS,6BAA6BR,GAE1C/J,KAAKmJ,mBAAqB,KAC1B,MAAMqB,EAAYV,EAAWW,iBAAmBnC,GAAUoC,SACpDC,EAASb,EAAWc,YAC1B,IAAKJ,GAAaxK,KAAK6K,mBAAmBF,GAAS,CACjD,MAAMG,EAAchB,EAAWW,iBAAmBnC,GAAUyC,MAK5D,YAJAnB,GACE,EACA,IAAIC,IAAiB,EAAO,KAAMiB,GAGrC,CACD,MAAME,GAAsD,IAAxChL,KAAK4I,cAAcqC,QAAQN,GAC/Cf,GAAgB,EAAM,IAAIC,GAAiBmB,EAAalB,GAAxD,GAlBJ,EA0BIoB,EAGM,CAACC,EAAoBR,KAC/B,MAAMpB,EAAUvJ,KAAKwJ,SACf1E,EAAS9E,KAAKyJ,QACdK,EAAaa,EAAOb,WAC1B,GAAIa,EAAOS,eACT,IACE,MAAMC,EAASrL,KAAK8I,UAAUgB,EAAYA,EAAWwB,eACjDxE,GAAUuE,GACZ9B,EAAQ8B,GAER9B,GAIH,CAFC,MAAO9G,GACPqC,EAAOrC,EACR,MAED,GAAmB,OAAfqH,EAAqB,CACvB,MAAMyB,EAAMjL,KACZiL,EAAIxL,eAAiB+J,EAAW0B,eAC5BxL,KAAK+I,eACPjE,EAAO9E,KAAK+I,eAAee,EAAYyB,IAEvCzG,EAAOyG,EAEV,MACC,GAAIZ,EAAO5J,SAAU,CACnB,MAAMwK,EAAMvL,KAAKsJ,WAAa9H,KAAeT,KAC7C+D,EAAOyG,EACR,KAAM,CACL,MAAMA,EAAMzK,KACZgE,EAAOyG,EACR,CAEJ,EAECvL,KAAKqJ,UACP6B,GAAY,EAAO,IAAIrB,IAAiB,EAAO,MAAM,IAErD7J,KAAKoJ,WAAalE,GAAMyE,EAAcuB,EAAalL,KAAKgJ,SAE3D,CAGDjE,aACE,OAAO/E,KAAK4E,QACb,CAGDI,OAAOyG,GACLzL,KAAKqJ,WAAY,EACjBrJ,KAAKsJ,WAAamC,IAAa,EACP,OAApBzL,KAAKoJ,YACPxC,GAAK5G,KAAKoJ,YAEoB,OAA5BpJ,KAAKmJ,oBACPnJ,KAAKmJ,mBAAmBuC,OAE3B,CAEOb,mBAAmBF,GAGzB,MAAMgB,EAAoBhB,GAAU,KAAOA,EAAS,IAC9CiB,EAAkB,CAEtB,IAEA,KAEIC,GAAwD,IAArCD,EAAgBX,QAAQN,GAC3CmB,GAC4C,IAAhD9L,KAAK6I,sBAAsBoC,QAAQN,GACrC,OAAOgB,GAAqBE,GAAoBC,CACjD,E,MAOUjC,GAMXpK,YACS2L,EACAtB,EACP/I,GAFO,KAAcqK,eAAdA,EACA,KAAUtB,WAAVA,EAGP9J,KAAKe,WAAaA,CACnB,EAGa,SAAAgL,GACdC,EACAC,GAEkB,OAAdA,GAAsBA,EAAUjK,OAAS,IAC3CgK,EAAQ,iBAAmB,YAAcC,EAE5C,CAEe,SAAAC,GACdF,EACAG,GAEAH,EAAQ,8BACN,UAAY,OAAAG,QAAe,IAAfA,EAAAA,EAAmB,aAClC,CAEe,SAAAC,GAAgBJ,EAAkBK,GAC5CA,IACFL,EAAQ,oBAAsBK,EAEjC,CAEe,SAAAC,GACdN,EACAO,GAEsB,OAAlBA,IACFP,EAAQ,uBAAyBO,EAEpC,CAEe,SAAAC,GACdC,EACAJ,EACAJ,EACAM,EACAG,EACAP,GAEA,MAAMhE,EAAYF,GAAgBwE,EAAYE,WACxC1L,EAAMwL,EAAYxL,IAAMkH,EACxB6D,EAAU9L,OAAO0M,OAAO,CAAC,EAAGH,EAAYT,SAK9C,OAJAI,GAAgBJ,EAASK,GACzBN,GAAeC,EAASC,GACxBC,GAAkBF,EAASG,GAC3BG,GAAmBN,EAASO,GACrB,IAAIhE,GACTtH,EACAwL,EAAYI,OACZb,EACAS,EAAYK,KACZL,EAAYM,aACZN,EAAYO,qBACZP,EAAYvG,QACZuG,EAAYQ,aACZR,EAAYpH,QACZoH,EAAYS,iBACZR,EAEJ;;;;;;;;;;;;;;;;GC/QA,SAASS,KACP,MAA2B,qBAAhBC,YACFA,YAC+B,qBAAtBC,kBACTA,uBAEP,CAEH,CAQe,eAAWxH,GACzB,MAAMuH,EAAcD,KACpB,QAAoBG,IAAhBF,EAA2B,CAC7B,MAAMG,EAAK,IAAIH,EACf,IAAK,IAAIhJ,EAAI,EAAGA,EAAIyB,EAAK7D,OAAQoC,IAC/BmJ,EAAGC,OAAO3H,EAAKzB,IAEjB,OAAOmJ,EAAGE,SACX,CACC,GAAIlG,KACF,OAAO,IAAIC,KAAK3B,GAEhB,MAAM,IAAItG,GAER,gFAIP,C,SAWemO,GAAUC,EAAYzI,EAAe0I,GACnD,OAAID,EAAKE,YACAF,EAAKE,YAAY3I,EAAO0I,GACtBD,EAAKG,SACPH,EAAKG,SAAS5I,EAAO0I,GACnBD,EAAK5K,MACP4K,EAAK5K,MAAMmC,EAAO0I,GAEpB,IACT;;;;;;;;;;;;;;;;GC5DM,SAAUG,GAAaC,GAC3B,OAAOC,KAAKD,EACd;;;;;;;;;;;;;;;;GCSa,MAAAE,GAAe,CAQ1BC,IAAK,MAOLC,OAAQ,SAORC,UAAW,YAUXC,SAAU,Y,MAGCC,GAGX9O,YAAmB+O,EAAkBC,GAAlB,KAAID,KAAJA,EACjBxO,KAAKyO,YAAcA,GAAe,IACnC,EAMa,SAAAC,GACd/M,EACAgN,GAEA,OAAQhN,GACN,KAAKuM,GAAaC,IAChB,OAAO,IAAII,GAAWK,GAAWD,IACnC,KAAKT,GAAaE,OAClB,KAAKF,GAAaG,UAChB,OAAO,IAAIE,GAAWM,GAAalN,EAAQgN,IAC7C,KAAKT,GAAaI,SAChB,OAAO,IAAIC,GACTO,GAAcH,GACdI,GAAoBJ,IAO1B,MAAMrO,IACP,CAEK,SAAUsO,GAAWvQ,GACzB,MAAM2Q,EAAc,GACpB,IAAK,IAAI5K,EAAI,EAAGA,EAAI/F,EAAM2D,OAAQoC,IAAK,CACrC,IAAI6K,EAAI5Q,EAAM6Q,WAAW9K,GACzB,GAAI6K,GAAK,IACPD,EAAEG,KAAKF,QAEP,GAAIA,GAAK,KACPD,EAAEG,KAAK,IAAOF,GAAK,EAAI,IAAW,GAAJA,QAE9B,GAAoB,SAAX,MAAJA,GAAsB,CAEzB,MAAMG,EACJhL,EAAI/F,EAAM2D,OAAS,GAA2C,SAAX,MAA1B3D,EAAM6Q,WAAW9K,EAAI,IAChD,GAAKgL,EAGE,CACL,MAAMC,EAAKJ,EACLK,EAAKjR,EAAM6Q,aAAa9K,GAC9B6K,EAAI,OAAe,KAALI,IAAc,GAAY,KAALC,EACnCN,EAAEG,KACA,IAAOF,GAAK,GACZ,IAAQA,GAAK,GAAM,GACnB,IAAQA,GAAK,EAAK,GAClB,IAAW,GAAJA,EAEV,MAXCD,EAAEG,KAAK,IAAK,IAAK,IAYpB,MACqB,SAAX,MAAJF,GAEHD,EAAEG,KAAK,IAAK,IAAK,KAEjBH,EAAEG,KAAK,IAAOF,GAAK,GAAK,IAAQA,GAAK,EAAK,GAAK,IAAW,GAAJA,EAK/D,CACD,OAAO,IAAIM,WAAWP,EACvB,CAEK,SAAUQ,GAAqBnR,GACnC,IAAIoR,EACJ,IACEA,EAAUpM,mBAAmBhF,EAG9B,CAFC,MAAOoE,GACP,MAAMf,GAAcwM,GAAaI,SAAU,sBAC5C,CACD,OAAOM,GAAWa,EACnB,CAEe,SAAAZ,GAAalN,EAAsBtD,GACjD,OAAQsD,GACN,KAAKuM,GAAaE,OAAQ,CACxB,MAAMsB,GAAmC,IAAxBrR,EAAM4M,QAAQ,KACzB0E,GAAmC,IAAxBtR,EAAM4M,QAAQ,KAC/B,GAAIyE,GAAYC,EAAU,CACxB,MAAMC,EAAcF,EAAW,IAAM,IACrC,MAAMhO,GACJC,EACA,sBACEiO,EACA,oCAEL,CACD,KACD,CACD,KAAK1B,GAAaG,UAAW,CAC3B,MAAMwB,GAAkC,IAAxBxR,EAAM4M,QAAQ,KACxB6E,GAAmC,IAAxBzR,EAAM4M,QAAQ,KAC/B,GAAI4E,GAAWC,EAAU,CACvB,MAAMF,EAAcC,EAAU,IAAM,IACpC,MAAMnO,GACJC,EACA,sBAAwBiO,EAAc,iCAEzC,CACDvR,EAAQA,EAAMmF,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAC/C,KACD,EAIH,IAAIuM,EACJ,IACEA,EAAQhC,GAAa1P,EAGtB,CAFC,MAAOoE,GACP,MAAMf,GAAcC,EAAQ,0BAC7B,CACD,MAAMqO,EAAQ,IAAIT,WAAWQ,EAAM/N,QACnC,IAAK,IAAIoC,EAAI,EAAGA,EAAI2L,EAAM/N,OAAQoC,IAChC4L,EAAM5L,GAAK2L,EAAMb,WAAW9K,GAE9B,OAAO4L,CACR,CAED,MAAMC,GAKJxQ,YAAYyQ,GAJZ,KAAMC,QAAY,EAClB,KAAW1B,YAAkB,KAI3B,MAAM2B,EAAUF,EAAQG,MAAM,mBAC9B,GAAgB,OAAZD,EACF,MAAM1O,GACJwM,GAAaI,SACb,yDAGJ,MAAMgC,EAASF,EAAQ,IAAM,KACf,MAAVE,IACFtQ,KAAKmQ,OAASI,GAASD,EAAQ,WAC/BtQ,KAAKyO,YAAczO,KAAKmQ,OACpBG,EAAOE,UAAU,EAAGF,EAAOtO,OAAS,UAAUA,QAC9CsO,GAENtQ,KAAKyQ,KAAOP,EAAQM,UAAUN,EAAQjF,QAAQ,KAAO,EACtD,EAGG,SAAU6D,GAAc4B,GAC5B,MAAMC,EAAQ,IAAIV,GAAaS,GAC/B,OAAIC,EAAMR,OACDtB,GAAaX,GAAaE,OAAQuC,EAAMF,MAExCjB,GAAqBmB,EAAMF,KAErC,CAEK,SAAU1B,GAAoB2B,GAClC,MAAMC,EAAQ,IAAIV,GAAaS,GAC/B,OAAOC,EAAMlC,WACd,CAED,SAAS8B,GAASK,EAAWhD,GAC3B,MAAMiD,EAAaD,EAAE5O,QAAU4L,EAAI5L,OACnC,QAAK6O,GAIED,EAAEJ,UAAUI,EAAE5O,OAAS4L,EAAI5L,UAAY4L,CAChD;;;;;;;;;;;;;;;;SC/MakD,GAKXrR,YAAY+O,EAAuCuC,GACjD,IAAIC,EAAe,EACfC,EAAmB,GACnB3J,GAAakH,IACfxO,KAAKkR,MAAQ1C,EACbwC,EAAQxC,EAAcwC,KACtBC,EAAYzC,EAAc1S,MACjB0S,aAAgB2C,aACrBJ,EACF/Q,KAAKkR,MAAQ,IAAI3B,WAAWf,IAE5BxO,KAAKkR,MAAQ,IAAI3B,WAAWf,EAAK4C,YACjCpR,KAAKkR,MAAMG,IAAI,IAAI9B,WAAWf,KAEhCwC,EAAOhR,KAAKkR,MAAMlP,QACTwM,aAAgBe,aACrBwB,EACF/Q,KAAKkR,MAAQ1C,GAEbxO,KAAKkR,MAAQ,IAAI3B,WAAWf,EAAKxM,QACjChC,KAAKkR,MAAMG,IAAI7C,IAEjBwC,EAAOxC,EAAKxM,QAEdhC,KAAKsR,MAAQN,EACbhR,KAAKuR,MAAQN,CACd,CAEDD,OACE,OAAOhR,KAAKsR,KACb,CAEDxV,OACE,OAAOkE,KAAKuR,KACb,CAEDxO,MAAMyO,EAAmBC,GACvB,GAAInK,GAAatH,KAAKkR,OAAQ,CAC5B,MAAMQ,EAAW1R,KAAKkR,MAChBS,EAASjE,GAAUgE,EAAUF,EAAWC,GAC9C,OAAe,OAAXE,EACK,KAEF,IAAIb,GAAQa,EACpB,CAAM,CACL,MAAM5O,EAAQ,IAAIwM,WACfvP,KAAKkR,MAAqBU,OAC3BJ,EACAC,EAAUD,GAEZ,OAAO,IAAIV,GAAQ/N,GAAO,EAC3B,CACF,CAEa,kBAAI8C,GAChB,GAAI0B,KAAuB,CACzB,MAAMsK,EAA4ChM,EAAKiM,KACpDC,GACKA,aAAejB,GACViB,EAAIb,MAEJa,IAIb,OAAO,IAAIjB,GAAQrD,GAAQ3H,MAAM,KAAM+L,GACxC,CAAM,CACL,MAAMG,EAA4BnM,EAAKiM,KACpCC,GACK3K,GAAS2K,GACJrD,GAAeR,GAAaC,IAAK4D,GAAevD,KAG/CuD,EAAgBb,QAI9B,IAAIe,EAAc,EAClBD,EAAYE,SAASlC,IACnBiC,GAAejC,EAAMoB,UAArB,IAEF,MAAMe,EAAS,IAAI5C,WAAW0C,GAC9B,IAAIG,EAAQ,EAMZ,OALAJ,EAAYE,SAASlC,IACnB,IAAK,IAAI5L,EAAI,EAAGA,EAAI4L,EAAMhO,OAAQoC,IAChC+N,EAAOC,KAAWpC,EAAM5L,EACzB,IAEI,IAAI0M,GAAQqB,GAAQ,EAC5B,CACF,CAEDE,aACE,OAAOrS,KAAKkR,KACb;;;;;;;;;;;;;;;;GC9GG,SAAUoB,GACd1B,GAEA,IAAI2B,EACJ,IACEA,EAAMC,KAAKC,MAAM7B,EAGlB,CAFC,MAAOnO,GACP,OAAO,IACR,CACD,OAAIwE,GAAiBsL,GACZA,EAEA,IAEX;;;;;;;;;;;;;;;;GCZM,SAAUG,GAAOlS,GACrB,GAAoB,IAAhBA,EAAKwB,OACP,OAAO,KAET,MAAMoQ,EAAQ5R,EAAKmS,YAAY,KAC/B,IAAe,IAAXP,EACF,MAAO,GAET,MAAMQ,EAAUpS,EAAKuC,MAAM,EAAGqP,GAC9B,OAAOQ,CACR,CAEe,SAAAC,GAAMrS,EAAcsS,GAClC,MAAMC,EAAqBD,EACxBE,MAAM,KACNC,QAAOC,GAAaA,EAAUlR,OAAS,IACvCmR,KAAK,KACR,OAAoB,IAAhB3S,EAAKwB,OACA+Q,EAEAvS,EAAO,IAAMuS,CAEvB,CAQK,SAAUK,GAAc5S,GAC5B,MAAM4R,EAAQ5R,EAAKmS,YAAY,IAAKnS,EAAKwB,OAAS,GAClD,OAAe,IAAXoQ,EACK5R,EAEAA,EAAKuC,MAAMqP,EAAQ,EAE9B;;;;;;;;;;;;;;;;GC/BgB,SAAAiB,GAAYC,EAAoBjV,GAC9C,OAAOA,CACR,CAED,MAAMkV,GAKJ9T,YACS+T,EACPC,EACAC,EACAC,GAHO,KAAMH,OAANA,EAKPxT,KAAKyT,MAAQA,GAASD,EACtBxT,KAAK0T,WAAaA,EAClB1T,KAAK2T,MAAQA,GAASN,EACvB,EAMH,IAAIO,GAA6B,KAE3B,SAAUC,GAAUC,GACxB,OAAK1M,GAAS0M,IAAaA,EAAS9R,OAAS,EACpC8R,EAEAV,GAAcU,EAExB,C,SAEeC,KACd,GAAIH,GACF,OAAOA,GAET,MAAMI,EAAqB,GAM3B,SAASC,EACPC,EACAJ,GAEA,OAAOD,GAAUC,EAClB,CAVDE,EAAS7E,KAAK,IAAIoE,GAAgB,WAClCS,EAAS7E,KAAK,IAAIoE,GAAgB,eAClCS,EAAS7E,KAAK,IAAIoE,GAAgB,mBAClCS,EAAS7E,KAAK,IAAIoE,GAAgB,OAAQ,YAAY,IAQtD,MAAMY,EAAc,IAAIZ,GAAgB,QAOxC,SAASa,EACPF,EACAlD,GAEA,YAAa1D,IAAT0D,EACKqD,OAAOrD,GAEPA,CAEV,CAfDmD,EAAYR,MAAQM,EACpBD,EAAS7E,KAAKgF,GAed,MAAMG,EAAc,IAAIf,GAAgB,QAaxC,OAZAe,EAAYX,MAAQS,EACpBJ,EAAS7E,KAAKmF,GACdN,EAAS7E,KAAK,IAAIoE,GAAgB,gBAClCS,EAAS7E,KAAK,IAAIoE,GAAgB,YAClCS,EAAS7E,KAAK,IAAIoE,GAAgB,UAAW,MAAM,IACnDS,EAAS7E,KAAK,IAAIoE,GAAgB,eAAgB,MAAM,IACxDS,EAAS7E,KAAK,IAAIoE,GAAgB,qBAAsB,MAAM,IAC9DS,EAAS7E,KAAK,IAAIoE,GAAgB,kBAAmB,MAAM,IAC3DS,EAAS7E,KAAK,IAAIoE,GAAgB,kBAAmB,MAAM,IAC3DS,EAAS7E,KAAK,IAAIoE,GAAgB,cAAe,MAAM,IACvDS,EAAS7E,KAAK,IAAIoE,GAAgB,WAAY,kBAAkB,IAChEK,GAAYI,EACLJ,EACR,CAEe,SAAAW,GAAOjB,EAAoBkB,GACzC,SAASC,IACP,MAAM/T,EAAiB4S,EAAS,UAC1B9S,EAAe8S,EAAS,YACxBzQ,EAAM,IAAIhB,GAASnB,EAAQF,GACjC,OAAOgU,EAAQE,sBAAsB7R,EACtC,CACD3C,OAAOyU,eAAerB,EAAU,MAAO,CAAEsB,IAAKH,GAC/C,C,SAEeI,GACdL,EACAM,EACAd,GAEA,MAAMV,EAAqB,CAC3BA,KAAmB,QACbyB,EAAMf,EAAShS,OACrB,IAAK,IAAIoC,EAAI,EAAGA,EAAI2Q,EAAK3Q,IAAK,CAC5B,MAAM4Q,EAAUhB,EAAS5P,GACzBkP,EAAS0B,EAAQvB,OAAUuB,EAA6BrB,MACtDL,EACAwB,EAASE,EAAQxB,QAEpB,CAED,OADAe,GAAOjB,EAAUkB,GACVlB,CACR,C,SAEe2B,GACdT,EACAU,EACAlB,GAEA,MAAMzB,EAAMD,GAAiB4C,GAC7B,GAAY,OAAR3C,EACF,OAAO,KAET,MAAMuC,EAAWvC,EACjB,OAAOsC,GAAaL,EAASM,EAAUd,EACxC,CAEK,SAAUmB,GACd7B,EACA4B,EACA5S,EACAyF,GAEA,MAAMwK,EAAMD,GAAiB4C,GAC7B,GAAY,OAAR3C,EACF,OAAO,KAET,IAAKnL,GAASmL,EAAI,mBAGhB,OAAO,KAET,MAAM6C,EAAiB7C,EAAI,kBAC3B,GAAsB,IAAlB6C,EAAOpT,OACT,OAAO,KAET,MAAME,EAASC,mBACTkT,EAAaD,EAAOpC,MAAM,KAC1BsC,EAAOD,EAAWvD,KAAKyD,IAC3B,MAAM7U,EAAiB4S,EAAS,UAC1B9S,EAAe8S,EAAS,YACxBxL,EAAU,MAAQ5F,EAAOxB,GAAU,MAAQwB,EAAO1B,GAClDgV,EAAO3N,GAAQC,EAASxF,EAAMyF,GAC9B0N,EAAcxN,GAAgB,CAClC/K,IAAK,QACLqY,UAEF,OAAOC,EAAOC,CAAd,IAEF,OAAOH,EAAK,EACb,CAEe,SAAAI,GACdpC,EACAU,GAEA,MAAMc,EAEF,CAAC,EACCC,EAAMf,EAAShS,OACrB,IAAK,IAAIoC,EAAI,EAAGA,EAAI2Q,EAAK3Q,IAAK,CAC5B,MAAM4Q,EAAUhB,EAAS5P,GACrB4Q,EAAQtB,WACVoB,EAASE,EAAQxB,QAAUF,EAAS0B,EAAQvB,OAE/C,CACD,OAAOjB,KAAKmD,UAAUb,EACxB;;;;;;;;;;;;;;;;SC3Jac,GAcXnW,YACSwB,EACA4L,EAQA3G,EACAb,GAVA,KAAGpE,IAAHA,EACA,KAAM4L,OAANA,EAQA,KAAO3G,QAAPA,EACA,KAAOb,QAAPA,EAxBT,KAASsH,UAAc,CAAC,EACxB,KAAOX,QAAY,CAAC,EACpB,KAAIc,KAAsC,KAC1C,KAAYG,aAAwB,KAMpC,KAAgBC,iBAA8C,KAC9D,KAAAH,aAAyB,CAAC,KAC1B,KAAoBC,qBAAa,EAc7B;;;;;;;;;;;;;;;;GCxBA,SAAU6I,GAAaC,GAC3B,IAAKA,EACH,MAAMxV,IAET,CAEe,SAAAyV,GACdvB,EACAR,GAEA,SAAS9N,EAAQ8P,EAAyBC,GACxC,MAAM3C,EAAW2B,GAAmBT,EAASyB,EAAMjC,GAEnD,OADA6B,GAA0B,OAAbvC,GACNA,CACR,CACD,OAAOpN,CACR,CAce,SAAAgQ,GACd1B,EACAR,GAEA,SAAS9N,EAAQ8P,EAAyBC,GACxC,MAAM3C,EAAW2B,GAAmBT,EAASyB,EAAMjC,GAEnD,OADA6B,GAA0B,OAAbvC,GACN6B,GACL7B,EACA2C,EACAzB,EAAQlS,KACRkS,EAAQ2B,UAEX,CACD,OAAOjQ,CACR,CAEK,SAAUkQ,GACd1T,GAEA,SAASuK,EACP+I,EACAzK,GAEA,IAAI8K,EAuBJ,OAhBIA,EANoB,MAApBL,EAAIpL,YAIJoL,EAAIxK,eAAe8K,SAAS,uCAEnB1V,KAEAD,KAGa,MAApBqV,EAAIpL,YACGnK,GAAciC,EAAShC,QAER,MAApBsV,EAAIpL,YACG/J,GAAa6B,EAASlC,MAEtB+K,EAIf8K,EAAOtW,eAAiBwL,EAAIxL,eACrBsW,CACR,CACD,OAAOpJ,CACR,CAEK,SAAUsJ,GACd7T,GAEA,MAAM8T,EAASJ,GAAmB1T,GAElC,SAASuK,EACP+I,EACAzK,GAEA,IAAI8K,EAASG,EAAOR,EAAKzK,GAKzB,OAJwB,MAApByK,EAAIpL,cACNyL,EAAS9V,GAAemC,EAASlC,OAEnC6V,EAAOtW,eAAiBwL,EAAIxL,eACrBsW,CACR,CACD,OAAOpJ,CACR,C,SAEewJ,GACdjC,EACA9R,EACAsR,GAEA,MAAMlM,EAAUpF,EAAST,gBACnBhB,EAAM4G,GAAQC,EAAS0M,EAAQlS,KAAMkS,EAAQ2B,WAC7CtJ,EAAS,MACTxH,EAAUmP,EAAQkC,sBAClBjK,EAAc,IAAImJ,GACtB3U,EACA4L,EACAkJ,GAAgBvB,EAASR,GACzB3O,GAGF,OADAoH,EAAYQ,aAAesJ,GAAmB7T,GACvC+J,CACR,C,SA8DekK,GACdnC,EACA9R,EACAsR,GAEA,MAAMlM,EAAUpF,EAAST,gBACnBhB,EAAM4G,GAAQC,EAAS0M,EAAQlS,KAAMkS,EAAQ2B,WAC7CtJ,EAAS,MACTxH,EAAUmP,EAAQkC,sBAClBjK,EAAc,IAAImJ,GACtB3U,EACA4L,EACAqJ,GAAmB1B,EAASR,GAC5B3O,GAGF,OADAoH,EAAYQ,aAAesJ,GAAmB7T,GACvC+J,CACR,CA0Ce,SAAAmK,GACdtD,EACA3F,GAEA,OACG2F,GAAYA,EAAS,gBACrB3F,GAAQA,EAAK7R,QACd,0BAEH,C,SAEe+a,GACdnU,EACAiL,EACA2F,GAEA,MAAMwD,EAAgB5W,OAAO0M,OAAO,CAAC,EAAG0G,GAMxC,OALAwD,EAAc,YAAcpU,EAASlC,KACrCsW,EAAc,QAAUnJ,EAAKqD,OACxB8F,EAAc,iBACjBA,EAAc,eAAiBF,GAAsB,KAAMjJ,IAEtDmJ,CACR,CAKK,SAAUC,GACdvC,EACA9R,EACAsR,EACArG,EACA2F,GAEA,MAAMxL,EAAUpF,EAASN,sBACnB4J,EAAsC,CAC1C,yBAA0B,aAG5B,SAASgL,IACP,IAAIC,EAAM,GACV,IAAK,IAAI7S,EAAI,EAAGA,EAAI,EAAGA,IACrB6S,GAAYxQ,KAAKC,SAASwQ,WAAWnU,MAAM,GAE7C,OAAOkU,CACR,CACD,MAAME,EAAWH,IACjBhL,EAAQ,gBAAkB,+BAAiCmL,EAC3D,MAAMC,EAAYP,GAAmBnU,EAAUiL,EAAM2F,GAC/C+D,EAAiB3B,GAAiB0B,EAAWpD,GAC7CsD,EACJ,KACAH,EADA,4DAIAE,EACA,SACAF,EANA,qBASAC,EAAU,eACV,WACIG,EAAe,SAAWJ,EAAW,KACrCrK,EAAOgE,GAAQrD,QAAQ6J,EAAa3J,EAAM4J,GAChD,GAAa,OAATzK,EACF,MAAM1L,KAER,MAAMuL,EAAuB,CAAE5P,KAAMqa,EAAU,aACzCnW,EAAM4G,GAAQC,EAAS0M,EAAQlS,KAAMkS,EAAQ2B,WAC7CtJ,EAAS,OACTxH,EAAUmP,EAAQgD,mBAClB/K,EAAc,IAAImJ,GACtB3U,EACA4L,EACAkJ,GAAgBvB,EAASR,GACzB3O,GAMF,OAJAoH,EAAYE,UAAYA,EACxBF,EAAYT,QAAUA,EACtBS,EAAYK,KAAOA,EAAKuF,aACxB5F,EAAYQ,aAAemJ,GAAmB1T,GACvC+J,CACR,C,MASYgL,GAIXhY,YACSiY,EACAxN,EACPyN,EACArE,GAHO,KAAOoE,QAAPA,EACA,KAAKxN,MAALA,EAIPlK,KAAK2X,YAAcA,EACnB3X,KAAKsT,SAAWA,GAAY,IAC7B,EAGa,SAAAsE,GACd5B,EACA6B,GAEA,IAAIlN,EAAwB,KAC5B,IACEA,EAASqL,EAAI8B,kBAAkB,uBAGhC,CAFC,MAAOrV,GACPoT,IAAa,EACd,CACD,MAAMkC,EAAgBF,GAAW,CAAC,UAElC,OADAhC,KAAelL,IAA6C,IAAnCoN,EAAc9M,QAAQN,IACxCA,CACR,CAEK,SAAUqN,GACdxD,EACA9R,EACAsR,EACArG,EACA2F,GAEA,MAAMxL,EAAUpF,EAASN,sBACnB6V,EAAoBpB,GAAmBnU,EAAUiL,EAAM2F,GACvD3G,EAAuB,CAAE5P,KAAMkb,EAAkB,aACjDhX,EAAM4G,GAAQC,EAAS0M,EAAQlS,KAAMkS,EAAQ2B,WAC7CtJ,EAAS,OACTb,EAAU,CACd,yBAA0B,YAC1B,wBAAyB,QACzB,sCAA0C,GAAA2B,EAAKqD,SAC/C,oCAAqCiH,EAAkB,eACvD,eAAgB,mCAEZnL,EAAO4I,GAAiBuC,EAAmBjE,GAC3C3O,EAAUmP,EAAQgD,mBAExB,SAAStR,EAAQ8P,GAEf,IAAI/U,EADJ2W,GAAmB5B,GAEnB,IACE/U,EAAM+U,EAAI8B,kBAAkB,oBAG7B,CAFC,MAAOrV,GACPoT,IAAa,EACd,CAED,OADAA,GAAazO,GAASnG,IACfA,CACR,CACD,MAAMwL,EAAc,IAAImJ,GAAY3U,EAAK4L,EAAQ3G,EAASb,GAK1D,OAJAoH,EAAYE,UAAYA,EACxBF,EAAYT,QAAUA,EACtBS,EAAYK,KAAOA,EACnBL,EAAYQ,aAAemJ,GAAmB1T,GACvC+J,CACR,CAKK,SAAUyL,GACd1D,EACA9R,EACAzB,EACA0M,GAEA,MAAM3B,EAAU,CAAE,wBAAyB,SAE3C,SAAS9F,EAAQ8P,GACf,MAAMrL,EAASiN,GAAmB5B,EAAK,CAAC,SAAU,UAClD,IAAImC,EAA4B,KAChC,IACEA,EAAanC,EAAI8B,kBAAkB,8BAGpC,CAFC,MAAOrV,GACPoT,IAAa,EACd,CAEIsC,GAEHtC,IAAa,GAGf,MAAM7E,EAAOqD,OAAO8D,GAEpB,OADAtC,IAAcuC,MAAMpH,IACb,IAAIyG,GAAsBzG,EAAMrD,EAAKqD,OAAmB,UAAXrG,EACrD,CACD,MAAMkC,EAAS,OACTxH,EAAUmP,EAAQgD,mBAClB/K,EAAc,IAAImJ,GAAY3U,EAAK4L,EAAQ3G,EAASb,GAG1D,OAFAoH,EAAYT,QAAUA,EACtBS,EAAYQ,aAAemJ,GAAmB1T,GACvC+J,CACR,CAMM,MAAM4L,GAAsC,O,SAWnCC,GACd5V,EACA8R,EACAvT,EACA0M,EACA4K,EACAvE,EACArJ,EACAuC,GAIA,MAAMsL,EAAU,IAAIf,GAAsB,EAAG,GAQ7C,GAPI9M,GACF6N,EAAQd,QAAU/M,EAAO+M,QACzBc,EAAQtO,MAAQS,EAAOT,QAEvBsO,EAAQd,QAAU,EAClBc,EAAQtO,MAAQyD,EAAKqD,QAEnBrD,EAAKqD,SAAWwH,EAAQtO,MAC1B,MAAM7I,KAER,MAAMoX,EAAYD,EAAQtO,MAAQsO,EAAQd,QAC1C,IAAIgB,EAAgBD,EAChBF,EAAY,IACdG,EAAgBjS,KAAKkS,IAAID,EAAeH,IAE1C,MAAM/G,EAAYgH,EAAQd,QACpBjG,EAAUD,EAAYkH,EACtBE,EACJF,IAAkBD,EAAY,mBAAqB,SAC/CzM,EAAU,CACd,wBAAyB4M,EACzB,uBAAwB,GAAGJ,EAAQd,WAE/B5K,EAAOa,EAAK5K,MAAMyO,EAAWC,GACnC,GAAa,OAAT3E,EACF,MAAM1L,KAGR,SAAS8E,EACP8P,EACAC,GAMA,MAAM4C,EAAejB,GAAmB5B,EAAK,CAAC,SAAU,UAClD8C,EAAaN,EAAQd,QAAUgB,EAC/B1H,EAAOrD,EAAKqD,OAClB,IAAIsC,EAMJ,OAJEA,EADmB,UAAjBuF,EACS9C,GAAgBvB,EAASR,EAAzB+B,CAAmCC,EAAKC,GAExC,KAEN,IAAIwB,GACTqB,EACA9H,EACiB,UAAjB6H,EACAvF,EAEH,CACD,MAAMzG,EAAS,OACTxH,EAAUmP,EAAQgD,mBAClB/K,EAAc,IAAImJ,GAAY3U,EAAK4L,EAAQ3G,EAASb,GAK1D,OAJAoH,EAAYT,QAAUA,EACtBS,EAAYK,KAAOA,EAAKuF,aACxB5F,EAAYS,iBAAmBA,GAAoB,KACnDT,EAAYQ,aAAemJ,GAAmB1T,GACvC+J,CACT;;;;;;;;;;;;;;;;GCpiBa,MAwCAsM,GAAY,CAEvBC,QAAS,UAGTC,OAAQ,SAGRC,QAAS,UAGTC,SAAU,WAGVC,MAAO,SAGH,SAAUC,GACdC,GAEA,OAAQA,GACN,IAA+B,UAC/B,IAA+B,UAC/B,IAAK,YACH,OAAOP,GAAUC,QACnB,IAAK,SACH,OAAOD,GAAUE,OACnB,IAAK,UACH,OAAOF,GAAUG,QACnB,IAAK,WACH,OAAOH,GAAUI,SACnB,IAAK,QACH,OAAOJ,GAAUK,MACnB,QAEE,OAAOL,GAAUK,MAEvB;;;;;;;;;;;;;;;;SCvCaG,GAKX9Z,YACE+Z,EACA7U,EACA8U,GAEA,MAAMC,EACJ1S,GAAWwS,IAA4B,MAAT7U,GAA6B,MAAZ8U,EACjD,GAAIC,EACF1Z,KAAK2Z,KAAOH,EACZxZ,KAAK2E,MAAa,OAALA,QAAA,IAAAA,EAAAA,OAAS2I,EACtBtN,KAAKyZ,SAAmB,OAARA,QAAA,IAAAA,EAAAA,OAAYnM,MACvB,CACL,MAAMsM,EAAWJ,EAKjBxZ,KAAK2Z,KAAOC,EAASD,KACrB3Z,KAAK2E,MAAQiV,EAASjV,MACtB3E,KAAKyZ,SAAWG,EAASH,QAC1B,CACF;;;;;;;;;;;;;;;;GCxEG,SAAUI,GAAM1U,GACpB,MAAO,IAAI2U,KAETjV,QAAQ0E,UAAUe,MAAK,IAAMnF,KAAK2U,IAAlC,CAEJ;;;;;;;;;;;;;;;;GCFA,IAAIC,GAAyD,KAM7D,MAAeC,GAQbva,cAFU,KAAKwa,OAAY,EAGzBja,KAAKka,KAAO,IAAIC,eAChBna,KAAKoa,UACLpa,KAAKqa,WAAa/R,GAAUoC,SAC5B1K,KAAKsa,aAAe,IAAIzV,SAAQ0E,IAC9BvJ,KAAKka,KAAKK,iBAAiB,SAAS,KAClCva,KAAKqa,WAAa/R,GAAUyC,MAC5BxB,GAAS,IAEXvJ,KAAKka,KAAKK,iBAAiB,SAAS,KAClCva,KAAKqa,WAAa/R,GAAUkS,cAC5BjR,GAAS,IAEXvJ,KAAKka,KAAKK,iBAAiB,QAAQ,KACjChR,GAAS,GADX,GAIH,CAIDc,KACEpJ,EACA4L,EACAC,EACAd,GAEA,GAAIhM,KAAKia,MACP,MAAMrY,GAAc,iCAItB,GAFA5B,KAAKia,OAAQ,EACbja,KAAKka,KAAKO,KAAK5N,EAAQ5L,GAAK,QACZqM,IAAZtB,EACF,IAAK,MAAMlP,KAAOkP,EACZA,EAAQ5D,eAAetL,IACzBkD,KAAKka,KAAKQ,iBAAiB5d,EAAKkP,EAAQlP,GAAKoa,YASnD,YALa5J,IAATR,EACF9M,KAAKka,KAAK7P,KAAKyC,GAEf9M,KAAKka,KAAK7P,OAELrK,KAAKsa,YACb,CAED7P,eACE,IAAKzK,KAAKia,MACR,MAAMrY,GAAc,yCAEtB,OAAO5B,KAAKqa,UACb,CAEDzP,YACE,IAAK5K,KAAKia,MACR,MAAMrY,GAAc,sCAEtB,IACE,OAAO5B,KAAKka,KAAKvP,MAGlB,CAFC,MAAOlI,GACP,OAAQ,CACT,CACF,CAED6I,cACE,IAAKtL,KAAKia,MACR,MAAMrY,GAAc,wCAEtB,OAAO5B,KAAKka,KAAKS,QAClB,CAEDnP,eACE,IAAKxL,KAAKia,MACR,MAAMrY,GAAc,yCAEtB,OAAO5B,KAAKka,KAAKU,UAClB,CAGDlP,QACE1L,KAAKka,KAAKxO,OACX,CAEDoM,kBAAkB+C,GAChB,OAAO7a,KAAKka,KAAKpC,kBAAkB+C,EACpC,CAEDzQ,0BAA0B0Q,GACA,MAApB9a,KAAKka,KAAKa,QACZ/a,KAAKka,KAAKa,OAAOR,iBAAiB,WAAYO,EAEjD,CAEDvQ,6BAA6BuQ,GACH,MAApB9a,KAAKka,KAAKa,QACZ/a,KAAKka,KAAKa,OAAOC,oBAAoB,WAAYF,EAEpD,EAGG,MAAOG,WAA0BjB,GACrCI,UACEpa,KAAKka,KAAKgB,aAAe,MAC1B,E,SAGaC,KACd,OAAOpB,GAAsBA,KAAwB,IAAIkB,EAC1D;;;;;;;;;;;;;;;;;MCxFYG,GAsCX3b,YAAY4b,EAAgB1N,EAAe2F,EAA4B,MAxBvE,KAAYgI,aAAW,EACf,KAAkBC,oBAAY,EAC9B,KAAoBC,sBAAY,EAChC,KAAUC,WAAuD,GAMjE,KAAMC,YAAkBpO,EACxB,KAAUqO,gBAAYrO,EACtB,KAAQsO,cAAsBtO,EAC9B,KAAgBuO,iBAAW,EAG3B,KAAQC,cAAsCxO,EAC9C,KAAOyO,aAAgCzO,EAS7CtN,KAAKgc,KAAOX,EACZrb,KAAKic,MAAQtO,EACb3N,KAAKkU,UAAYZ,EACjBtT,KAAKkc,UAAYnI,KACjB/T,KAAKmc,WAAanc,KAAKoc,mBAAmBpc,KAAKic,OAC/Cjc,KAAKqc,OAAM,UACXrc,KAAKsc,cAAgB3X,IACnB3E,KAAK4b,cAAWtO,EAChBtN,KAAK6b,iBAAmB,EACpBlX,EAAMtE,YAAW,aACnBL,KAAKub,oBAAqB,EAC1Bvb,KAAKuc,yBAELvc,KAAK0b,OAAS/W,EACd3E,KAAKwc,YAAW,SACjB,EAEHxc,KAAKyc,sBAAwB9X,IAC3B3E,KAAK4b,cAAWtO,EACZ3I,EAAMtE,YAAW,YACnBL,KAAKuc,wBAELvc,KAAK0b,OAAS/W,EACd3E,KAAKwc,YAAW,SACjB,EAEHxc,KAAK0c,SAAW,IAAI7X,SAAQ,CAAC0E,EAASzE,KACpC9E,KAAK8b,SAAWvS,EAChBvJ,KAAK+b,QAAUjX,EACf9E,KAAK2c,QAAL,IAKF3c,KAAK0c,SAASpS,KAAK,MAAM,QAC1B,CAEOsS,wBACN,MAAMC,EAAa7c,KAAKsb,aACxB,OAAOrR,GAAUjK,KAAK8c,gBAAgBD,EAAa5S,EACpD,CAEOmS,mBAAmBzO,GACzB,OAAOA,EAAKqD,OAAS,MACtB,CAEO2L,SACS,YAAX3c,KAAKqc,aAIa/O,IAAlBtN,KAAK4b,WAGL5b,KAAKmc,gBACiB7O,IAApBtN,KAAK2b,WACP3b,KAAK+c,mBAED/c,KAAKub,mBACPvb,KAAKgd,eAEDhd,KAAKwb,qBAEPxb,KAAKid,iBAELjd,KAAKkd,kBAKXld,KAAKmd,iBAER,CAEOC,cACNhY,GAGAP,QAAQwY,IAAI,CACVrd,KAAKgc,KAAKsB,QAAQC,gBAClBvd,KAAKgc,KAAKsB,QAAQE,sBACjBlT,MAAK,EAAE2B,EAAWM,MACnB,OAAQvM,KAAKqc,QACX,IAAK,UACHjX,EAAS6G,EAAWM,GACpB,MACF,IAAK,YACHvM,KAAKwc,YAAW,YAChB,MACF,IAAK,UACHxc,KAAKwc,YAAW,UAChB,MATJ,GAaH,CAIOO,mBACN/c,KAAKod,eAAc,CAACnR,EAAWM,KAC7B,MAAME,EAAcuL,GAClBhY,KAAKgc,KAAKsB,QACVtd,KAAKgc,KAAKyB,UACVzd,KAAKkc,UACLlc,KAAKic,MACLjc,KAAKkU,WAEDwJ,EAAgB1d,KAAKgc,KAAKsB,QAAQK,aACtClR,EACA0O,GACAlP,EACAM,GAEFvM,KAAK4b,SAAW8B,EAChBA,EAAc3Y,aAAauF,MAAMrJ,IAC/BjB,KAAK4b,cAAWtO,EAChBtN,KAAK2b,WAAa1a,EAClBjB,KAAKub,oBAAqB,EAC1Bvb,KAAKuc,sBAAL,GACCvc,KAAKsc,cALR,GAOH,CAEOU,eAEN,MAAM/b,EAAMjB,KAAK2b,WACjB3b,KAAKod,eAAc,CAACnR,EAAWM,KAC7B,MAAME,EAAcyL,GAClBlY,KAAKgc,KAAKsB,QACVtd,KAAKgc,KAAKyB,UACVxc,EACAjB,KAAKic,OAED2B,EAAgB5d,KAAKgc,KAAKsB,QAAQK,aACtClR,EACA0O,GACAlP,EACAM,GAEFvM,KAAK4b,SAAWgC,EAChBA,EAAc7Y,aAAauF,MAAKK,IAE9B3K,KAAK4b,cAAWtO,EAChBtN,KAAK8c,gBAAgBnS,EAAO+M,SAC5B1X,KAAKub,oBAAqB,EACtB5Q,EAAOgN,YACT3X,KAAKwb,sBAAuB,GAE9Bxb,KAAKuc,sBAAL,GACCvc,KAAKsc,cATR,GAWH,CAEOY,kBACN,MAAM3E,EAAYF,GAA8BrY,KAAK6b,iBAC/ClR,EAAS,IAAI8M,GACjBzX,KAAKsb,aACLtb,KAAKic,MAAMjL,QAIP/P,EAAMjB,KAAK2b,WACjB3b,KAAKod,eAAc,CAACnR,EAAWM,KAC7B,IAAIE,EACJ,IACEA,EAAc6L,GACZtY,KAAKgc,KAAKyB,UACVzd,KAAKgc,KAAKsB,QACVrc,EACAjB,KAAKic,MACL1D,EACAvY,KAAKkc,UACLvR,EACA3K,KAAK4c,wBAMR,CAJC,MAAOna,GAGP,OAFAzC,KAAK0b,OAASjZ,OACdzC,KAAKwc,YAAW,QAEjB,CACD,MAAMqB,EAAgB7d,KAAKgc,KAAKsB,QAAQK,aACtClR,EACA0O,GACAlP,EACAM,GAEFvM,KAAK4b,SAAWiC,EAChBA,EAAc9Y,aAAauF,MAAMwT,IAC/B9d,KAAK+d,sBACL/d,KAAK4b,cAAWtO,EAChBtN,KAAK8c,gBAAgBgB,EAAUpG,SAC3BoG,EAAUnG,WACZ3X,KAAKkU,UAAY4J,EAAUxK,SAC3BtT,KAAKwc,YAAW,YAEhBxc,KAAKuc,sBACN,GACAvc,KAAKsc,cAVR,GAYH,CAEOyB,sBACN,MAAMC,EAAc3F,GAA8BrY,KAAK6b,iBAGnDmC,EAAc,WAChBhe,KAAK6b,kBAAoB,EAE5B,CAEOoB,iBACNjd,KAAKod,eAAc,CAACnR,EAAWM,KAC7B,MAAME,EAAcgK,GAClBzW,KAAKgc,KAAKsB,QACVtd,KAAKgc,KAAKyB,UACVzd,KAAKkc,WAED+B,EAAkBje,KAAKgc,KAAKsB,QAAQK,aACxClR,EACA0O,GACAlP,EACAM,GAEFvM,KAAK4b,SAAWqC,EAChBA,EAAgBlZ,aAAauF,MAAKgJ,IAChCtT,KAAK4b,cAAWtO,EAChBtN,KAAKkU,UAAYZ,EACjBtT,KAAKwc,YAAW,UAAhB,GACCxc,KAAKyc,sBAJR,GAMH,CAEOU,iBACNnd,KAAKod,eAAc,CAACnR,EAAWM,KAC7B,MAAME,EAAcsK,GAClB/W,KAAKgc,KAAKsB,QACVtd,KAAKgc,KAAKyB,UACVzd,KAAKkc,UACLlc,KAAKic,MACLjc,KAAKkU,WAEDgK,EAAmBle,KAAKgc,KAAKsB,QAAQK,aACzClR,EACA0O,GACAlP,EACAM,GAEFvM,KAAK4b,SAAWsC,EAChBA,EAAiBnZ,aAAauF,MAAKgJ,IACjCtT,KAAK4b,cAAWtO,EAChBtN,KAAKkU,UAAYZ,EACjBtT,KAAK8c,gBAAgB9c,KAAKic,MAAMjL,QAChChR,KAAKwc,YAAW,UAAhB,GACCxc,KAAKsc,cALR,GAOH,CAEOQ,gBAAgBqB,GACtB,MAAMC,EAAMpe,KAAKsb,aACjBtb,KAAKsb,aAAe6C,EAKhBne,KAAKsb,eAAiB8C,GACxBpe,KAAKqe,kBAER,CAEO7B,YAAYlD,GAClB,GAAItZ,KAAKqc,SAAW/C,EAGpB,OAAQA,GACN,IAAK,YAIHtZ,KAAKqc,OAAS/C,OACQhM,IAAlBtN,KAAK4b,UACP5b,KAAK4b,SAAS5W,SAEhB,MACF,IAAK,UAGHhF,KAAKqc,OAAS/C,OACQhM,IAAlBtN,KAAK4b,UACP5b,KAAK4b,SAAS5W,SAEhB,MACF,IAAK,UAIH,MAAMsZ,EAAuB,WAAXte,KAAKqc,OACvBrc,KAAKqc,OAAS/C,EACVgF,IACFte,KAAKqe,mBACLre,KAAK2c,UAEP,MACF,IAAK,SAGH3c,KAAKqc,OAAS/C,EACdtZ,KAAKqe,mBACL,MACF,IAAK,WAIHre,KAAK0b,OAAS3a,KACdf,KAAKqc,OAAS/C,EACdtZ,KAAKqe,mBACL,MACF,IAAK,QAKHre,KAAKqc,OAAS/C,EACdtZ,KAAKqe,mBACL,MACF,IAAK,UAKHre,KAAKqc,OAAS/C,EACdtZ,KAAKqe,mBACL,MAGL,CAEO9B,uBACN,OAAQvc,KAAKqc,QACX,IAAK,UACHrc,KAAKwc,YAAW,UAChB,MACF,IAAK,YACHxc,KAAKwc,YAAW,YAChB,MACF,IAAK,UACHxc,KAAK2c,SACL,MAKL,CAKG4B,eACF,MAAMC,EAAgBnF,GAA+BrZ,KAAKqc,QAC1D,MAAO,CACLoC,iBAAkBze,KAAKsb,aACvBoD,WAAY1e,KAAKic,MAAMjL,OACvBsI,MAAOkF,EACPlL,SAAUtT,KAAKkU,UACfyK,KAAM3e,KACNqb,IAAKrb,KAAKgc,KAEb,CAmBD4C,GACE9iB,EACA0d,EAIA7U,EACAka,GAEA,MAAMjF,EAAW,IAAIL,GAClBC,QAEkClM,EACnC3I,QAAS2I,EACTuR,QAAavR,GAGf,OADAtN,KAAK8e,aAAalF,GACX,KACL5Z,KAAK+e,gBAAgBnF,EAArB,CAEH,CAQDtP,KACE0U,EACAC,GAIA,OAAOjf,KAAK0c,SAASpS,KACnB0U,EACAC,EAEH,CAKDC,MAASD,GACP,OAAOjf,KAAKsK,KAAK,KAAM2U,EACxB,CAKOH,aAAalF,GACnB5Z,KAAKyb,WAAWtM,KAAKyK,GACrB5Z,KAAKmf,gBAAgBvF,EACtB,CAKOmF,gBAAgBnF,GACtB,MAAMxV,EAAIpE,KAAKyb,WAAWxQ,QAAQ2O,IACvB,IAAPxV,GACFpE,KAAKyb,WAAW2D,OAAOhb,EAAG,EAE7B,CAEOia,mBACNre,KAAKqf,iBACL,MAAMC,EAAYtf,KAAKyb,WAAW1Y,QAClCuc,EAAUpN,SAAQ0H,IAChB5Z,KAAKmf,gBAAgBvF,EAArB,GAEH,CAEOyF,iBACN,QAAsB/R,IAAlBtN,KAAK8b,SAAwB,CAC/B,IAAIyD,GAAY,EAChB,OAAQlG,GAA+BrZ,KAAKqc,SAC1C,KAAKtD,GAAUG,QACbsG,GAASxf,KAAK8b,SAAS2D,KAAK,KAAMzf,KAAKue,UAAvCiB,GACA,MACF,KAAKzG,GAAUI,SACf,KAAKJ,GAAUK,MACb,MAAMsG,EAAS1f,KAAK+b,QACpByD,GAASE,EAAOD,KAAK,KAAMzf,KAAK0b,QAAhC8D,GACA,MACF,QACED,GAAY,EACZ,MAEAA,IACFvf,KAAK8b,cAAWxO,EAChBtN,KAAK+b,aAAUzO,EAElB,CACF,CAEO6R,gBAAgBvF,GACtB,MAAM4E,EAAgBnF,GAA+BrZ,KAAKqc,QAC1D,OAAQmC,GACN,KAAKzF,GAAUC,QACf,KAAKD,GAAUE,OACTW,EAASD,MACX6F,GAAS5F,EAASD,KAAK8F,KAAK7F,EAAU5Z,KAAKue,UAA3CiB,GAEF,MACF,KAAKzG,GAAUG,QACTU,EAASH,UACX+F,GAAS5F,EAASH,SAASgG,KAAK7F,GAAhC4F,GAEF,MACF,KAAKzG,GAAUI,SACf,KAAKJ,GAAUK,MACTQ,EAASjV,OACX6a,GACE5F,EAASjV,MAAM8a,KAAK7F,EAAU5Z,KAAK0b,QADrC8D,GAIF,MACF,QAEM5F,EAASjV,OACX6a,GACE5F,EAASjV,MAAM8a,KAAK7F,EAAU5Z,KAAK0b,QADrC8D,GAKP,CAMDG,SACE,MAAMvQ,EACoC,WAAxCpP,KAAKqc,QACM,YAAXrc,KAAKqc,OAIP,OAHIjN,GACFpP,KAAKwc,YAAW,WAEXpN,CACR,CAMDwQ,QACE,MAAMxQ,EAAmB,YAAXpP,KAAKqc,OAInB,OAHIjN,GACFpP,KAAKwc,YAAW,WAEXpN,CACR,CAODpK,SACE,MAAMoK,EACqC,YAAzCpP,KAAKqc,QACM,YAAXrc,KAAKqc,OAIP,OAHIjN,GACFpP,KAAKwc,YAAW,aAEXpN,CACR;;;;;;;;;;;;;;;;SC9kBUyQ,GAGXpgB,YACUqgB,EACRpd,GADQ,KAAQod,SAARA,EAIN9f,KAAKyd,UADH/a,aAAoBb,GACLa,EAEAb,GAASW,YAAYE,EAAUod,EAASxd,KAE5D,CAOD4U,WACE,MAAO,QAAUlX,KAAKyd,UAAU/c,OAAS,IAAMV,KAAKyd,UAAUjd,IAC/D,CAESuf,QACRvL,EACA9R,GAEA,OAAO,IAAImd,GAAUrL,EAAS9R,EAC/B,CAKGsd,WACF,MAAMtd,EAAW,IAAIb,GAAS7B,KAAKyd,UAAU/c,OAAQ,IACrD,OAAOV,KAAK+f,QAAQ/f,KAAK8f,SAAUpd,EACpC,CAKGhC,aACF,OAAOV,KAAKyd,UAAU/c,MACvB,CAKGoT,eACF,OAAO9T,KAAKyd,UAAUjd,IACvB,CAMGzD,WACF,OAAOqW,GAAcpT,KAAKyd,UAAUjd,KACrC,CAKG8c,cACF,OAAOtd,KAAK8f,QACb,CAMGpN,aACF,MAAME,EAAUF,GAAO1S,KAAKyd,UAAUjd,MACtC,GAAgB,OAAZoS,EACF,OAAO,KAET,MAAMlQ,EAAW,IAAIb,GAAS7B,KAAKyd,UAAU/c,OAAQkS,GACrD,OAAO,IAAIiN,GAAU7f,KAAK8f,SAAUpd,EACrC,CAKDud,aAAaljB,GACX,GAA4B,KAAxBiD,KAAKyd,UAAUjd,KACjB,MAAMiB,GAAqB1E,EAE9B,E,SAsIamjB,GACd7E,EACA7M,EACA8E,GAGA,OADA+H,EAAI4E,aAAa,wBACV,IAAI7E,GAAWC,EAAK,IAAIvK,GAAQtC,GAAO8E,EAC/C,CA4KK,SAAU6M,GAAe9E,GAC7BA,EAAI4E,aAAa,kBACjB,MAAMxT,EAAc2T,GAClB/E,EAAIiC,QACJjC,EAAIoC,UACJ1J,MAEF,OAAOsH,EAAIiC,QACR+C,sBAAsB5T,EAAa0O,IACnC7Q,MAAKrJ,IACJ,GAAY,OAARA,EACF,MAAMK,KAER,OAAOL,CAAP,GAEL,CAwBe,YAAUoa,EAAgBvI,GACxC,MAAMF,EAAUC,GAAMwI,EAAIoC,UAAUjd,KAAMsS,GACpCpQ,EAAW,IAAIb,GAASwZ,EAAIoC,UAAU/c,OAAQkS,GACpD,OAAO,IAAIiN,GAAUxE,EAAIiC,QAAS5a,EACpC;;;;;;;;;;;;;;;;GC/cM,SAAU4d,GAAM9f,GACpB,MAAO,kBAAkB+f,KAAK/f,EAC/B,CAKD,SAASggB,GAAWhM,EAA8BvT,GAChD,OAAO,IAAI4e,GAAUrL,EAASvT,EAC/B,CAMD,SAASwf,GACPpF,EACA7a,GAEA,GAAI6a,aAAeqF,GAAqB,CACtC,MAAMlM,EAAU6G,EAChB,GAAuB,MAAnB7G,EAAQmM,QACV,MAAMxf,KAER,MAAMyf,EAAY,IAAIf,GAAUrL,EAASA,EAAQmM,SACjD,OAAY,MAARngB,EACKigB,GAAYG,EAAWpgB,GAEvBogB,CAEV,CAEC,YAAatT,IAAT9M,EACKqgB,GAAUxF,EAAK7a,GAEf6a,CAGZ,CAqBe,YACdyF,EACAC,GAEA,GAAIA,GAAaT,GAAMS,GAAY,CACjC,GAAID,aAAwBJ,GAC1B,OAAOF,GAAWM,EAAcC,GAEhC,MAAMxf,GACJ,2EAGL,CACC,OAAOkf,GAAYK,EAAcC,EAEpC,CAED,SAASC,GACP1e,EACA2e,GAEA,MAAM5e,EAAe,OAAA4e,QAAM,IAANA,OAAM,EAANA,EAAS7hB,IAC9B,OAAoB,MAAhBiD,EACK,KAEFR,GAASqf,mBAAmB7e,EAAcC,EAClD,C,MA2BYoe,GAgBXjhB,YAIW0hB,EACAC,EAIAC,EAIAC,EACAC,GAVA,KAAGJ,IAAHA,EACA,KAAaC,cAAbA,EAIA,KAAiBC,kBAAjBA,EAIA,KAAIC,KAAJA,EACA,KAAgBC,iBAAhBA,EA7BX,KAAOZ,QAAoB,KAMnB,KAAKa,MAAWriB,GACxB,KAASgX,UAAW,QACD,KAAMsL,OAAkB,KAEnC,KAAQC,UAAY,EAqB1B1hB,KAAK2hB,uBAAyBtiB,GAC9BW,KAAK4hB,oBAAsBtiB,GAC3BU,KAAK6hB,UAAY,IAAIC,IAEnB9hB,KAAK2gB,QADK,MAARW,EACazf,GAASqf,mBAAmBI,EAAMthB,KAAKwhB,OAEvCR,GAAchhB,KAAKwhB,MAAOxhB,KAAKmhB,IAAIY,QAErD,CAMGzf,WACF,OAAOtC,KAAKwhB,KACb,CAEGlf,SAAKA,GACPtC,KAAKwhB,MAAQlf,EACI,MAAbtC,KAAKshB,KACPthB,KAAK2gB,QAAU9e,GAASqf,mBAAmBlhB,KAAKshB,KAAMhf,GAEtDtC,KAAK2gB,QAAUK,GAAc1e,EAAMtC,KAAKmhB,IAAIY,QAE/C,CAKGvK,yBACF,OAAOxX,KAAK4hB,mBACb,CAEGpK,uBAAmBwK,GACrBva,GACE,OACe,EACC4M,OAAO4N,kBACvBD,GAEFhiB,KAAK4hB,oBAAsBI,CAC5B,CAMGtL,4BACF,OAAO1W,KAAK2hB,sBACb,CAEGjL,0BAAsBsL,GACxBva,GACE,OACe,EACC4M,OAAO4N,kBACvBD,GAEFhiB,KAAK2hB,uBAAyBK,CAC/B,CAEkB,sBACjB,GAAIhiB,KAAKkiB,mBACP,OAAOliB,KAAKkiB,mBAEd,MAAMC,EAAOniB,KAAKohB,cAAcgB,aAAa,CAAEC,UAAU,IACzD,GAAIF,EAAM,CACR,MAAMG,QAAkBH,EAAKI,WAC7B,GAAkB,OAAdD,EACF,OAAOA,EAAUE,WAEpB,CACD,OAAO,IACR,CAEsB,0BACrB,MAAMC,EAAWziB,KAAKqhB,kBAAkBe,aAAa,CAAEC,UAAU,IACjE,GAAII,EAAU,CACZ,MAAMpX,QAAeoX,EAASF,WAK9B,OAAOlX,EAAOkK,KACf,CACD,OAAO,IACR,CAKDmN,UAME,OALK1iB,KAAK0hB,WACR1hB,KAAK0hB,UAAW,EAChB1hB,KAAK6hB,UAAU3P,SAAQyQ,GAAWA,EAAQ3d,WAC1ChF,KAAK6hB,UAAUe,SAEV/d,QAAQ0E,SAChB,CAMDmL,sBAAsB7R,GACpB,OAAO,IAAIgd,GAAU7f,KAAM6C,EAC5B,CAMD8a,aACElR,EACAC,EACAT,EACAM,GAEA,GAAKvM,KAAK0hB,SAiBR,OAAO,IAAIhd,GAAYlD,MAjBL,CAClB,MAAMmhB,EAAUnW,GACdC,EACAzM,KAAKyhB,OACLxV,EACAM,EACAG,EACA1M,KAAKuhB,kBAQP,OANAvhB,KAAK6hB,UAAUgB,IAAIF,GAEnBA,EAAQ5d,aAAauF,MACnB,IAAMtK,KAAK6hB,UAAUiB,OAAOH,KAC5B,IAAM3iB,KAAK6hB,UAAUiB,OAAOH,KAEvBA,CACR,CAGF,CAE0B,4BACzBlW,EACAC,GAEA,MAAOT,EAAWM,SAAuB1H,QAAQwY,IAAI,CACnDrd,KAAKud,gBACLvd,KAAKwd,sBAGP,OAAOxd,KAAK2d,aACVlR,EACAC,EACAT,EACAM,GACAxH,YACH,E,wCClUUge,GAAe,U,SCyIZ7C,GACd7E,EACA7M,EACA8E,GAGA,OADA+H,GAAM2H,EAAAA,GAAAA,IAAmB3H,GAClB4H,GACL5H,EACA7M,EACA8E,EAEH,CA+FK,SAAU6M,GAAe9E,GAE7B,OADAA,GAAM2H,EAAAA,GAAAA,IAAmB3H,GAClB6H,GAAuB7H,EAC/B,CAgCe,SAAAA,GACdyF,EACAC,GAGA,OADAD,GAAekC,EAAAA,GAAAA,IAAmBlC,GAC3BqC,GACLrC,EACAC,EAEH,C,SAiBeqC,GACdjC,GAAmBkC,EAAAA,GAAAA,MACnBC,GAEAnC,GAAM6B,EAAAA,GAAAA,IAAmB7B,GACzB,MAAMoC,GAAuCC,EAAAA,GAAAA,IAAarC,EAAK4B,IACzDU,EAAkBF,EAAgBnB,aAAa,CACnDsB,WAAYJ,IAEd,OAAOG,CACR,CCjSD,SAASE,GACPC,GACEC,mBAAoB5iB,IAEtB,MAAMkgB,EAAMyC,EAAUE,YAAY,OAAO1B,eACnC2B,EAAeH,EAAUE,YAAY,iBACrCE,EAAmBJ,EAAUE,YAAY,sBAE/C,OAAO,IAAIpD,GACTS,EACA4C,EACAC,EACA/iB,EACAgjB,GAAAA,GAEH,CAED,SAASC,MACPC,EAAAA,GAAAA,IACE,IAAIC,GAAAA,GACFrB,GACAY,GAED,UAACU,sBAAqB,KAGzBC,EAAAA,GAAAA,IAAgBvnB,GAAMuG,GAAS,KAE/BghB,EAAAA,GAAAA,IAAgBvnB,GAAMuG,GAAS,UAChC,CAED4gB,K5BmPA,MAAM5G,GAAU8F,KAEVmB,IAAKC,EAAAA,GAAAA,MACLC,IAAIC,EAAAA,GAAAA,KAAMC,EAAAA,GAAAA,IAAWJ,GAAI,aAC/B,QACExnB,KAAM,iBACNyR,OACE,MAAO,CACLoW,QAAS,CACP7nB,KAAM,GACNM,MAAO,EACPJ,MAAO,GACPM,YAAa,GACbH,MAAO,GACPynB,IAAKC,aAAaC,QAAQ,YAE5BC,YAAa,CACXjoB,KAAM,GACNM,MAAO,EACPJ,MAAO,GACPG,MAAO,GACPG,YAAa,GACbT,IAAK,IAEPmoB,eAAgB,GAChBC,qBAAsB,GACtBC,SAAU,GACVC,YAAa,EACbC,cAAc,EACdC,QAAS,KACTC,UAAW,KACXC,UAAW,GAEd,EACDC,QAAS,CACPC,cACEC,EAAAA,GAAAA,IACElB,GAEAzkB,KAAK4kB,SACLta,MAAK,KACLtK,KAAKqlB,cAAe,EACpBrlB,KAAKilB,eAAiB,QACtBjlB,KAAK4kB,QAAQ7nB,KAAO,GACpBiD,KAAK4kB,QAAQvnB,MAAQ,GACrB2C,KAAK4kB,QAAQ3nB,MAAQ,GACrB+C,KAAK4kB,QAAQxnB,MAAQ,GACrB4C,KAAK4kB,QAAQrnB,YAAc,EAA3B,GAEH,EACDqoB,QAAQ7oB,EAAMK,EAAOC,EAAOE,EAAaN,EAAOH,GAC9CkD,KAAKglB,YAAYjoB,KAAOA,EACxBiD,KAAKglB,YAAY5nB,MAAQA,EACzB4C,KAAKglB,YAAY3nB,MAAQA,EACzB2C,KAAKglB,YAAYznB,YAAcA,EAC/ByC,KAAKglB,YAAY/nB,MAAQA,EACzB+C,KAAKglB,YAAYloB,IAAMA,CACxB,EACD+oB,WAAW/oB,EAAKC,GACdiD,KAAKglB,YAAYloB,IAAMA,EACvBkD,KAAKglB,YAAYjoB,KAAOA,CACzB,EAED+oB,gBACE,MAAMC,GAASC,EAAAA,GAAAA,IAAIzB,GAAI,WAAYvkB,KAAKglB,YAAYloB,MACpDmpB,EAAAA,GAAAA,IAAUF,EAAQ/lB,KAAKglB,aAAa1a,MAAK,KACvCtK,KAAKklB,qBAAuB,UAC5BllB,KAAKglB,YAAYjoB,KAAO,GACxBiD,KAAKglB,YAAY5nB,MAAQ,GACzB4C,KAAKglB,YAAY3nB,MAAQ,GACzB2C,KAAKglB,YAAY/nB,MAAQ,GACzB+C,KAAKglB,YAAYznB,YAAc,EAA/B,GAEH,EACD2oB,cAAcppB,IACZqpB,EAAAA,GAAAA,KAAUH,EAAAA,GAAAA,IAAIzB,GAAI,WAAYznB,IAAMwN,MAAK,KACvC8b,SAASC,eAAe,SAASC,OAAjC,GAEH,EACDC,aAAaC,GACXxmB,KAAKqlB,cAAe,EACpBrlB,KAAKolB,YAAc,EACnBplB,KAAKslB,QAAU,KACftlB,KAAKulB,UAAYiB,EAAMvqB,OAAOwqB,MAAM,GACpCzmB,KAAKwlB,UAAYgB,EAAMvqB,OAAOwqB,MAAM,GAAG1pB,KACvC,MAAM2pB,EAAarL,GAAIiC,GAAS,UAAYtd,KAAKwlB,WAC3CmB,EAAazG,GAAqBwG,EAAY1mB,KAAKulB,WACzDoB,EAAW/H,GACT,iBACCL,IAGCve,KAAKolB,YACF7G,EAASE,iBAAmBF,EAASG,WAAc,GADtD,IAGD/Z,IACCiiB,QAAQC,IAAIliB,EAAMhF,QAAlB,IAGF,KAGEK,KAAKolB,YAAc,IACnBjF,GAAewG,EAAWpI,SAASlD,KAAK/Q,MAAMwc,IAC5CF,QAAQC,IAAI,oBAAqBC,GACjC9mB,KAAK4kB,QAAQ3nB,MAAQ6pB,CAArB,GAFF,GAML,GAMHC,WACEC,EAAAA,GAAAA,IAAWvC,IAAIwC,IACbjnB,KAAKmlB,SAAW,GAChB8B,EAAc/U,SAAS8T,IACjBA,EAAIxX,OAAOqW,KAAO7kB,KAAK4kB,QAAQC,KACjC7kB,KAAKmlB,SAAShW,KAAK,CACjBrS,IAAKkpB,EAAI9pB,GACTa,KAAMipB,EAAIxX,OAAOzR,KACjBK,MAAO4oB,EAAIxX,OAAOpR,MAClBG,YAAayoB,EAAIxX,OAAOjR,YACxBF,MAAO2oB,EAAIxX,OAAOnR,MAClBJ,MAAO+oB,EAAIxX,OAAOvR,MAClBiqB,SAAU,EACVC,WAAYnB,EAAIxX,OAAOnR,OAE3B,GAZF,GAeH,G,S6B7bH,MAAM+pB,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAASC,MAEpE,S","sources":["webpack://myprojectvuejs/./src/views/MyProductsView.vue","webpack://myprojectvuejs/../src/implementation/constants.ts","webpack://myprojectvuejs/../src/implementation/error.ts","webpack://myprojectvuejs/../src/implementation/location.ts","webpack://myprojectvuejs/../src/implementation/failrequest.ts","webpack://myprojectvuejs/../src/implementation/backoff.ts","webpack://myprojectvuejs/../src/implementation/type.ts","webpack://myprojectvuejs/../src/implementation/url.ts","webpack://myprojectvuejs/../src/implementation/connection.ts","webpack://myprojectvuejs/../src/implementation/request.ts","webpack://myprojectvuejs/../src/implementation/fs.ts","webpack://myprojectvuejs/../src/platform/browser/base64.ts","webpack://myprojectvuejs/../src/implementation/string.ts","webpack://myprojectvuejs/../src/implementation/blob.ts","webpack://myprojectvuejs/../src/implementation/json.ts","webpack://myprojectvuejs/../src/implementation/path.ts","webpack://myprojectvuejs/../src/implementation/metadata.ts","webpack://myprojectvuejs/../src/implementation/requestinfo.ts","webpack://myprojectvuejs/../src/implementation/requests.ts","webpack://myprojectvuejs/../src/implementation/taskenums.ts","webpack://myprojectvuejs/../src/implementation/observer.ts","webpack://myprojectvuejs/../src/implementation/async.ts","webpack://myprojectvuejs/../src/platform/browser/connection.ts","webpack://myprojectvuejs/../src/task.ts","webpack://myprojectvuejs/../src/reference.ts","webpack://myprojectvuejs/../src/service.ts","webpack://myprojectvuejs/../src/constants.ts","webpack://myprojectvuejs/../src/api.ts","webpack://myprojectvuejs/../src/index.ts","webpack://myprojectvuejs/./src/views/MyProductsView.vue?fa6c"],"sourcesContent":["<template>\n  <br />\n  <div class=\"container\">\n    <button\n      type=\"button\"\n      class=\"btn btn-primary\"\n      data-bs-toggle=\"modal\"\n      data-bs-target=\"#exampleModal\"\n    >\n      Add new product\n    </button>\n\n    <br />\n    <h1 style=\"text-align: center\">My Products</h1>\n    <br />\n    <div class=\"row row-cols-1 row-cols-xs-2 row-cols-sm-2 row-cols-lg-4 g-3\">\n      <div class=\"col hp\" v-for=\"item in products\" :key=\"item.name\">\n        <div class=\"card1 h-100 shadow-sm\">\n          <a href=\"#\">\n            <img :src=\"item.image\" class=\"card1-img-top\" alt=\"product.title\" />\n          </a>\n\n          <div class=\"label-top shadow-sm\">\n            <a class=\"text-white\" href=\"#\">{{ item.brand }}</a>\n          </div>\n          <div class=\"card-body\">\n            <div class=\"clearfix mb-3\">\n              <span class=\"float-start badge rounded-pill bg-success\"\n                >{{ item.price }}DT</span\n              >\n\n              <span class=\"float-end\"\n                ><a href=\"#\" class=\"small text-muted text-uppercase aff-link\"\n                  >reviews</a\n                ></span\n              >\n            </div>\n            <h5 class=\"card-title\">\n              <a target=\"_blank\" href=\"#\">{{ item.description }}</a>\n            </h5>\n\n            <div class=\"d-grid gap-2 my-4\">\n              <!-- <a @click=\"addToCart(item)\" class=\"btn btn-warning bold-btn\"\n                >add to cart</a\n              > -->\n              <button\n                type=\"button\"\n                class=\"btn btn-info bold-btn\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#update\"\n                v-on:click=\"\n                  getData(\n                    item.name,\n                    item.brand,\n                    item.price,\n                    item.description,\n                    item.image,\n                    item.key\n                  )\n                \"\n              >\n                Update\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-danger bold-btn\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#delete\"\n                v-on:click=\"getDataKey(item.key, item.name)\"\n              >\n                Delete\n              </button>\n            </div>\n            <div class=\"clearfix mb-1\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Modal 1 -->\n    <div\n      class=\"modal fade\"\n      id=\"exampleModal\"\n      data-bs-backdrop=\"static\"\n      data-bs-keyboard=\"false\"\n      tabindex=\"-1\"\n      aria-labelledby=\"staticBackdropLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Add Product</h5>\n            <button\n              type=\"button\"\n              class=\"btn-close\"\n              data-bs-dismiss=\"modal\"\n              aria-label=\"Close\"\n            ></button>\n          </div>\n          <div class=\"modal-body\">\n            .\n            <!-- form start here -->\n            <form @submit.prevent=\"AddProduct\">\n              <input\n                class=\"form-control\"\n                type=\"text\"\n                placeholder=\"name\"\n                aria-label=\"default input example\"\n                v-model=\"product.name\"\n              />\n              <input\n                class=\"form-control\"\n                type=\"text\"\n                placeholder=\"Brand\"\n                aria-label=\"default input example\"\n                v-model=\"product.brand\"\n              />\n              <div class=\"input-group\">\n                <input\n                  class=\"form-control\"\n                  type=\"number\"\n                  placeholder=\"Price\"\n                  aria-label=\"Dollar amount (with dot and two decimal places)\"\n                  v-model=\"product.price\"\n                />\n                <span class=\"input-group-text\">$</span>\n              </div>\n\n              <input\n                class=\"form-control\"\n                lang=\"en\"\n                type=\"file\"\n                placeholder=\"sqs\"\n                accept=\".jpg,.png\"\n                @change=\"previewImage\"\n              />\n              <progress\n                v-if=\"ProgressShow\"\n                id=\"js-progressbar\"\n                class=\"uk-progress\"\n                :value=\"uploadValue\"\n                max=\"100\"\n              ></progress>\n\n              <textarea\n                class=\"form-control\"\n                id=\"exampleFormControlTextarea1\"\n                rows=\"3\"\n                placeholder=\"Description\"\n                v-model=\"product.description\"\n              ></textarea>\n              <div class=\"alert alert-success\" v-if=\"messageSuccess\">\n                {{ messageSuccess }}\n              </div>\n              <button type=\"submit\" class=\"btn btn-success\">Add</button>\n            </form>\n            <!-- form end here -->\n          </div>\n          <div class=\"modal-footer\">\n            <button\n              type=\"button\"\n              class=\"btn btn-secondary\"\n              data-bs-dismiss=\"modal\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Modal 2 (update) -->\n    <div\n      class=\"modal fade\"\n      id=\"update\"\n      data-bs-backdrop=\"static\"\n      data-bs-keyboard=\"false\"\n      tabindex=\"-1\"\n      aria-labelledby=\"staticBackdropLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Update Product</h5>\n            <button\n              type=\"button\"\n              class=\"btn-close\"\n              data-bs-dismiss=\"modal\"\n              aria-label=\"Close\"\n            ></button>\n          </div>\n          <div class=\"modal-body\">\n            .\n            <!-- form start here -->\n            <form @submit.prevent=\"UpdateProduct\">\n              <input\n                class=\"form-control\"\n                type=\"text\"\n                placeholder=\"name\"\n                aria-label=\"default input example\"\n                v-model=\"dataProduct.name\"\n              />\n              <textarea\n                class=\"form-control\"\n                id=\"exampleFormControlTextarea1\"\n                rows=\"3\"\n                placeholder=\"Description\"\n                v-model=\"dataProduct.description\"\n              ></textarea>\n              <input\n                class=\"form-control\"\n                type=\"text\"\n                placeholder=\"image\"\n                aria-label=\"default input example\"\n                v-model=\"dataProduct.image\"\n              />\n              <input\n                class=\"form-control\"\n                type=\"number\"\n                pla\n                ceholder=\"price\"\n                aria-label=\"default input example\"\n                v-model=\"dataProduct.price\"\n              />\n              <div class=\"alert alert-success\" v-if=\"messageUpdateSuccess\">\n                {{ messageUpdateSuccess }}\n              </div>\n              <button type=\"submit\" class=\"btn btn-success\">Update</button>\n            </form>\n            <!-- form end here -->\n          </div>\n          <div class=\"modal-footer\">\n            <button\n              type=\"button\"\n              class=\"btn btn-secondary\"\n              data-bs-dismiss=\"modal\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Modal 3 (delete) -->\n    <div\n      class=\"modal fade\"\n      id=\"delete\"\n      data-bs-backdrop=\"static\"\n      data-bs-keyboard=\"false\"\n      tabindex=\"-1\"\n      aria-labelledby=\"staticBackdropLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Delete Product</h5>\n            <button\n              type=\"button\"\n              class=\"btn-close\"\n              data-bs-dismiss=\"modal\"\n              aria-label=\"Close\"\n            ></button>\n          </div>\n          <div class=\"modal-body\">\n            .\n            <!-- form start here -->\n            <form>\n              <h3>Do you want to delete this course ?</h3>\n              <br />\n              <h5>Title: {{ dataProduct.name }}</h5>\n            </form>\n            <!-- form end here -->\n          </div>\n          <div class=\"modal-footer\">\n            <button\n              type=\"button\"\n              id=\"close\"\n              class=\"btn btn-secondary\"\n              data-bs-dismiss=\"modal\"\n            >\n              Close\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-danger\"\n              v-on:click=\"DeleteProduct(dataProduct.key)\"\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport \"../Firebase\";\n\nimport {\n  addDoc,\n  collection,\n  query,\n  getFirestore,\n  onSnapshot,\n  updateDoc,\n  doc,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport {\n  getStorage,\n  ref,\n  getDownloadURL,\n  uploadBytesResumable,\n} from \"firebase/storage\";\n// Create a root reference\nconst storage = getStorage();\n\nconst db = getFirestore();\nconst q = query(collection(db, \"products\"));\nexport default {\n  name: \"MyProductsView\",\n  data() {\n    return {\n      product: {\n        name: \"\",\n        price: 0,\n        image: \"\",\n        description: \"\",\n        brand: \"\",\n        uid: localStorage.getItem(\"uidUser\"),\n      },\n      dataProduct: {\n        name: \"\",\n        price: 0,\n        image: \"\",\n        brand: \"\",\n        description: \"\",\n        key: \"\",\n      },\n      messageSuccess: \"\",\n      messageUpdateSuccess: \"\",\n      products: [],\n      uploadValue: 0,\n      ProgressShow: false,\n      picture: null,\n      imageData: null,\n      imageName: \"\",\n    };\n  },\n  methods: {\n    AddProduct() {\n      addDoc(\n        q,\n\n        this.product\n      ).then(() => {\n        this.ProgressShow = false;\n        this.messageSuccess = \"Added\";\n        this.product.name = \"\";\n        this.product.price = \"\";\n        this.product.image = \"\";\n        this.product.brand = \"\";\n        this.product.description = \"\";\n      });\n    },\n    getData(name, brand, price, description, image, key) {\n      this.dataProduct.name = name;\n      this.dataProduct.brand = brand;\n      this.dataProduct.price = price;\n      this.dataProduct.description = description;\n      this.dataProduct.image = image;\n      this.dataProduct.key = key;\n    },\n    getDataKey(key, name) {\n      this.dataProduct.key = key;\n      this.dataProduct.name = name;\n    },\n\n    UpdateProduct() {\n      const DocRef = doc(db, \"products\", this.dataProduct.key);\n      updateDoc(DocRef, this.dataProduct).then(() => {\n        this.messageUpdateSuccess = \"Updated\";\n        this.dataProduct.name = \"\";\n        this.dataProduct.brand = \"\";\n        this.dataProduct.price = \"\";\n        this.dataProduct.image = \"\";\n        this.dataProduct.description = \"\";\n      });\n    },\n    DeleteProduct(key) {\n      deleteDoc(doc(db, \"products\", key)).then(() => {\n        document.getElementById(\"close\").click();\n      });\n    },\n    previewImage(event) {\n      this.ProgressShow = true;\n      this.uploadValue = 0;\n      this.picture = null;\n      this.imageData = event.target.files[0];\n      this.imageName = event.target.files[0].name;\n      const storageRef = ref(storage, \"images/\" + this.imageName);\n      const uploadTask = uploadBytesResumable(storageRef, this.imageData);\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          // Observe state change events such as progress, pause, and resume\n          // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n          this.uploadValue =\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        },\n        (error) => {\n          console.log(error.message);\n        },\n\n        () => {\n          // Handle successful uploads on complete\n          // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n          this.uploadValue = 100;\n          getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n            console.log(\"File available at\", downloadURL);\n            this.product.image = downloadURL;\n          });\n        }\n      );\n    },\n    // addToCart(item) {\n    //   this.$store.commit(\"addToCart\", item);\n    // },\n  },\n\n  created() {\n    onSnapshot(q, (querySnapshot) => {\n      this.products = [];\n      querySnapshot.forEach((doc) => {\n        if (doc.data().uid == this.product.uid) {\n          this.products.push({\n            key: doc.id,\n            name: doc.data().name,\n            brand: doc.data().brand,\n            description: doc.data().description,\n            price: doc.data().price,\n            image: doc.data().image,\n            quantity: 1,\n            totalPrice: doc.data().price,\n          });\n        }\n      });\n    });\n  },\n};\n</script>\n<style>\n.form-control {\n  margin-bottom: 16px;\n}\n.input-group-text {\n  margin-bottom: 16px;\n}\n@import url(\"https://fonts.googleapis.com/css2?family=Fira+Sans+Extra+Condensed:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n@import url(\"https://fonts.googleapis.com/css2?family=Heebo:wght@100;200;300;400;500;600;700;800;900&display=swap\");\n@import url(\"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap\");\n@import url(\"https://use.fontawesome.com/releases/v5.13.0/css/all.css\");\n\n:root {\n  --font1: \"Heebo\", sans-serif;\n  --font2: \"Fira Sans Extra Condensed\", sans-serif;\n  --font3: \"Roboto\", sans-serif;\n\n  --btnbg: #39b5ff;\n  --btnfontcolor: rgb(255, 255, 255);\n  --btnfontcolorhover: rgb(92, 89, 89);\n  --btnbghover: #39b5ff;\n  --btnactivefs: #39b5ff;\n\n  --label-index: #960796;\n  --danger-index: #5bc257;\n  /* PAGINATE */\n  --link-color: #000;\n  --link-color-hover: #fff;\n  --bg-content-color: #39b5ff;\n}\n\n.container-fluid {\n  max-width: 1400px;\n}\n\n.card1 {\n  background: #fff;\n  position: relative;\n  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.08), 0 0 6px rgba(0, 0, 0, 0.05);\n  transition: 0.3s transform cubic-bezier(0.155, 1.105, 0.295, 1.12),\n    0.3s box-shadow,\n    0.3s -webkit-transform cubic-bezier(0.155, 1.105, 0.295, 1.12);\n  border: 0;\n  border-radius: 1rem;\n}\n\n.card1-img,\n.card1-img-top {\n  border-top-left-radius: calc(1rem - 1px);\n  border-top-right-radius: calc(1rem - 1px);\n}\n\n.card1 h5 {\n  overflow: hidden;\n  height: 55px;\n  font-weight: 300;\n  font-size: 1rem;\n}\n\n.card1 h5 a {\n  color: black;\n  text-decoration: none;\n}\n\n.card1-img-top {\n  width: 100%;\n  min-height: 250px;\n  max-height: 250px;\n  object-fit: contain;\n  padding: 30px;\n}\n\n.card1 h2 {\n  font-size: 1rem;\n}\n\n.card1:hover {\n  transform: scale(1.02);\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.12), 0 4px 8px rgba(0, 0, 0, 0.06);\n}\n\n/* Centered text */\n.label-top {\n  position: absolute;\n  background-color: var(--label-index);\n  color: #fff;\n  top: 8px;\n  right: 8px;\n  padding: 5px 10px 5px 10px;\n  font-size: 0.7rem;\n  font-weight: 600;\n  border-radius: 3px;\n  text-transform: uppercase;\n}\n\n.top-right {\n  position: absolute;\n  top: 24px;\n  left: 24px;\n\n  width: 90px;\n  height: 90px;\n  border-radius: 50%;\n  font-size: 1rem;\n  font-weight: 900;\n  background: #8bc34a;\n  line-height: 90px;\n  text-align: center;\n  color: white;\n}\n\n.top-right span {\n  display: inline-block;\n  vertical-align: middle;\n  /* line-height: normal; */\n  /* padding: 0 25px; */\n}\n\n.aff-link {\n  /* text-decoration: overline; */\n  font-weight: 500;\n}\n\n.over-bg {\n  background: rgba(53, 53, 53, 0.85);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(0px);\n  -webkit-backdrop-filter: blur(0px);\n  border-radius: 10px;\n}\n.bold-btn {\n  font-size: 1rem;\n  font-weight: 500;\n  text-transform: uppercase;\n  padding: 5px 50px 5px 50px;\n}\n.box .btn {\n  font-size: 1.5rem;\n}\n\n@media (max-width: 1025px) {\n  .btn {\n    padding: 5px 40px 5px 40px;\n  }\n}\n@media (max-width: 250px) {\n  .btn {\n    padding: 5px 30px 5px 30px;\n  }\n}\n\n/* START BUTTON */\n.btn-warning {\n  background: var(--btnbg);\n  color: var(--btnfontcolor);\n  fill: #ffffff;\n  border: none;\n  text-decoration: none;\n  outline: 0;\n  /* box-shadow: -1px 6px 19px rgba(247, 129, 10, 0.25); */\n  border-radius: 100px;\n}\n.btn-info {\n  background: #08b21d;\n  color: #ffffff;\n  fill: #ffffff;\n  border: none;\n  text-decoration: none;\n  outline: 0;\n  border-radius: 100px;\n}\n.btn-danger {\n  background: #ff0000;\n  color: #ffffff;\n  fill: #ffffff;\n  border: none;\n  text-decoration: none;\n  outline: 0;\n  border-radius: 100px;\n}\n.btn-warning:hover {\n  background: var(--btnbghover);\n  color: var(--btnfontcolorhover);\n  /* box-shadow: -1px 6px 13px rgba(255, 150, 43, 0.35); */\n}\n.btn-check:focus + .btn-warning,\n.btn-warning:focus {\n  background: var(--btnbghover);\n  color: var(--btnfontcolorhover);\n  /* box-shadow: -1px 6px 13px rgba(255, 150, 43, 0.35); */\n}\n.btn-warning:active:focus {\n  box-shadow: 0 0 0 0.25rem var(--btnactivefs);\n}\n.btn-warning:active {\n  background: var(--btnbghover);\n  color: var(--btnfontcolorhover);\n  /* box-shadow: -1px 6px 13px rgba(255, 150, 43, 0.35); */\n}\n\n/* END BUTTON */\n\n.bg-success {\n  font-size: 1rem;\n  background-color: var(--btnbg) !important;\n  color: var(--btnfontcolor) !important;\n}\n.bg-danger {\n  font-size: 1rem;\n}\n\n.price-hp {\n  font-size: 1rem;\n  font-weight: 600;\n  color: darkgray;\n}\n\n.amz-hp {\n  font-size: 0.7rem;\n  font-weight: 600;\n  color: darkgray;\n}\n\n.fa-question-circle:before {\n  /* content: \"\\f059\"; */\n  color: darkgray;\n}\n\n.fa-heart:before {\n  color: crimson;\n}\n.fa-chevron-circle-right:before {\n  color: darkgray;\n}\n</style>","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n\n/**\n * Domain name for firebase storage.\n */\nexport const DEFAULT_HOST = 'firebasestorage.googleapis.com';\n\n/**\n * The key in Firebase config json for the storage bucket.\n */\nexport const CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n\n/**\n * 2 minutes\n *\n * The timeout for all operations except upload.\n */\nexport const DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n\n/**\n * 10 minutes\n *\n * The timeout for upload.\n */\nexport const DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nexport const MIN_SAFE_INTEGER = -9007199254740991;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport { CONFIG_STORAGE_BUCKET_KEY } from './constants';\n\n/**\n * An error returned by the Firebase Storage SDK.\n * @public\n */\nexport class StorageError extends FirebaseError {\n  private readonly _baseMessage: string;\n  /**\n   * Stores custom error data unque to StorageError.\n   */\n  customData: { serverResponse: string | null } = { serverResponse: null };\n\n  /**\n   * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\n   *  added to the end of the message.\n   * @param message  - Error message.\n   */\n  constructor(code: StorageErrorCode, message: string) {\n    super(\n      prependCode(code),\n      `Firebase Storage: ${message} (${prependCode(code)})`\n    );\n    this._baseMessage = this.message;\n    // Without this, `instanceof StorageError`, in tests for example,\n    // returns false.\n    Object.setPrototypeOf(this, StorageError.prototype);\n  }\n\n  /**\n   * Compares a StorageErrorCode against this error's code, filtering out the prefix.\n   */\n  _codeEquals(code: StorageErrorCode): boolean {\n    return prependCode(code) === this.code;\n  }\n\n  /**\n   * Optional response message that was added by the server.\n   */\n  get serverResponse(): null | string {\n    return this.customData.serverResponse;\n  }\n\n  set serverResponse(serverResponse: string | null) {\n    this.customData.serverResponse = serverResponse;\n    if (this.customData.serverResponse) {\n      this.message = `${this._baseMessage}\\n${this.customData.serverResponse}`;\n    } else {\n      this.message = this._baseMessage;\n    }\n  }\n}\n\nexport const errors = {};\n\n/**\n * @public\n * Error codes that can be attached to `StorageError`s.\n */\nexport const enum StorageErrorCode {\n  // Shared between all platforms\n  UNKNOWN = 'unknown',\n  OBJECT_NOT_FOUND = 'object-not-found',\n  BUCKET_NOT_FOUND = 'bucket-not-found',\n  PROJECT_NOT_FOUND = 'project-not-found',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  UNAUTHENTICATED = 'unauthenticated',\n  UNAUTHORIZED = 'unauthorized',\n  UNAUTHORIZED_APP = 'unauthorized-app',\n  RETRY_LIMIT_EXCEEDED = 'retry-limit-exceeded',\n  INVALID_CHECKSUM = 'invalid-checksum',\n  CANCELED = 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME = 'invalid-event-name',\n  INVALID_URL = 'invalid-url',\n  INVALID_DEFAULT_BUCKET = 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET = 'no-default-bucket',\n  CANNOT_SLICE_BLOB = 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE = 'server-file-wrong-size',\n  NO_DOWNLOAD_URL = 'no-download-url',\n  INVALID_ARGUMENT = 'invalid-argument',\n  INVALID_ARGUMENT_COUNT = 'invalid-argument-count',\n  APP_DELETED = 'app-deleted',\n  INVALID_ROOT_OPERATION = 'invalid-root-operation',\n  INVALID_FORMAT = 'invalid-format',\n  INTERNAL_ERROR = 'internal-error',\n  UNSUPPORTED_ENVIRONMENT = 'unsupported-environment'\n}\n\nexport function prependCode(code: StorageErrorCode): string {\n  return 'storage/' + code;\n}\n\nexport function unknown(): StorageError {\n  const message =\n    'An unknown error occurred, please check the error payload for ' +\n    'server response.';\n  return new StorageError(StorageErrorCode.UNKNOWN, message);\n}\n\nexport function objectNotFound(path: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.OBJECT_NOT_FOUND,\n    \"Object '\" + path + \"' does not exist.\"\n  );\n}\n\nexport function bucketNotFound(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.BUCKET_NOT_FOUND,\n    \"Bucket '\" + bucket + \"' does not exist.\"\n  );\n}\n\nexport function projectNotFound(project: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.PROJECT_NOT_FOUND,\n    \"Project '\" + project + \"' does not exist.\"\n  );\n}\n\nexport function quotaExceeded(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.QUOTA_EXCEEDED,\n    \"Quota for bucket '\" +\n      bucket +\n      \"' exceeded, please view quota on \" +\n      'https://firebase.google.com/pricing/.'\n  );\n}\n\nexport function unauthenticated(): StorageError {\n  const message =\n    'User is not authenticated, please authenticate using Firebase ' +\n    'Authentication and try again.';\n  return new StorageError(StorageErrorCode.UNAUTHENTICATED, message);\n}\n\nexport function unauthorizedApp(): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNAUTHORIZED_APP,\n    'This app does not have permission to access Firebase Storage on this project.'\n  );\n}\n\nexport function unauthorized(path: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNAUTHORIZED,\n    \"User does not have permission to access '\" + path + \"'.\"\n  );\n}\n\nexport function retryLimitExceeded(): StorageError {\n  return new StorageError(\n    StorageErrorCode.RETRY_LIMIT_EXCEEDED,\n    'Max retry time for operation exceeded, please try again.'\n  );\n}\n\nexport function invalidChecksum(\n  path: string,\n  checksum: string,\n  calculated: string\n): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_CHECKSUM,\n    \"Uploaded/downloaded object '\" +\n      path +\n      \"' has checksum '\" +\n      checksum +\n      \"' which does not match '\" +\n      calculated +\n      \"'. Please retry the upload/download.\"\n  );\n}\n\nexport function canceled(): StorageError {\n  return new StorageError(\n    StorageErrorCode.CANCELED,\n    'User canceled the upload/download.'\n  );\n}\n\nexport function invalidEventName(name: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_EVENT_NAME,\n    \"Invalid event name '\" + name + \"'.\"\n  );\n}\n\nexport function invalidUrl(url: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_URL,\n    \"Invalid URL '\" + url + \"'.\"\n  );\n}\n\nexport function invalidDefaultBucket(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_DEFAULT_BUCKET,\n    \"Invalid default bucket '\" + bucket + \"'.\"\n  );\n}\n\nexport function noDefaultBucket(): StorageError {\n  return new StorageError(\n    StorageErrorCode.NO_DEFAULT_BUCKET,\n    'No default bucket ' +\n      \"found. Did you set the '\" +\n      CONFIG_STORAGE_BUCKET_KEY +\n      \"' property when initializing the app?\"\n  );\n}\n\nexport function cannotSliceBlob(): StorageError {\n  return new StorageError(\n    StorageErrorCode.CANNOT_SLICE_BLOB,\n    'Cannot slice blob for upload. Please retry the upload.'\n  );\n}\n\nexport function serverFileWrongSize(): StorageError {\n  return new StorageError(\n    StorageErrorCode.SERVER_FILE_WRONG_SIZE,\n    'Server recorded incorrect upload file size, please retry the upload.'\n  );\n}\n\nexport function noDownloadURL(): StorageError {\n  return new StorageError(\n    StorageErrorCode.NO_DOWNLOAD_URL,\n    'The given file does not have any download URLs.'\n  );\n}\n\n/**\n * @internal\n */\nexport function invalidArgument(message: string): StorageError {\n  return new StorageError(StorageErrorCode.INVALID_ARGUMENT, message);\n}\n\nexport function invalidArgumentCount(\n  argMin: number,\n  argMax: number,\n  fnName: string,\n  real: number\n): StorageError {\n  let countPart;\n  let plural;\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n  return new StorageError(\n    StorageErrorCode.INVALID_ARGUMENT_COUNT,\n    'Invalid argument count in `' +\n      fnName +\n      '`: Expected ' +\n      countPart +\n      ' ' +\n      plural +\n      ', received ' +\n      real +\n      '.'\n  );\n}\n\nexport function appDeleted(): StorageError {\n  return new StorageError(\n    StorageErrorCode.APP_DELETED,\n    'The Firebase app was deleted.'\n  );\n}\n\n/**\n * @param name - The name of the operation that was invalid.\n *\n * @internal\n */\nexport function invalidRootOperation(name: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_ROOT_OPERATION,\n    \"The operation '\" +\n      name +\n      \"' cannot be performed on a root reference, create a non-root \" +\n      \"reference using child, such as .child('file.png').\"\n  );\n}\n\n/**\n * @param format - The format that was not valid.\n * @param message - A message describing the format violation.\n */\nexport function invalidFormat(format: string, message: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_FORMAT,\n    \"String does not match format '\" + format + \"': \" + message\n  );\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function unsupportedEnvironment(message: string): StorageError {\n  throw new StorageError(StorageErrorCode.UNSUPPORTED_ENVIRONMENT, message);\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function internalError(message: string): StorageError {\n  throw new StorageError(\n    StorageErrorCode.INTERNAL_ERROR,\n    'Internal error: ' + message\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\n\nimport { invalidDefaultBucket, invalidUrl } from './error';\nimport { DEFAULT_HOST } from './constants';\n\n/**\n * Firebase Storage location data.\n *\n * @internal\n */\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  get isRoot(): boolean {\n    return this.path.length === 0;\n  }\n\n  fullServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string, host: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString, host);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string, host: string): Location {\n    let location: Location | null = null;\n    const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc: Location): void {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    const gsPath = '(/(.*))?$';\n    const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    const gsIndices = { bucket: 1, path: 3 };\n\n    function httpModify(loc: Location): void {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    const version = 'v[A-Za-z0-9_]+';\n    const firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\n    const firebaseStoragePath = '(/([^?#]*).*)?$';\n    const firebaseStorageRegExp = new RegExp(\n      `^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`,\n      'i'\n    );\n    const firebaseStorageIndices = { bucket: 1, path: 3 };\n\n    const cloudStorageHost =\n      host === DEFAULT_HOST\n        ? '(?:storage.googleapis.com|storage.cloud.google.com)'\n        : host;\n    const cloudStoragePath = '([^?#]*)';\n    const cloudStorageRegExp = new RegExp(\n      `^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`,\n      'i'\n    );\n    const cloudStorageIndices = { bucket: 1, path: 2 };\n\n    const groups = [\n      { regex: gsRegex, indices: gsIndices, postModify: gsModify },\n      {\n        regex: firebaseStorageRegExp,\n        indices: firebaseStorageIndices,\n        postModify: httpModify\n      },\n      {\n        regex: cloudStorageRegExp,\n        indices: cloudStorageIndices,\n        postModify: httpModify\n      }\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      const group = groups[i];\n      const captures = group.regex.exec(url);\n      if (captures) {\n        const bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n    return location;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StorageError } from './error';\nimport { Request } from './request';\n\n/**\n * A request whose promise always fails.\n */\nexport class FailRequest<T> implements Request<T> {\n  promise_: Promise<T>;\n\n  constructor(error: StorageError) {\n    this.promise_ = Promise.reject<T>(error);\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(_appDelete = false): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a method for running a function with exponential\n * backoff.\n */\ntype id = (p1: boolean) => void;\n\nexport { id };\n\n/**\n * @param f May be invoked\n *     before the function returns.\n * @param callback Get all the arguments passed to the function\n *     passed to f, including the initial boolean.\n */\nexport function start(\n  f: (p1: (success: boolean) => void, canceled: boolean) => void,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback: (...args: any[]) => unknown,\n  timeout: number\n): id {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  let waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let retryTimeoutId: any = null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let globalTimeoutId: any = null;\n  let hitTimeout = false;\n  let cancelState = 0;\n\n  function canceled(): boolean {\n    return cancelState === 2;\n  }\n  let triggeredCallback = false;\n\n  function triggerCallback(...args: any[]): void {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis: number): void {\n    retryTimeoutId = setTimeout(() => {\n      retryTimeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  function clearGlobalTimeout(): void {\n    if (globalTimeoutId) {\n      clearTimeout(globalTimeoutId);\n    }\n  }\n\n  function handler(success: boolean, ...args: any[]): void {\n    if (triggeredCallback) {\n      clearGlobalTimeout();\n      return;\n    }\n    if (success) {\n      clearGlobalTimeout();\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    const mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      clearGlobalTimeout();\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    let waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  let stopped = false;\n\n  function stop(wasTimeout: boolean): void {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    clearGlobalTimeout();\n    if (triggeredCallback) {\n      return;\n    }\n    if (retryTimeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(retryTimeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  globalTimeoutId = setTimeout(() => {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n\n/**\n * Stops the retry loop from repeating.\n * If the function is currently \"in between\" retries, it is invoked immediately\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\n * after the current invocation finishes iff the current invocation would have\n * triggered another retry.\n */\nexport function stop(id: id): void {\n  id(false);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { invalidArgument } from './error';\n\nexport function isJustDef<T>(p: T | null | undefined): p is T | null {\n  return p !== void 0;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(p: unknown): p is Function {\n  return typeof p === 'function';\n}\n\nexport function isNonArrayObject(p: unknown): boolean {\n  return typeof p === 'object' && !Array.isArray(p);\n}\n\nexport function isString(p: unknown): p is string {\n  return typeof p === 'string' || p instanceof String;\n}\n\nexport function isNativeBlob(p: unknown): p is Blob {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  return typeof Blob !== 'undefined';\n}\n\nexport function validateNumber(\n  argument: string,\n  minValue: number,\n  maxValue: number,\n  value: number\n): void {\n  if (value < minValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${minValue} or greater.`\n    );\n  }\n  if (value > maxValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${maxValue} or less.`\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport { UrlParams } from './requestinfo';\n\nexport function makeUrl(\n  urlPart: string,\n  host: string,\n  protocol: string\n): string {\n  let origin = host;\n  if (protocol == null) {\n    origin = `https://${host}`;\n  }\n  return `${protocol}://${origin}/v0${urlPart}`;\n}\n\nexport function makeQueryString(params: UrlParams): string {\n  const encode = encodeURIComponent;\n  let queryPart = '?';\n  for (const key in params) {\n    if (params.hasOwnProperty(key)) {\n      const nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  }\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Network headers */\nexport type Headers = Record<string, string>;\n\n/** Response type exposed by the networking APIs. */\nexport type ConnectionType =\n  | string\n  | ArrayBuffer\n  | Blob\n  | NodeJS.ReadableStream;\n\n/**\n * A lightweight wrapper around XMLHttpRequest with a\n * goog.net.XhrIo-like interface.\n *\n * You can create a new connection by invoking `newTextConnection()`,\n * `newBytesConnection()` or `newStreamConnection()`.\n */\nexport interface Connection<T extends ConnectionType> {\n  /**\n   * Sends a request to the provided URL.\n   *\n   * This method never rejects its promise. In case of encountering an error,\n   * it sets an error code internally which can be accessed by calling\n   * getErrorCode() by callers.\n   */\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string | null,\n    headers?: Headers\n  ): Promise<void>;\n\n  getErrorCode(): ErrorCode;\n\n  getStatus(): number;\n\n  getResponse(): T;\n\n  getErrorText(): string;\n\n  /**\n   * Abort the request.\n   */\n  abort(): void;\n\n  getResponseHeader(header: string): string | null;\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n}\n\n/**\n * Error codes for requests made by the the XhrIo wrapper.\n */\nexport enum ErrorCode {\n  NO_ERROR = 0,\n  NETWORK_ERROR = 1,\n  ABORT = 2\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods used to actually send HTTP requests from\n * abstract representations.\n */\n\nimport { id as backoffId, start, stop } from './backoff';\nimport { appDeleted, canceled, retryLimitExceeded, unknown } from './error';\nimport { ErrorHandler, RequestHandler, RequestInfo } from './requestinfo';\nimport { isJustDef } from './type';\nimport { makeQueryString } from './url';\nimport { Connection, ErrorCode, Headers, ConnectionType } from './connection';\n\nexport interface Request<T> {\n  getPromise(): Promise<T>;\n\n  /**\n   * Cancels the request. IMPORTANT: the promise may still be resolved with an\n   * appropriate value (if the request is finished before you call this method,\n   * but the promise has not yet been resolved), so don't just assume it will be\n   * rejected if you call this function.\n   * @param appDelete - True if the cancelation came from the app being deleted.\n   */\n  cancel(appDelete?: boolean): void;\n}\n\n/**\n * Handles network logic for all Storage Requests, including error reporting and\n * retries with backoff.\n *\n * @param I - the type of the backend's network response.\n * @param - O the output type used by the rest of the SDK. The conversion\n * happens in the specified `callback_`.\n */\nclass NetworkRequest<I extends ConnectionType, O> implements Request<O> {\n  private pendingConnection_: Connection<I> | null = null;\n  private backoffId_: backoffId | null = null;\n  private resolve_!: (value?: O | PromiseLike<O>) => void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private reject_!: (reason?: any) => void;\n  private canceled_: boolean = false;\n  private appDelete_: boolean = false;\n  private promise_: Promise<O>;\n\n  constructor(\n    private url_: string,\n    private method_: string,\n    private headers_: Headers,\n    private body_: string | Blob | Uint8Array | null,\n    private successCodes_: number[],\n    private additionalRetryCodes_: number[],\n    private callback_: RequestHandler<I, O>,\n    private errorCallback_: ErrorHandler | null,\n    private timeout_: number,\n    private progressCallback_: ((p1: number, p2: number) => void) | null,\n    private connectionFactory_: () => Connection<I>\n  ) {\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve as (value?: O | PromiseLike<O>) => void;\n      this.reject_ = reject;\n      this.start_();\n    });\n  }\n\n  /**\n   * Actually starts the retry loop.\n   */\n  private start_(): void {\n    const doTheRequest: (\n      backoffCallback: (success: boolean, ...p2: unknown[]) => void,\n      canceled: boolean\n    ) => void = (backoffCallback, canceled) => {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      const connection = this.connectionFactory_();\n      this.pendingConnection_ = connection;\n\n      const progressListener: (progressEvent: ProgressEvent) => void =\n        progressEvent => {\n          const loaded = progressEvent.loaded;\n          const total = progressEvent.lengthComputable\n            ? progressEvent.total\n            : -1;\n          if (this.progressCallback_ !== null) {\n            this.progressCallback_(loaded, total);\n          }\n        };\n      if (this.progressCallback_ !== null) {\n        connection.addUploadProgressListener(progressListener);\n      }\n\n      // connection.send() never rejects, so we don't need to have a error handler or use catch on the returned promise.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      connection\n        .send(this.url_, this.method_, this.body_, this.headers_)\n        .then(() => {\n          if (this.progressCallback_ !== null) {\n            connection.removeUploadProgressListener(progressListener);\n          }\n          this.pendingConnection_ = null;\n          const hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\n          const status = connection.getStatus();\n          if (!hitServer || this.isRetryStatusCode_(status)) {\n            const wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\n            backoffCallback(\n              false,\n              new RequestEndStatus(false, null, wasCanceled)\n            );\n            return;\n          }\n          const successCode = this.successCodes_.indexOf(status) !== -1;\n          backoffCallback(true, new RequestEndStatus(successCode, connection));\n        });\n    };\n\n    /**\n     * @param requestWentThrough - True if the request eventually went\n     *     through, false if it hit the retry limit or was canceled.\n     */\n    const backoffDone: (\n      requestWentThrough: boolean,\n      status: RequestEndStatus<I>\n    ) => void = (requestWentThrough, status) => {\n      const resolve = this.resolve_;\n      const reject = this.reject_;\n      const connection = status.connection as Connection<I>;\n      if (status.wasSuccessCode) {\n        try {\n          const result = this.callback_(connection, connection.getResponse());\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (connection !== null) {\n          const err = unknown();\n          err.serverResponse = connection.getErrorText();\n          if (this.errorCallback_) {\n            reject(this.errorCallback_(connection, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            const err = this.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            const err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    };\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<O> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete?: boolean): void {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n    if (this.pendingConnection_ !== null) {\n      this.pendingConnection_.abort();\n    }\n  }\n\n  private isRetryStatusCode_(status: number): boolean {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    const isFiveHundredCode = status >= 500 && status < 600;\n    const extraRetryCodes = [\n      // Request Timeout: web server didn't receive full request in time.\n      408,\n      // Too Many Requests: you're getting rate-limited, basically.\n      429\n    ];\n    const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    const isRequestSpecificRetryCode =\n      this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  }\n}\n\n/**\n * A collection of information about the result of a network request.\n * @param opt_canceled - Defaults to false.\n */\nexport class RequestEndStatus<I extends ConnectionType> {\n  /**\n   * True if the request was canceled.\n   */\n  canceled: boolean;\n\n  constructor(\n    public wasSuccessCode: boolean,\n    public connection: Connection<I> | null,\n    canceled?: boolean\n  ) {\n    this.canceled = !!canceled;\n  }\n}\n\nexport function addAuthHeader_(\n  headers: Headers,\n  authToken: string | null\n): void {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nexport function addVersionHeader_(\n  headers: Headers,\n  firebaseVersion?: string\n): void {\n  headers['X-Firebase-Storage-Version'] =\n    'webjs/' + (firebaseVersion ?? 'AppManager');\n}\n\nexport function addGmpidHeader_(headers: Headers, appId: string | null): void {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\nexport function addAppCheckHeader_(\n  headers: Headers,\n  appCheckToken: string | null\n): void {\n  if (appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = appCheckToken;\n  }\n}\n\nexport function makeRequest<I extends ConnectionType, O>(\n  requestInfo: RequestInfo<I, O>,\n  appId: string | null,\n  authToken: string | null,\n  appCheckToken: string | null,\n  requestFactory: () => Connection<I>,\n  firebaseVersion?: string\n): Request<O> {\n  const queryPart = makeQueryString(requestInfo.urlParams);\n  const url = requestInfo.url + queryPart;\n  const headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers, firebaseVersion);\n  addAppCheckHeader_(headers, appCheckToken);\n  return new NetworkRequest<I, O>(\n    url,\n    requestInfo.method,\n    headers,\n    requestInfo.body,\n    requestInfo.successCodes,\n    requestInfo.additionalRetryCodes,\n    requestInfo.handler,\n    requestInfo.errorHandler,\n    requestInfo.timeout,\n    requestInfo.progressCallback,\n    requestFactory\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Some methods copied from goog.fs.\n * We don't include goog.fs because it pulls in a bunch of Deferred code that\n * bloats the size of the released binary.\n */\nimport { isNativeBlobDefined } from './type';\nimport { StorageErrorCode, StorageError } from './error';\n\nfunction getBlobBuilder(): typeof IBlobBuilder | undefined {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Concatenates one or more values together and converts them to a Blob.\n *\n * @param args The values that will make up the resulting blob.\n * @return The blob.\n */\nexport function getBlob(...args: Array<string | Blob | ArrayBuffer>): Blob {\n  const BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    const bb = new BlobBuilder();\n    for (let i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw new StorageError(\n        StorageErrorCode.UNSUPPORTED_ENVIRONMENT,\n        \"This browser doesn't seem to support creating Blobs\"\n      );\n    }\n  }\n}\n\n/**\n * Slices the blob. The returned blob contains data from the start byte\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\n *\n * @param blob The blob to be sliced.\n * @param start Index of the starting byte.\n * @param end Index of the ending byte.\n * @return The blob slice or null if not supported.\n */\nexport function sliceBlob(blob: Blob, start: number, end: number): Blob | null {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Converts a Base64 encoded string to a binary string. */\nexport function decodeBase64(encoded: string): string {\n  return atob(encoded);\n}\n\nexport function decodeUint8Array(data: Uint8Array): string {\n  return new TextDecoder().decode(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { unknown, invalidFormat } from './error';\nimport { decodeBase64 } from '../platform/base64';\n\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport type StringFormat = typeof StringFormat[keyof typeof StringFormat];\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport const StringFormat = {\n  /**\n   * Indicates the string should be interpreted \"raw\", that is, as normal text.\n   * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\n   * sequence.\n   * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\n   * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\n   */\n  RAW: 'raw',\n  /**\n   * Indicates the string should be interpreted as base64-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64: 'base64',\n  /**\n   * Indicates the string should be interpreted as base64url-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64URL: 'base64url',\n  /**\n   * Indicates the string is a data URL, such as one obtained from\n   * canvas.toDataURL().\n   * Example: the string 'data:application/octet-stream;base64,aaaa'\n   * becomes the byte sequence\n   * 69 a6 9a\n   * (the content-type \"application/octet-stream\" is also applied, but can\n   * be overridden in the metadata object).\n   */\n  DATA_URL: 'data_url'\n} as const;\n\nexport class StringData {\n  contentType: string | null;\n\n  constructor(public data: Uint8Array, contentType?: string | null) {\n    this.contentType = contentType || null;\n  }\n}\n\n/**\n * @internal\n */\nexport function dataFromString(\n  format: StringFormat,\n  stringData: string\n): StringData {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n    case StringFormat.DATA_URL:\n      return new StringData(\n        dataURLBytes_(stringData),\n        dataURLContentType_(stringData)\n      );\n    default:\n    // do nothing\n  }\n\n  // assert(false);\n  throw unknown();\n}\n\nexport function utf8Bytes_(value: string): Uint8Array {\n  const b: number[] = [];\n  for (let i = 0; i < value.length; i++) {\n    let c = value.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | (c >> 6), 128 | (c & 63));\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          const valid =\n            i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            const hi = c;\n            const lo = value.charCodeAt(++i);\n            c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\n            b.push(\n              240 | (c >> 18),\n              128 | ((c >> 12) & 63),\n              128 | ((c >> 6) & 63),\n              128 | (c & 63)\n            );\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\n\nexport function percentEncodedBytes_(value: string): Uint8Array {\n  let decoded;\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n  return utf8Bytes_(decoded);\n}\n\nexport function base64Bytes_(format: StringFormat, value: string): Uint8Array {\n  switch (format) {\n    case StringFormat.BASE64: {\n      const hasMinus = value.indexOf('-') !== -1;\n      const hasUnder = value.indexOf('_') !== -1;\n      if (hasMinus || hasUnder) {\n        const invalidChar = hasMinus ? '-' : '_';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" +\n            invalidChar +\n            \"' found: is it base64url encoded?\"\n        );\n      }\n      break;\n    }\n    case StringFormat.BASE64URL: {\n      const hasPlus = value.indexOf('+') !== -1;\n      const hasSlash = value.indexOf('/') !== -1;\n      if (hasPlus || hasSlash) {\n        const invalidChar = hasPlus ? '+' : '/';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\"\n        );\n      }\n      value = value.replace(/-/g, '+').replace(/_/g, '/');\n      break;\n    }\n    default:\n    // do nothing\n  }\n  let bytes;\n  try {\n    bytes = decodeBase64(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n  const array = new Uint8Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\n\nclass DataURLParts {\n  base64: boolean = false;\n  contentType: string | null = null;\n  rest: string;\n\n  constructor(dataURL: string) {\n    const matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw invalidFormat(\n        StringFormat.DATA_URL,\n        \"Must be formatted 'data:[<mediatype>][;base64],<data>\"\n      );\n    }\n    const middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64\n        ? middle.substring(0, middle.length - ';base64'.length)\n        : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n}\n\nexport function dataURLBytes_(dataUrl: string): Uint8Array {\n  const parts = new DataURLParts(dataUrl);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nexport function dataURLContentType_(dataUrl: string): string | null {\n  const parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s: string, end: string): boolean {\n  const longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Provides a Blob-like wrapper for various binary types (including the\n * native Blob type). This makes it possible to upload types like ArrayBuffers,\n * making uploads possible in environments without the native Blob type.\n */\nimport { sliceBlob, getBlob } from './fs';\nimport { StringFormat, dataFromString } from './string';\nimport { isNativeBlob, isNativeBlobDefined, isString } from './type';\n\n/**\n * @param opt_elideCopy - If true, doesn't copy mutable input data\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\n *     modified after this blob's construction.\n *\n * @internal\n */\nexport class FbsBlob {\n  private data_!: Blob | Uint8Array;\n  private size_: number;\n  private type_: string;\n\n  constructor(data: Blob | Uint8Array | ArrayBuffer, elideCopy?: boolean) {\n    let size: number = 0;\n    let blobType: string = '';\n    if (isNativeBlob(data)) {\n      this.data_ = data as Blob;\n      size = (data as Blob).size;\n      blobType = (data as Blob).type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data as Uint8Array;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data as Uint8Array);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  size(): number {\n    return this.size_;\n  }\n\n  type(): string {\n    return this.type_;\n  }\n\n  slice(startByte: number, endByte: number): FbsBlob | null {\n    if (isNativeBlob(this.data_)) {\n      const realBlob = this.data_ as Blob;\n      const sliced = sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      const slice = new Uint8Array(\n        (this.data_ as Uint8Array).buffer,\n        startByte,\n        endByte - startByte\n      );\n      return new FbsBlob(slice, true);\n    }\n  }\n\n  static getBlob(...args: Array<string | FbsBlob>): FbsBlob | null {\n    if (isNativeBlobDefined()) {\n      const blobby: Array<Blob | Uint8Array | string> = args.map(\n        (val: string | FbsBlob): Blob | Uint8Array | string => {\n          if (val instanceof FbsBlob) {\n            return val.data_;\n          } else {\n            return val;\n          }\n        }\n      );\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      const uint8Arrays: Uint8Array[] = args.map(\n        (val: string | FbsBlob): Uint8Array => {\n          if (isString(val)) {\n            return dataFromString(StringFormat.RAW, val as string).data;\n          } else {\n            // Blobs don't exist, so this has to be a Uint8Array.\n            return (val as FbsBlob).data_ as Uint8Array;\n          }\n        }\n      );\n      let finalLength = 0;\n      uint8Arrays.forEach((array: Uint8Array): void => {\n        finalLength += array.byteLength;\n      });\n      const merged = new Uint8Array(finalLength);\n      let index = 0;\n      uint8Arrays.forEach((array: Uint8Array) => {\n        for (let i = 0; i < array.length; i++) {\n          merged[index++] = array[i];\n        }\n      });\n      return new FbsBlob(merged, true);\n    }\n  }\n\n  uploadData(): Blob | Uint8Array {\n    return this.data_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isNonArrayObject } from './type';\n\n/**\n * Returns the Object resulting from parsing the given JSON, or null if the\n * given string does not represent a JSON object.\n */\nexport function jsonObjectOrNull(\n  s: string\n): { [name: string]: unknown } | null {\n  let obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n */\nexport function parent(path: string): string | null {\n  if (path.length === 0) {\n    return null;\n  }\n  const index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  const newPath = path.slice(0, index);\n  return newPath;\n}\n\nexport function child(path: string, childPath: string): string {\n  const canonicalChildPath = childPath\n    .split('/')\n    .filter(component => component.length > 0)\n    .join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nexport function lastComponent(path: string): string {\n  const index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the metadata format\n */\nimport { Metadata } from '../metadata';\n\nimport { jsonObjectOrNull } from './json';\nimport { Location } from './location';\nimport { lastComponent } from './path';\nimport { isString } from './type';\nimport { makeUrl, makeQueryString } from './url';\nimport { Reference } from '../reference';\nimport { FirebaseStorageImpl } from '../service';\n\nexport function noXform_<T>(metadata: Metadata, value: T): T {\n  return value;\n}\n\nclass Mapping<T> {\n  local: string;\n  writable: boolean;\n  xform: (p1: Metadata, p2?: T) => T | undefined;\n\n  constructor(\n    public server: string,\n    local?: string | null,\n    writable?: boolean,\n    xform?: ((p1: Metadata, p2?: T) => T | undefined) | null\n  ) {\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n}\ntype Mappings = Array<Mapping<string> | Mapping<number>>;\n\nexport { Mappings };\n\nlet mappings_: Mappings | null = null;\n\nexport function xformPath(fullPath: string | undefined): string | undefined {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nexport function getMappings(): Mappings {\n  if (mappings_) {\n    return mappings_;\n  }\n  const mappings: Mappings = [];\n  mappings.push(new Mapping<string>('bucket'));\n  mappings.push(new Mapping<string>('generation'));\n  mappings.push(new Mapping<string>('metageneration'));\n  mappings.push(new Mapping<string>('name', 'fullPath', true));\n\n  function mappingsXformPath(\n    _metadata: Metadata,\n    fullPath: string | undefined\n  ): string | undefined {\n    return xformPath(fullPath);\n  }\n  const nameMapping = new Mapping<string>('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n\n  /**\n   * Coerces the second param to a number, if it is defined.\n   */\n  function xformSize(\n    _metadata: Metadata,\n    size?: number | string\n  ): number | undefined {\n    if (size !== undefined) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n  const sizeMapping = new Mapping<number>('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping<number>('timeCreated'));\n  mappings.push(new Mapping<string>('updated'));\n  mappings.push(new Mapping<string>('md5Hash', null, true));\n  mappings.push(new Mapping<string>('cacheControl', null, true));\n  mappings.push(new Mapping<string>('contentDisposition', null, true));\n  mappings.push(new Mapping<string>('contentEncoding', null, true));\n  mappings.push(new Mapping<string>('contentLanguage', null, true));\n  mappings.push(new Mapping<string>('contentType', null, true));\n  mappings.push(new Mapping<string>('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nexport function addRef(metadata: Metadata, service: FirebaseStorageImpl): void {\n  function generateRef(): Reference {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const loc = new Location(bucket, path);\n    return service._makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', { get: generateRef });\n}\n\nexport function fromResource(\n  service: FirebaseStorageImpl,\n  resource: { [name: string]: unknown },\n  mappings: Mappings\n): Metadata {\n  const metadata: Metadata = {} as Metadata;\n  metadata['type'] = 'file';\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    metadata[mapping.local] = (mapping as Mapping<unknown>).xform(\n      metadata,\n      resource[mapping.server]\n    );\n  }\n  addRef(metadata, service);\n  return metadata;\n}\n\nexport function fromResourceString(\n  service: FirebaseStorageImpl,\n  resourceString: string,\n  mappings: Mappings\n): Metadata | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as Metadata;\n  return fromResource(service, resource, mappings);\n}\n\nexport function downloadUrlFromResourceString(\n  metadata: Metadata,\n  resourceString: string,\n  host: string,\n  protocol: string\n): string | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n  const tokens: string = obj['downloadTokens'] as string;\n  if (tokens.length === 0) {\n    return null;\n  }\n  const encode = encodeURIComponent;\n  const tokensList = tokens.split(',');\n  const urls = tokensList.map((token: string): string => {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    const base = makeUrl(urlPart, host, protocol);\n    const queryString = makeQueryString({\n      alt: 'media',\n      token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nexport function toResourceString(\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): string {\n  const resource: {\n    [prop: string]: unknown;\n  } = {};\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StorageError } from './error';\nimport { Headers, Connection, ConnectionType } from './connection';\n\n/**\n * Type for url params stored in RequestInfo.\n */\nexport interface UrlParams {\n  [name: string]: string | number;\n}\n\n/**\n * A function that converts a server response to the API type expected by the\n * SDK.\n *\n * @param I - the type of the backend's network response\n * @param O - the output response type used by the rest of the SDK.\n */\nexport type RequestHandler<I extends ConnectionType, O> = (\n  connection: Connection<I>,\n  response: I\n) => O;\n\n/** A function to handle an error. */\nexport type ErrorHandler = (\n  connection: Connection<ConnectionType>,\n  response: StorageError\n) => StorageError;\n\n/**\n * Contains a fully specified request.\n *\n * @param I - the type of the backend's network response.\n * @param O - the output response type used by the rest of the SDK.\n */\nexport class RequestInfo<I extends ConnectionType, O> {\n  urlParams: UrlParams = {};\n  headers: Headers = {};\n  body: Blob | string | Uint8Array | null = null;\n  errorHandler: ErrorHandler | null = null;\n\n  /**\n   * Called with the current number of bytes uploaded and total size (-1 if not\n   * computable) of the request body (i.e. used to report upload progress).\n   */\n  progressCallback: ((p1: number, p2: number) => void) | null = null;\n  successCodes: number[] = [200];\n  additionalRetryCodes: number[] = [];\n\n  constructor(\n    public url: string,\n    public method: string,\n    /**\n     * Returns the value with which to resolve the request's promise. Only called\n     * if the request is successful. Throw from this function to reject the\n     * returned Request's promise with the thrown error.\n     * Note: The XhrIo passed to this function may be reused after this callback\n     * returns. Do not keep a reference to it in any way.\n     */\n    public handler: RequestHandler<I, O>,\n    public timeout: number\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods for interacting with the network.\n */\n\nimport { Metadata } from '../metadata';\nimport { ListResult } from '../list';\nimport { FbsBlob } from './blob';\nimport {\n  StorageError,\n  cannotSliceBlob,\n  unauthenticated,\n  quotaExceeded,\n  unauthorized,\n  objectNotFound,\n  serverFileWrongSize,\n  unknown,\n  unauthorizedApp\n} from './error';\nimport { Location } from './location';\nimport {\n  Mappings,\n  fromResourceString,\n  downloadUrlFromResourceString,\n  toResourceString\n} from './metadata';\nimport { fromResponseString } from './list';\nimport { RequestInfo, UrlParams } from './requestinfo';\nimport { isString } from './type';\nimport { makeUrl } from './url';\nimport { Connection, ConnectionType } from './connection';\nimport { FirebaseStorageImpl } from '../service';\n\n/**\n * Throws the UNKNOWN StorageError if cndn is false.\n */\nexport function handlerCheck(cndn: boolean): void {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nexport function metadataHandler(\n  service: FirebaseStorageImpl,\n  mappings: Mappings\n): (p1: Connection<string>, p2: string) => Metadata {\n  function handler(xhr: Connection<string>, text: string): Metadata {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata as Metadata;\n  }\n  return handler;\n}\n\nexport function listHandler(\n  service: FirebaseStorageImpl,\n  bucket: string\n): (p1: Connection<string>, p2: string) => ListResult {\n  function handler(xhr: Connection<string>, text: string): ListResult {\n    const listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult as ListResult;\n  }\n  return handler;\n}\n\nexport function downloadUrlHandler(\n  service: FirebaseStorageImpl,\n  mappings: Mappings\n): (p1: Connection<string>, p2: string) => string | null {\n  function handler(xhr: Connection<string>, text: string): string | null {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(\n      metadata as Metadata,\n      text,\n      service.host,\n      service._protocol\n    );\n  }\n  return handler;\n}\n\nexport function sharedErrorHandler(\n  location: Location\n): (p1: Connection<ConnectionType>, p2: StorageError) => StorageError {\n  function errorHandler(\n    xhr: Connection<ConnectionType>,\n    err: StorageError\n  ): StorageError {\n    let newErr;\n    if (xhr.getStatus() === 401) {\n      if (\n        // This exact message string is the only consistent part of the\n        // server's error response that identifies it as an App Check error.\n        xhr.getErrorText().includes('Firebase App Check token is invalid')\n      ) {\n        newErr = unauthorizedApp();\n      } else {\n        newErr = unauthenticated();\n      }\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function objectErrorHandler(\n  location: Location\n): (p1: Connection<ConnectionType>, p2: StorageError) => StorageError {\n  const shared = sharedErrorHandler(location);\n\n  function errorHandler(\n    xhr: Connection<ConnectionType>,\n    err: StorageError\n  ): StorageError {\n    let newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function getMetadata(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<string, Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function list(\n  service: FirebaseStorageImpl,\n  location: Location,\n  delimiter?: string,\n  pageToken?: string | null,\n  maxResults?: number | null\n): RequestInfo<string, ListResult> {\n  const urlParams: UrlParams = {};\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n  const urlPart = location.bucketOnlyServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    listHandler(service, location.bucket),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nexport function getBytes<I extends ConnectionType>(\n  service: FirebaseStorageImpl,\n  location: Location,\n  maxDownloadSizeBytes?: number\n): RequestInfo<I, I> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol) + '?alt=media';\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    (_: Connection<I>, data: I) => data,\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  if (maxDownloadSizeBytes !== undefined) {\n    requestInfo.headers['Range'] = `bytes=0-${maxDownloadSizeBytes}`;\n    requestInfo.successCodes = [200 /* OK */, 206 /* Partial Content */];\n  }\n  return requestInfo;\n}\n\nexport function getDownloadUrl(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<string, string | null> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    downloadUrlHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function updateMetadata(\n  service: FirebaseStorageImpl,\n  location: Location,\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): RequestInfo<string, Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'PATCH';\n  const body = toResourceString(metadata, mappings);\n  const headers = { 'Content-Type': 'application/json; charset=utf-8' };\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function deleteObject(\n  service: FirebaseStorageImpl,\n  location: Location\n): RequestInfo<string, void> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'DELETE';\n  const timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr: Connection<string>, _text: string): void {}\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function determineContentType_(\n  metadata: Metadata | null,\n  blob: FbsBlob | null\n): string {\n  return (\n    (metadata && metadata['contentType']) ||\n    (blob && blob.type()) ||\n    'application/octet-stream'\n  );\n}\n\nexport function metadataForUpload_(\n  location: Location,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): Metadata {\n  const metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n  return metadataClone;\n}\n\n/**\n * Prepare RequestInfo for uploads as Content-Type: multipart.\n */\nexport function multipartUpload(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string, Metadata> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const headers: { [prop: string]: string } = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary(): string {\n    let str = '';\n    for (let i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n    return str;\n  }\n  const boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  const metadata_ = metadataForUpload_(location, blob, metadata);\n  const metadataString = toResourceString(metadata_, mappings);\n  const preBlobPart =\n    '--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\n    metadataString +\n    '\\r\\n--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: ' +\n    metadata_['contentType'] +\n    '\\r\\n\\r\\n';\n  const postBlobPart = '\\r\\n--' + boundary + '--';\n  const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  const urlParams: UrlParams = { name: metadata_['fullPath']! };\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param current The number of bytes that have been uploaded so far.\n * @param total The total number of bytes in the upload.\n * @param opt_finalized True if the server has finished the upload.\n * @param opt_metadata The upload metadata, should\n *     only be passed if opt_finalized is true.\n */\nexport class ResumableUploadStatus {\n  finalized: boolean;\n  metadata: Metadata | null;\n\n  constructor(\n    public current: number,\n    public total: number,\n    finalized?: boolean,\n    metadata?: Metadata | null\n  ) {\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n}\n\nexport function checkResumeHeader_(\n  xhr: Connection<string>,\n  allowed?: string[]\n): string {\n  let status: string | null = null;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  const allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status as string;\n}\n\nexport function createResumableUpload(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string, string> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const metadataForUpload = metadataForUpload_(location, blob, metadata);\n  const urlParams: UrlParams = { name: metadataForUpload['fullPath']! };\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'POST';\n  const headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': `${blob.size()}`,\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType']!,\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  const body = toResourceString(metadataForUpload, mappings);\n  const timeout = service.maxUploadRetryTime;\n\n  function handler(xhr: Connection<string>): string {\n    checkResumeHeader_(xhr);\n    let url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(isString(url));\n    return url as string;\n  }\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n */\nexport function getResumableUploadStatus(\n  service: FirebaseStorageImpl,\n  location: Location,\n  url: string,\n  blob: FbsBlob\n): RequestInfo<string, ResumableUploadStatus> {\n  const headers = { 'X-Goog-Upload-Command': 'query' };\n\n  function handler(xhr: Connection<string>): ResumableUploadStatus {\n    const status = checkResumeHeader_(xhr, ['active', 'final']);\n    let sizeString: string | null = null;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    const size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * Any uploads via the resumable upload API must transfer a number of bytes\n * that is a multiple of this number.\n */\nexport const RESUMABLE_UPLOAD_CHUNK_SIZE: number = 256 * 1024;\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n * @param chunkSize Number of bytes to upload.\n * @param status The previous status.\n *     If not passed or null, we start from the beginning.\n * @throws fbs.Error If the upload is already complete, the passed in status\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\n *     for upload.\n */\nexport function continueResumableUpload(\n  location: Location,\n  service: FirebaseStorageImpl,\n  url: string,\n  blob: FbsBlob,\n  chunkSize: number,\n  mappings: Mappings,\n  status?: ResumableUploadStatus | null,\n  progressCallback?: ((p1: number, p2: number) => void) | null\n): RequestInfo<string, ResumableUploadStatus> {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  const status_ = new ResumableUploadStatus(0, 0);\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n  const bytesLeft = status_.total - status_.current;\n  let bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  const startByte = status_.current;\n  const endByte = startByte + bytesToUpload;\n  const uploadCommand =\n    bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  const headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': `${status_.current}`\n  };\n  const body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(\n    xhr: Connection<string>,\n    text: string\n  ): ResumableUploadStatus {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    const newCurrent = status_.current + bytesToUpload;\n    const size = blob.size();\n    let metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(\n      newCurrent,\n      size,\n      uploadStatus === 'final',\n      metadata\n    );\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Enumerations used for upload tasks.\n */\n\n/**\n * An event that is triggered on a task.\n * @internal\n */\nexport type TaskEvent = string;\n\n/**\n * An event that is triggered on a task.\n * @internal\n */\nexport const TaskEvent = {\n  /**\n   * For this event,\n   * <ul>\n   *   <li>The `next` function is triggered on progress updates and when the\n   *       task is paused/resumed with an `UploadTaskSnapshot` as the first\n   *       argument.</li>\n   *   <li>The `error` function is triggered if the upload is canceled or fails\n   *       for another reason.</li>\n   *   <li>The `complete` function is triggered if the upload completes\n   *       successfully.</li>\n   * </ul>\n   */\n  STATE_CHANGED: 'state_changed'\n};\n\n/**\n * Internal enum for task state.\n */\nexport const enum InternalTaskState {\n  RUNNING = 'running',\n  PAUSING = 'pausing',\n  PAUSED = 'paused',\n  SUCCESS = 'success',\n  CANCELING = 'canceling',\n  CANCELED = 'canceled',\n  ERROR = 'error'\n}\n\n/**\n * Represents the current state of a running upload.\n * @internal\n */\nexport type TaskState = typeof TaskState[keyof typeof TaskState];\n\n// type keys = keyof TaskState\n/**\n * Represents the current state of a running upload.\n * @internal\n */\nexport const TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n} as const;\n\nexport function taskStateFromInternalTaskState(\n  state: InternalTaskState\n): TaskState {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isFunction } from './type';\nimport { StorageError } from './error';\n\n/**\n * Function that is called once for each value in a stream of values.\n */\nexport type NextFn<T> = (value: T) => void;\n\n/**\n * A function that is called with a `StorageError`\n * if the event stream ends due to an error.\n */\nexport type ErrorFn = (error: StorageError) => void;\n\n/**\n * A function that is called if the event stream ends normally.\n */\nexport type CompleteFn = () => void;\n\n/**\n * Unsubscribes from a stream.\n */\nexport type Unsubscribe = () => void;\n\n/**\n * An observer identical to the `Observer` defined in packages/util except the\n * error passed into the ErrorFn is specifically a `StorageError`.\n */\nexport interface StorageObserver<T> {\n  /**\n   * Function that is called once for each value in the event stream.\n   */\n  next?: NextFn<T>;\n  /**\n   * A function that is called with a `StorageError`\n   * if the event stream ends due to an error.\n   */\n  error?: ErrorFn;\n  /**\n   * A function that is called if the event stream ends normally.\n   */\n  complete?: CompleteFn;\n}\n\n/**\n * Subscribes to an event stream.\n */\nexport type Subscribe<T> = (\n  next?: NextFn<T> | StorageObserver<T>,\n  error?: ErrorFn,\n  complete?: CompleteFn\n) => Unsubscribe;\n\nexport class Observer<T> implements StorageObserver<T> {\n  next?: NextFn<T>;\n  error?: ErrorFn;\n  complete?: CompleteFn;\n\n  constructor(\n    nextOrObserver?: NextFn<T> | StorageObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ) {\n    const asFunctions =\n      isFunction(nextOrObserver) || error != null || complete != null;\n    if (asFunctions) {\n      this.next = nextOrObserver as NextFn<T>;\n      this.error = error ?? undefined;\n      this.complete = complete ?? undefined;\n    } else {\n      const observer = nextOrObserver as {\n        next?: NextFn<T>;\n        error?: ErrorFn;\n        complete?: CompleteFn;\n      };\n      this.next = observer.next;\n      this.error = observer.error;\n      this.complete = observer.complete;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(f: Function): Function {\n  return (...argsToForward: unknown[]) => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(() => f(...argsToForward));\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Connection,\n  ConnectionType,\n  ErrorCode,\n  Headers\n} from '../../implementation/connection';\nimport { internalError } from '../../implementation/error';\n\n/** An override for the text-based Connection. Used in tests. */\nlet textFactoryOverride: (() => Connection<string>) | null = null;\n\n/**\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\n */\nabstract class XhrConnection<T extends ConnectionType>\n  implements Connection<T>\n{\n  protected xhr_: XMLHttpRequest;\n  private errorCode_: ErrorCode;\n  private sendPromise_: Promise<void>;\n  protected sent_: boolean = false;\n\n  constructor() {\n    this.xhr_ = new XMLHttpRequest();\n    this.initXhr();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(resolve => {\n      this.xhr_.addEventListener('abort', () => {\n        this.errorCode_ = ErrorCode.ABORT;\n        resolve();\n      });\n      this.xhr_.addEventListener('error', () => {\n        this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve();\n      });\n      this.xhr_.addEventListener('load', () => {\n        resolve();\n      });\n    });\n  }\n\n  abstract initXhr(): void;\n\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string,\n    headers?: Headers\n  ): Promise<void> {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (headers !== undefined) {\n      for (const key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n    if (body !== undefined) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  }\n\n  getErrorCode(): ErrorCode {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n    return this.errorCode_;\n  }\n\n  getStatus(): number {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  getResponse(): T {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponse() before sending');\n    }\n    return this.xhr_.response;\n  }\n\n  getErrorText(): string {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorText() before sending');\n    }\n    return this.xhr_.statusText;\n  }\n\n  /** Aborts the request. */\n  abort(): void {\n    this.xhr_.abort();\n  }\n\n  getResponseHeader(header: string): string | null {\n    return this.xhr_.getResponseHeader(header);\n  }\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  }\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  }\n}\n\nexport class XhrTextConnection extends XhrConnection<string> {\n  initXhr(): void {\n    this.xhr_.responseType = 'text';\n  }\n}\n\nexport function newTextConnection(): Connection<string> {\n  return textFactoryOverride ? textFactoryOverride() : new XhrTextConnection();\n}\n\nexport class XhrBytesConnection extends XhrConnection<ArrayBuffer> {\n  private data_?: ArrayBuffer;\n\n  initXhr(): void {\n    this.xhr_.responseType = 'arraybuffer';\n  }\n}\n\nexport function newBytesConnection(): Connection<ArrayBuffer> {\n  return new XhrBytesConnection();\n}\n\nexport class XhrBlobConnection extends XhrConnection<Blob> {\n  initXhr(): void {\n    this.xhr_.responseType = 'blob';\n  }\n}\n\nexport function newBlobConnection(): Connection<Blob> {\n  return new XhrBlobConnection();\n}\n\nexport function newStreamConnection(): Connection<NodeJS.ReadableStream> {\n  throw new Error('Streams are only supported on Node');\n}\n\nexport function injectTestConnection(\n  factory: (() => Connection<string>) | null\n): void {\n  textFactoryOverride = factory;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Defines types for interacting with blob transfer tasks.\n */\n\nimport { FbsBlob } from './implementation/blob';\nimport {\n  canceled,\n  StorageErrorCode,\n  StorageError\n} from './implementation/error';\nimport {\n  InternalTaskState,\n  TaskEvent,\n  TaskState,\n  taskStateFromInternalTaskState\n} from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport {\n  Observer,\n  Subscribe,\n  Unsubscribe,\n  StorageObserver as StorageObserverInternal,\n  NextFn\n} from './implementation/observer';\nimport { Request } from './implementation/request';\nimport { UploadTaskSnapshot, StorageObserver } from './public-types';\nimport { async as fbsAsync } from './implementation/async';\nimport { Mappings, getMappings } from './implementation/metadata';\nimport {\n  createResumableUpload,\n  getResumableUploadStatus,\n  RESUMABLE_UPLOAD_CHUNK_SIZE,\n  ResumableUploadStatus,\n  continueResumableUpload,\n  getMetadata,\n  multipartUpload\n} from './implementation/requests';\nimport { Reference } from './reference';\nimport { newTextConnection } from './platform/connection';\n\n/**\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\n * upload and manage callbacks for various events.\n * @internal\n */\nexport class UploadTask {\n  private _ref: Reference;\n  /**\n   * The data to be uploaded.\n   */\n  _blob: FbsBlob;\n  /**\n   * Metadata related to the upload.\n   */\n  _metadata: Metadata | null;\n  private _mappings: Mappings;\n  /**\n   * Number of bytes transferred so far.\n   */\n  _transferred: number = 0;\n  private _needToFetchStatus: boolean = false;\n  private _needToFetchMetadata: boolean = false;\n  private _observers: Array<StorageObserverInternal<UploadTaskSnapshot>> = [];\n  private _resumable: boolean;\n  /**\n   * Upload state.\n   */\n  _state: InternalTaskState;\n  private _error?: StorageError = undefined;\n  private _uploadUrl?: string = undefined;\n  private _request?: Request<unknown> = undefined;\n  private _chunkMultiplier: number = 1;\n  private _errorHandler: (p1: StorageError) => void;\n  private _metadataErrorHandler: (p1: StorageError) => void;\n  private _resolve?: (p1: UploadTaskSnapshot) => void = undefined;\n  private _reject?: (p1: StorageError) => void = undefined;\n  private _promise: Promise<UploadTaskSnapshot>;\n\n  /**\n   * @param ref - The firebaseStorage.Reference object this task came\n   *     from, untyped to avoid cyclic dependencies.\n   * @param blob - The blob to upload.\n   */\n  constructor(ref: Reference, blob: FbsBlob, metadata: Metadata | null = null) {\n    this._ref = ref;\n    this._blob = blob;\n    this._metadata = metadata;\n    this._mappings = getMappings();\n    this._resumable = this._shouldDoResumable(this._blob);\n    this._state = InternalTaskState.RUNNING;\n    this._errorHandler = error => {\n      this._request = undefined;\n      this._chunkMultiplier = 1;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this._needToFetchStatus = true;\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this._metadataErrorHandler = error => {\n      this._request = undefined;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n      this._start();\n    });\n\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this._promise.then(null, () => {});\n  }\n\n  private _makeProgressCallback(): (p1: number, p2: number) => void {\n    const sizeBefore = this._transferred;\n    return loaded => this._updateProgress(sizeBefore + loaded);\n  }\n\n  private _shouldDoResumable(blob: FbsBlob): boolean {\n    return blob.size() > 256 * 1024;\n  }\n\n  private _start(): void {\n    if (this._state !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this._request !== undefined) {\n      return;\n    }\n    if (this._resumable) {\n      if (this._uploadUrl === undefined) {\n        this._createResumable();\n      } else {\n        if (this._needToFetchStatus) {\n          this._fetchStatus();\n        } else {\n          if (this._needToFetchMetadata) {\n            // Happens if we miss the metadata on upload completion.\n            this._fetchMetadata();\n          } else {\n            this._continueUpload();\n          }\n        }\n      }\n    } else {\n      this._oneShotUpload();\n    }\n  }\n\n  private _resolveToken(\n    callback: (authToken: string | null, appCheckToken: string | null) => void\n  ): void {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.all([\n      this._ref.storage._getAuthToken(),\n      this._ref.storage._getAppCheckToken()\n    ]).then(([authToken, appCheckToken]) => {\n      switch (this._state) {\n        case InternalTaskState.RUNNING:\n          callback(authToken, appCheckToken);\n          break;\n        case InternalTaskState.CANCELING:\n          this._transition(InternalTaskState.CANCELED);\n          break;\n        case InternalTaskState.PAUSING:\n          this._transition(InternalTaskState.PAUSED);\n          break;\n        default:\n      }\n    });\n  }\n\n  // TODO(andysoto): assert false\n\n  private _createResumable(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = createResumableUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const createRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = createRequest;\n      createRequest.getPromise().then((url: string) => {\n        this._request = undefined;\n        this._uploadUrl = url;\n        this._needToFetchStatus = false;\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _fetchStatus(): void {\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getResumableUploadStatus(\n        this._ref.storage,\n        this._ref._location,\n        url,\n        this._blob\n      );\n      const statusRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = statusRequest;\n      statusRequest.getPromise().then(status => {\n        status = status as ResumableUploadStatus;\n        this._request = undefined;\n        this._updateProgress(status.current);\n        this._needToFetchStatus = false;\n        if (status.finalized) {\n          this._needToFetchMetadata = true;\n        }\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _continueUpload(): void {\n    const chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n    const status = new ResumableUploadStatus(\n      this._transferred,\n      this._blob.size()\n    );\n\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken((authToken, appCheckToken) => {\n      let requestInfo;\n      try {\n        requestInfo = continueResumableUpload(\n          this._ref._location,\n          this._ref.storage,\n          url,\n          this._blob,\n          chunkSize,\n          this._mappings,\n          status,\n          this._makeProgressCallback()\n        );\n      } catch (e) {\n        this._error = e as StorageError;\n        this._transition(InternalTaskState.ERROR);\n        return;\n      }\n      const uploadRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = uploadRequest;\n      uploadRequest.getPromise().then((newStatus: ResumableUploadStatus) => {\n        this._increaseMultiplier();\n        this._request = undefined;\n        this._updateProgress(newStatus.current);\n        if (newStatus.finalized) {\n          this._metadata = newStatus.metadata;\n          this._transition(InternalTaskState.SUCCESS);\n        } else {\n          this.completeTransitions_();\n        }\n      }, this._errorHandler);\n    });\n  }\n\n  private _increaseMultiplier(): void {\n    const currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n\n    // Max chunk size is 32M.\n    if (currentSize < 32 * 1024 * 1024) {\n      this._chunkMultiplier *= 2;\n    }\n  }\n\n  private _fetchMetadata(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getMetadata(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings\n      );\n      const metadataRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = metadataRequest;\n      metadataRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._metadataErrorHandler);\n    });\n  }\n\n  private _oneShotUpload(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = multipartUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const multipartRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = multipartRequest;\n      multipartRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._updateProgress(this._blob.size());\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._errorHandler);\n    });\n  }\n\n  private _updateProgress(transferred: number): void {\n    const old = this._transferred;\n    this._transferred = transferred;\n\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this._transferred !== old) {\n      this._notifyObservers();\n    }\n  }\n\n  private _transition(state: InternalTaskState): void {\n    if (this._state === state) {\n      return;\n    }\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n        break;\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n        break;\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        const wasPaused = this._state === InternalTaskState.PAUSED;\n        this._state = state;\n        if (wasPaused) {\n          this._notifyObservers();\n          this._start();\n        }\n        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._error = canceled();\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      default: // Ignore\n    }\n  }\n\n  private completeTransitions_(): void {\n    switch (this._state) {\n      case InternalTaskState.PAUSING:\n        this._transition(InternalTaskState.PAUSED);\n        break;\n      case InternalTaskState.CANCELING:\n        this._transition(InternalTaskState.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n        this._start();\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        break;\n    }\n  }\n\n  /**\n   * A snapshot of the current task state.\n   */\n  get snapshot(): UploadTaskSnapshot {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    return {\n      bytesTransferred: this._transferred,\n      totalBytes: this._blob.size(),\n      state: externalState,\n      metadata: this._metadata!,\n      task: this,\n      ref: this._ref\n    };\n  }\n\n  /**\n   * Adds a callback for an event.\n   * @param type - The type of event to listen for.\n   * @param nextOrObserver -\n   *     The `next` function, which gets called for each item in\n   *     the event stream, or an observer object with some or all of these three\n   *     properties (`next`, `error`, `complete`).\n   * @param error - A function that gets called with a `StorageError`\n   *     if the event stream ends due to an error.\n   * @param completed - A function that gets called if the\n   *     event stream ends normally.\n   * @returns\n   *     If only the event argument is passed, returns a function you can use to\n   *     add callbacks (see the examples above). If more than just the event\n   *     argument is passed, returns a function you can call to unregister the\n   *     callbacks.\n   */\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | StorageObserver<UploadTaskSnapshot>\n      | null\n      | ((snapshot: UploadTaskSnapshot) => unknown),\n    error?: ((a: StorageError) => unknown) | null,\n    completed?: Unsubscribe | null\n  ): Unsubscribe | Subscribe<UploadTaskSnapshot> {\n    const observer = new Observer(\n      (nextOrObserver as\n        | StorageObserverInternal<UploadTaskSnapshot>\n        | NextFn<UploadTaskSnapshot>) || undefined,\n      error || undefined,\n      completed || undefined\n    );\n    this._addObserver(observer);\n    return () => {\n      this._removeObserver(observer);\n    };\n  }\n\n  /**\n   * This object behaves like a Promise, and resolves with its snapshot data\n   * when the upload completes.\n   * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\n   * @param onRejected - The rejection callback.\n   */\n  then<U>(\n    onFulfilled?: ((value: UploadTaskSnapshot) => U | Promise<U>) | null,\n    onRejected?: ((error: StorageError) => U | Promise<U>) | null\n  ): Promise<U> {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this._promise.then<U>(\n      onFulfilled as (value: UploadTaskSnapshot) => U | Promise<U>,\n      onRejected as ((error: unknown) => Promise<never>) | null\n    );\n  }\n\n  /**\n   * Equivalent to calling `then(null, onRejected)`.\n   */\n  catch<T>(onRejected: (p1: StorageError) => T | Promise<T>): Promise<T> {\n    return this.then(null, onRejected);\n  }\n\n  /**\n   * Adds the given observer.\n   */\n  private _addObserver(observer: Observer<UploadTaskSnapshot>): void {\n    this._observers.push(observer);\n    this._notifyObserver(observer);\n  }\n\n  /**\n   * Removes the given observer.\n   */\n  private _removeObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const i = this._observers.indexOf(observer);\n    if (i !== -1) {\n      this._observers.splice(i, 1);\n    }\n  }\n\n  private _notifyObservers(): void {\n    this._finishPromise();\n    const observers = this._observers.slice();\n    observers.forEach(observer => {\n      this._notifyObserver(observer);\n    });\n  }\n\n  private _finishPromise(): void {\n    if (this._resolve !== undefined) {\n      let triggered = true;\n      switch (taskStateFromInternalTaskState(this._state)) {\n        case TaskState.SUCCESS:\n          fbsAsync(this._resolve.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          const toCall = this._reject as (p1: StorageError) => void;\n          fbsAsync(toCall.bind(null, this._error as StorageError))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this._resolve = undefined;\n        this._reject = undefined;\n      }\n    }\n  }\n\n  private _notifyObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          fbsAsync(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          fbsAsync(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as StorageError)\n          )();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as StorageError)\n          )();\n        }\n    }\n  }\n\n  /**\n   * Resumes a paused task. Has no effect on a currently running or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  resume(): boolean {\n    const valid =\n      this._state === InternalTaskState.PAUSED ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.RUNNING);\n    }\n    return valid;\n  }\n\n  /**\n   * Pauses a currently running task. Has no effect on a paused or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  pause(): boolean {\n    const valid = this._state === InternalTaskState.RUNNING;\n    if (valid) {\n      this._transition(InternalTaskState.PAUSING);\n    }\n    return valid;\n  }\n\n  /**\n   * Cancels a currently running or paused task. Has no effect on a complete or\n   * failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  cancel(): boolean {\n    const valid =\n      this._state === InternalTaskState.RUNNING ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.CANCELING);\n    }\n    return valid;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Firebase StorageReference class.\n */\n\nimport { PassThrough, Transform, TransformOptions } from 'stream';\n\nimport { FbsBlob } from './implementation/blob';\nimport { Location } from './implementation/location';\nimport { getMappings } from './implementation/metadata';\nimport { child, lastComponent, parent } from './implementation/path';\nimport {\n  deleteObject as requestsDeleteObject,\n  getBytes,\n  getDownloadUrl as requestsGetDownloadUrl,\n  getMetadata as requestsGetMetadata,\n  list as requestsList,\n  multipartUpload,\n  updateMetadata as requestsUpdateMetadata\n} from './implementation/requests';\nimport { ListOptions, UploadResult } from './public-types';\nimport { dataFromString, StringFormat } from './implementation/string';\nimport { Metadata } from './metadata';\nimport { FirebaseStorageImpl } from './service';\nimport { ListResult } from './list';\nimport { UploadTask } from './task';\nimport { invalidRootOperation, noDownloadURL } from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport {\n  newBlobConnection,\n  newBytesConnection,\n  newStreamConnection,\n  newTextConnection\n} from './platform/connection';\n\n/**\n * Provides methods to interact with a bucket in the Firebase Storage service.\n * @internal\n * @param _location - An fbs.location, or the URL at\n *     which to base this object, in one of the following forms:\n *         gs://<bucket>/<object-path>\n *         http[s]://firebasestorage.googleapis.com/\n *                     <api-version>/b/<bucket>/o/<object-path>\n *     Any query or fragment strings will be ignored in the http[s]\n *     format. If no value is passed, the storage object will use a URL based on\n *     the project ID of the base firebase.App instance.\n */\nexport class Reference {\n  _location: Location;\n\n  constructor(\n    private _service: FirebaseStorageImpl,\n    location: string | Location\n  ) {\n    if (location instanceof Location) {\n      this._location = location;\n    } else {\n      this._location = Location.makeFromUrl(location, _service.host);\n    }\n  }\n\n  /**\n   * Returns the URL for the bucket and path this object references,\n   *     in the form gs://<bucket>/<object-path>\n   * @override\n   */\n  toString(): string {\n    return 'gs://' + this._location.bucket + '/' + this._location.path;\n  }\n\n  protected _newRef(\n    service: FirebaseStorageImpl,\n    location: Location\n  ): Reference {\n    return new Reference(service, location);\n  }\n\n  /**\n   * A reference to the root of this object's bucket.\n   */\n  get root(): Reference {\n    const location = new Location(this._location.bucket, '');\n    return this._newRef(this._service, location);\n  }\n\n  /**\n   * The name of the bucket containing this reference's object.\n   */\n  get bucket(): string {\n    return this._location.bucket;\n  }\n\n  /**\n   * The full path of this object.\n   */\n  get fullPath(): string {\n    return this._location.path;\n  }\n\n  /**\n   * The short name of this object, which is the last component of the full path.\n   * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\n   */\n  get name(): string {\n    return lastComponent(this._location.path);\n  }\n\n  /**\n   * The `StorageService` instance this `StorageReference` is associated with.\n   */\n  get storage(): FirebaseStorageImpl {\n    return this._service;\n  }\n\n  /**\n   * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\n   * this reference is the root.\n   */\n  get parent(): Reference | null {\n    const newPath = parent(this._location.path);\n    if (newPath === null) {\n      return null;\n    }\n    const location = new Location(this._location.bucket, newPath);\n    return new Reference(this._service, location);\n  }\n\n  /**\n   * Utility function to throw an error in methods that do not accept a root reference.\n   */\n  _throwIfRoot(name: string): void {\n    if (this._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  }\n}\n\n/**\n * Download the bytes at the object's location.\n * @returns A Promise containing the downloaded bytes.\n */\nexport function getBytesInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): Promise<ArrayBuffer> {\n  ref._throwIfRoot('getBytes');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newBytesConnection)\n    .then(bytes =>\n      maxDownloadSizeBytes !== undefined\n        ? // GCS may not honor the Range header for small files\n          (bytes as ArrayBuffer).slice(0, maxDownloadSizeBytes)\n        : (bytes as ArrayBuffer)\n    );\n}\n\n/**\n * Download the bytes at the object's location.\n * @returns A Promise containing the downloaded blob.\n */\nexport function getBlobInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): Promise<Blob> {\n  ref._throwIfRoot('getBlob');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newBlobConnection)\n    .then(blob =>\n      maxDownloadSizeBytes !== undefined\n        ? // GCS may not honor the Range header for small files\n          (blob as Blob).slice(0, maxDownloadSizeBytes)\n        : (blob as Blob)\n    );\n}\n\n/** Stream the bytes at the object's location. */\nexport function getStreamInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): NodeJS.ReadableStream {\n  ref._throwIfRoot('getStream');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n\n  /** A transformer that passes through the first n bytes. */\n  const newMaxSizeTransform: (n: number) => TransformOptions = n => {\n    let missingBytes = n;\n    return {\n      transform(chunk, encoding, callback) {\n        // GCS may not honor the Range header for small files\n        if (chunk.length < missingBytes) {\n          this.push(chunk);\n          missingBytes -= chunk.length;\n        } else {\n          this.push(chunk.slice(0, missingBytes));\n          this.emit('end');\n        }\n        callback();\n      }\n    } as TransformOptions;\n  };\n\n  const result =\n    maxDownloadSizeBytes !== undefined\n      ? new Transform(newMaxSizeTransform(maxDownloadSizeBytes))\n      : new PassThrough();\n\n  ref.storage\n    .makeRequestWithTokens(requestInfo, newStreamConnection)\n    .then(stream => (stream as NodeJS.ReadableStream).pipe(result))\n    .catch(e => result.destroy(e));\n  return result;\n}\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n *\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadBytes');\n  const requestInfo = multipartUpload(\n    ref.storage,\n    ref._location,\n    getMappings(),\n    new FbsBlob(data, true),\n    metadata\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newTextConnection)\n    .then(finalMetadata => {\n      return {\n        metadata: finalMetadata,\n        ref\n      };\n    });\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): UploadTask {\n  ref._throwIfRoot('uploadBytesResumable');\n  return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - StorageReference where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the newly uploaded string.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: Reference,\n  value: string,\n  format: StringFormat = StringFormat.RAW,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadString');\n  const data = dataFromString(format, value);\n  const metadataClone = { ...metadata } as Metadata;\n  if (metadataClone['contentType'] == null && data.contentType != null) {\n    metadataClone['contentType'] = data.contentType!;\n  }\n  return uploadBytes(ref, data.data, metadataClone);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: listAll may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - StorageReference to get list from.\n *\n * @returns A Promise that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: Reference): Promise<ListResult> {\n  const accumulator: ListResult = {\n    prefixes: [],\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(() => accumulator);\n}\n\n/**\n * Separated from listAll because async functions can't use \"arguments\".\n * @param ref\n * @param accumulator\n * @param pageToken\n */\nasync function listAllHelper(\n  ref: Reference,\n  accumulator: ListResult,\n  pageToken?: string\n): Promise<void> {\n  const opt: ListOptions = {\n    // maxResults is 1000 by default.\n    pageToken\n  };\n  const nextPage = await list(ref, opt);\n  accumulator.prefixes.push(...nextPage.prefixes);\n  accumulator.items.push(...nextPage.items);\n  if (nextPage.nextPageToken != null) {\n    await listAllHelper(ref, accumulator, nextPage.nextPageToken);\n  }\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - StorageReference to get list from.\n * @param options - See ListOptions for details.\n * @returns A Promise that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport function list(\n  ref: Reference,\n  options?: ListOptions | null\n): Promise<ListResult> {\n  if (options != null) {\n    if (typeof options.maxResults === 'number') {\n      validateNumber(\n        'options.maxResults',\n        /* minValue= */ 1,\n        /* maxValue= */ 1000,\n        options.maxResults\n      );\n    }\n  }\n  const op = options || {};\n  const requestInfo = requestsList(\n    ref.storage,\n    ref._location,\n    /*delimiter= */ '/',\n    op.pageToken,\n    op.maxResults\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * A `Promise` that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - StorageReference to get metadata from.\n */\nexport function getMetadata(ref: Reference): Promise<Metadata> {\n  ref._throwIfRoot('getMetadata');\n  const requestInfo = requestsGetMetadata(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - StorageReference to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A `Promise` that resolves\n *     with the new metadata for this object.\n *     See `firebaseStorage.Reference.prototype.getMetadata`\n */\nexport function updateMetadata(\n  ref: Reference,\n  metadata: Partial<Metadata>\n): Promise<Metadata> {\n  ref._throwIfRoot('updateMetadata');\n  const requestInfo = requestsUpdateMetadata(\n    ref.storage,\n    ref._location,\n    metadata,\n    getMappings()\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Returns the download URL for the given Reference.\n * @public\n * @returns A `Promise` that resolves with the download\n *     URL for this object.\n */\nexport function getDownloadURL(ref: Reference): Promise<string> {\n  ref._throwIfRoot('getDownloadURL');\n  const requestInfo = requestsGetDownloadUrl(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newTextConnection)\n    .then(url => {\n      if (url === null) {\n        throw noDownloadURL();\n      }\n      return url;\n    });\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - StorageReference for object to delete.\n * @returns A `Promise` that resolves if the deletion succeeds.\n */\nexport function deleteObject(ref: Reference): Promise<void> {\n  ref._throwIfRoot('deleteObject');\n  const requestInfo = requestsDeleteObject(ref.storage, ref._location);\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Returns reference for object obtained by appending `childPath` to `ref`.\n *\n * @param ref - StorageReference to get child of.\n * @param childPath - Child path from provided ref.\n * @returns A reference to the object obtained by\n * appending childPath, removing any duplicate, beginning, or trailing\n * slashes.\n *\n */\nexport function _getChild(ref: Reference, childPath: string): Reference {\n  const newPath = child(ref._location.path, childPath);\n  const location = new Location(ref._location.bucket, newPath);\n  return new Reference(ref.storage, location);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location } from './implementation/location';\nimport { FailRequest } from './implementation/failrequest';\nimport { Request, makeRequest } from './implementation/request';\nimport { RequestInfo } from './implementation/requestinfo';\nimport { Reference, _getChild } from './reference';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\nimport {\n  CONFIG_STORAGE_BUCKET_KEY,\n  DEFAULT_HOST,\n  DEFAULT_MAX_OPERATION_RETRY_TIME,\n  DEFAULT_MAX_UPLOAD_RETRY_TIME\n} from './implementation/constants';\nimport {\n  invalidArgument,\n  appDeleted,\n  noDefaultBucket\n} from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport { FirebaseStorage } from './public-types';\nimport { createMockUserToken, EmulatorMockTokenOptions } from '@firebase/util';\nimport { Connection, ConnectionType } from './implementation/connection';\n\nexport function isUrl(path?: string): boolean {\n  return /^[A-Za-z]+:\\/\\//.test(path as string);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given url.\n */\nfunction refFromURL(service: FirebaseStorageImpl, url: string): Reference {\n  return new Reference(service, url);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given path in the default\n * bucket.\n */\nfunction refFromPath(\n  ref: FirebaseStorageImpl | Reference,\n  path?: string\n): Reference {\n  if (ref instanceof FirebaseStorageImpl) {\n    const service = ref;\n    if (service._bucket == null) {\n      throw noDefaultBucket();\n    }\n    const reference = new Reference(service, service._bucket!);\n    if (path != null) {\n      return refFromPath(reference, path);\n    } else {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n    if (path !== undefined) {\n      return _getChild(ref, path);\n    } else {\n      return ref;\n    }\n  }\n}\n\n/**\n * Returns a storage Reference for the given url.\n * @param storage - `Storage` instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: FirebaseStorageImpl, url?: string): Reference;\n/**\n * Returns a storage Reference for the given path in the\n * default bucket.\n * @param storageOrRef - `Storage` service or storage `Reference`.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if Storage\n * instance provided) or returns same reference (if Reference provided).\n * @public\n */\nexport function ref(\n  storageOrRef: FirebaseStorageImpl | Reference,\n  path?: string\n): Reference;\nexport function ref(\n  serviceOrRef: FirebaseStorageImpl | Reference,\n  pathOrUrl?: string\n): Reference | null {\n  if (pathOrUrl && isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof FirebaseStorageImpl) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } else {\n      throw invalidArgument(\n        'To use ref(service, url), the first argument must be a Storage instance.'\n      );\n    }\n  } else {\n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\n\nfunction extractBucket(\n  host: string,\n  config?: FirebaseOptions\n): Location | null {\n  const bucketString = config?.[CONFIG_STORAGE_BUCKET_KEY];\n  if (bucketString == null) {\n    return null;\n  }\n  return Location.makeFromBucketSpec(bucketString, host);\n}\n\nexport function connectStorageEmulator(\n  storage: FirebaseStorageImpl,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  storage.host = `${host}:${port}`;\n  storage._protocol = 'http';\n  const { mockUserToken } = options;\n  if (mockUserToken) {\n    storage._overrideAuthToken =\n      typeof mockUserToken === 'string'\n        ? mockUserToken\n        : createMockUserToken(mockUserToken, storage.app.options.projectId);\n  }\n}\n\n/**\n * A service that provides Firebase Storage Reference instances.\n * @param opt_url - gs:// url to a custom Storage Bucket\n *\n * @internal\n */\nexport class FirebaseStorageImpl implements FirebaseStorage {\n  _bucket: Location | null = null;\n  /**\n   * This string can be in the formats:\n   * - host\n   * - host:port\n   */\n  private _host: string = DEFAULT_HOST;\n  _protocol: string = 'https';\n  protected readonly _appId: string | null = null;\n  private readonly _requests: Set<Request<unknown>>;\n  private _deleted: boolean = false;\n  private _maxOperationRetryTime: number;\n  private _maxUploadRetryTime: number;\n  _overrideAuthToken?: string;\n\n  constructor(\n    /**\n     * FirebaseApp associated with this StorageService instance.\n     */\n    readonly app: FirebaseApp,\n    readonly _authProvider: Provider<FirebaseAuthInternalName>,\n    /**\n     * @internal\n     */\n    readonly _appCheckProvider: Provider<AppCheckInternalComponentName>,\n    /**\n     * @internal\n     */\n    readonly _url?: string,\n    readonly _firebaseVersion?: string\n  ) {\n    this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this._requests = new Set();\n    if (_url != null) {\n      this._bucket = Location.makeFromBucketSpec(_url, this._host);\n    } else {\n      this._bucket = extractBucket(this._host, this.app.options);\n    }\n  }\n\n  /**\n   * The host string for this service, in the form of `host` or\n   * `host:port`.\n   */\n  get host(): string {\n    return this._host;\n  }\n\n  set host(host: string) {\n    this._host = host;\n    if (this._url != null) {\n      this._bucket = Location.makeFromBucketSpec(this._url, host);\n    } else {\n      this._bucket = extractBucket(host, this.app.options);\n    }\n  }\n\n  /**\n   * The maximum time to retry uploads in milliseconds.\n   */\n  get maxUploadRetryTime(): number {\n    return this._maxUploadRetryTime;\n  }\n\n  set maxUploadRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxUploadRetryTime = time;\n  }\n\n  /**\n   * The maximum time to retry operations other than uploads or downloads in\n   * milliseconds.\n   */\n  get maxOperationRetryTime(): number {\n    return this._maxOperationRetryTime;\n  }\n\n  set maxOperationRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxOperationRetryTime = time;\n  }\n\n  async _getAuthToken(): Promise<string | null> {\n    if (this._overrideAuthToken) {\n      return this._overrideAuthToken;\n    }\n    const auth = this._authProvider.getImmediate({ optional: true });\n    if (auth) {\n      const tokenData = await auth.getToken();\n      if (tokenData !== null) {\n        return tokenData.accessToken;\n      }\n    }\n    return null;\n  }\n\n  async _getAppCheckToken(): Promise<string | null> {\n    const appCheck = this._appCheckProvider.getImmediate({ optional: true });\n    if (appCheck) {\n      const result = await appCheck.getToken();\n      // TODO: What do we want to do if there is an error getting the token?\n      // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\n      // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\n      // the token (actual or dummy) to send requests.\n      return result.token;\n    }\n    return null;\n  }\n\n  /**\n   * Stop running requests and prevent more from being created.\n   */\n  _delete(): Promise<void> {\n    if (!this._deleted) {\n      this._deleted = true;\n      this._requests.forEach(request => request.cancel());\n      this._requests.clear();\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\n   * at the given Location.\n   */\n  _makeStorageReference(loc: Location): Reference {\n    return new Reference(this, loc);\n  }\n\n  /**\n   * @param requestInfo - HTTP RequestInfo object\n   * @param authToken - Firebase auth token\n   */\n  _makeRequest<I extends ConnectionType, O>(\n    requestInfo: RequestInfo<I, O>,\n    requestFactory: () => Connection<I>,\n    authToken: string | null,\n    appCheckToken: string | null\n  ): Request<O> {\n    if (!this._deleted) {\n      const request = makeRequest(\n        requestInfo,\n        this._appId,\n        authToken,\n        appCheckToken,\n        requestFactory,\n        this._firebaseVersion\n      );\n      this._requests.add(request);\n      // Request removes itself from set when complete.\n      request.getPromise().then(\n        () => this._requests.delete(request),\n        () => this._requests.delete(request)\n      );\n      return request;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  }\n\n  async makeRequestWithTokens<I extends ConnectionType, O>(\n    requestInfo: RequestInfo<I, O>,\n    requestFactory: () => Connection<I>\n  ): Promise<O> {\n    const [authToken, appCheckToken] = await Promise.all([\n      this._getAuthToken(),\n      this._getAppCheckToken()\n    ]);\n\n    return this._makeRequest(\n      requestInfo,\n      requestFactory,\n      authToken,\n      appCheckToken\n    ).getPromise();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type constant for Firebase Storage.\n */\nexport const STORAGE_TYPE = 'storage';\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { _getProvider, FirebaseApp, getApp } from '@firebase/app';\n\nimport {\n  ref as refInternal,\n  FirebaseStorageImpl,\n  connectStorageEmulator as connectEmulatorInternal\n} from './service';\nimport { Provider } from '@firebase/component';\n\nimport {\n  StorageReference,\n  FirebaseStorage,\n  UploadResult,\n  ListOptions,\n  ListResult,\n  UploadTask,\n  SettableMetadata,\n  UploadMetadata,\n  FullMetadata\n} from './public-types';\nimport { Metadata as MetadataInternal } from './metadata';\nimport {\n  uploadBytes as uploadBytesInternal,\n  uploadBytesResumable as uploadBytesResumableInternal,\n  uploadString as uploadStringInternal,\n  getMetadata as getMetadataInternal,\n  updateMetadata as updateMetadataInternal,\n  list as listInternal,\n  listAll as listAllInternal,\n  getDownloadURL as getDownloadURLInternal,\n  deleteObject as deleteObjectInternal,\n  Reference,\n  _getChild as _getChildInternal,\n  getBytesInternal\n} from './reference';\nimport { STORAGE_TYPE } from './constants';\nimport { EmulatorMockTokenOptions, getModularInstance } from '@firebase/util';\nimport { StringFormat } from './implementation/string';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n\n/**\n * Public types.\n */\nexport * from './public-types';\n\nexport { Location as _Location } from './implementation/location';\nexport { UploadTask as _UploadTask } from './task';\nexport type { Reference as _Reference } from './reference';\nexport type { FirebaseStorageImpl as _FirebaseStorageImpl } from './service';\nexport { FbsBlob as _FbsBlob } from './implementation/blob';\nexport { dataFromString as _dataFromString } from './implementation/string';\nexport {\n  invalidRootOperation as _invalidRootOperation,\n  invalidArgument as _invalidArgument\n} from './implementation/error';\nexport {\n  TaskEvent as _TaskEvent,\n  TaskState as _TaskState\n} from './implementation/taskenums';\nexport { StringFormat };\n\n/**\n * Downloads the data at the object's location. Returns an error if the object\n * is not found.\n *\n * To use this functionality, you have to whitelist your app's origin in your\n * Cloud Storage bucket. See also\n * https://cloud.google.com/storage/docs/configuring-cors\n *\n * @public\n * @param ref - StorageReference where data should be downloaded.\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\n * retrieve.\n * @returns A Promise containing the object's bytes\n */\nexport function getBytes(\n  ref: StorageReference,\n  maxDownloadSizeBytes?: number\n): Promise<ArrayBuffer> {\n  ref = getModularInstance(ref);\n  return getBytesInternal(ref as Reference, maxDownloadSizeBytes);\n}\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - {@link StorageReference} where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the data to upload.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: UploadMetadata\n): Promise<UploadResult> {\n  ref = getModularInstance(ref);\n  return uploadBytesInternal(\n    ref as Reference,\n    data,\n    metadata as MetadataInternal\n  );\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - {@link StorageReference} where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the string to upload.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: StorageReference,\n  value: string,\n  format?: StringFormat,\n  metadata?: UploadMetadata\n): Promise<UploadResult> {\n  ref = getModularInstance(ref);\n  return uploadStringInternal(\n    ref as Reference,\n    value,\n    format,\n    metadata as MetadataInternal\n  );\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - {@link StorageReference} where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the data to upload.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: UploadMetadata\n): UploadTask {\n  ref = getModularInstance(ref);\n  return uploadBytesResumableInternal(\n    ref as Reference,\n    data,\n    metadata as MetadataInternal\n  ) as UploadTask;\n}\n\n/**\n * A `Promise` that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - {@link StorageReference} to get metadata from.\n */\nexport function getMetadata(ref: StorageReference): Promise<FullMetadata> {\n  ref = getModularInstance(ref);\n  return getMetadataInternal(ref as Reference) as Promise<FullMetadata>;\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - {@link StorageReference} to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A `Promise` that resolves with the new metadata for this object.\n */\nexport function updateMetadata(\n  ref: StorageReference,\n  metadata: SettableMetadata\n): Promise<FullMetadata> {\n  ref = getModularInstance(ref);\n  return updateMetadataInternal(\n    ref as Reference,\n    metadata as Partial<MetadataInternal>\n  ) as Promise<FullMetadata>;\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - {@link StorageReference} to get list from.\n * @param options - See {@link ListOptions} for details.\n * @returns A `Promise` that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport function list(\n  ref: StorageReference,\n  options?: ListOptions\n): Promise<ListResult> {\n  ref = getModularInstance(ref);\n  return listInternal(ref as Reference, options);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: `listAll` may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - {@link StorageReference} to get list from.\n *\n * @returns A `Promise` that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: StorageReference): Promise<ListResult> {\n  ref = getModularInstance(ref);\n  return listAllInternal(ref as Reference);\n}\n\n/**\n * Returns the download URL for the given {@link StorageReference}.\n * @public\n * @param ref - {@link StorageReference} to get the download URL for.\n * @returns A `Promise` that resolves with the download\n *     URL for this object.\n */\nexport function getDownloadURL(ref: StorageReference): Promise<string> {\n  ref = getModularInstance(ref);\n  return getDownloadURLInternal(ref as Reference);\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - {@link StorageReference} for object to delete.\n * @returns A `Promise` that resolves if the deletion succeeds.\n */\nexport function deleteObject(ref: StorageReference): Promise<void> {\n  ref = getModularInstance(ref);\n  return deleteObjectInternal(ref as Reference);\n}\n\n/**\n * Returns a {@link StorageReference} for the given url.\n * @param storage - {@link FirebaseStorage} instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: FirebaseStorage, url?: string): StorageReference;\n/**\n * Returns a {@link StorageReference} for the given path in the\n * default bucket.\n * @param storageOrRef - {@link FirebaseStorage} or {@link StorageReference}.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if {@link FirebaseStorage}\n * instance provided) or returns same reference (if {@link StorageReference} provided).\n * @public\n */\nexport function ref(\n  storageOrRef: FirebaseStorage | StorageReference,\n  path?: string\n): StorageReference;\nexport function ref(\n  serviceOrRef: FirebaseStorage | StorageReference,\n  pathOrUrl?: string\n): StorageReference | null {\n  serviceOrRef = getModularInstance(serviceOrRef);\n  return refInternal(\n    serviceOrRef as FirebaseStorageImpl | Reference,\n    pathOrUrl\n  );\n}\n\n/**\n * @internal\n */\nexport function _getChild(ref: StorageReference, childPath: string): Reference {\n  return _getChildInternal(ref as Reference, childPath);\n}\n\n/**\n * Gets a {@link FirebaseStorage} instance for the given Firebase app.\n * @public\n * @param app - Firebase app to get {@link FirebaseStorage} instance for.\n * @param bucketUrl - The gs:// url to your Firebase Storage Bucket.\n * If not passed, uses the app's default Storage Bucket.\n * @returns A {@link FirebaseStorage} instance.\n */\nexport function getStorage(\n  app: FirebaseApp = getApp(),\n  bucketUrl?: string\n): FirebaseStorage {\n  app = getModularInstance(app);\n  const storageProvider: Provider<'storage'> = _getProvider(app, STORAGE_TYPE);\n  const storageInstance = storageProvider.getImmediate({\n    identifier: bucketUrl\n  });\n  return storageInstance;\n}\n\n/**\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\n *\n * @param storage - The {@link FirebaseStorage} instance\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 5001)\n * @param options - Emulator options. `options.mockUserToken` is the mock auth\n * token to use for unit testing Security Rules.\n * @public\n */\nexport function connectStorageEmulator(\n  storage: FirebaseStorage,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  connectEmulatorInternal(storage as FirebaseStorageImpl, host, port, options);\n}\n","/**\n * Cloud Storage for Firebase\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\n\nimport { FirebaseStorageImpl } from '../src/service';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactoryOptions\n} from '@firebase/component';\n\nimport { name, version } from '../package.json';\n\nimport { FirebaseStorage } from './public-types';\nimport { STORAGE_TYPE } from './constants';\n\nexport * from './api';\nexport * from './api.browser';\n\nfunction factory(\n  container: ComponentContainer,\n  { instanceIdentifier: url }: InstanceFactoryOptions\n): FirebaseStorage {\n  const app = container.getProvider('app').getImmediate();\n  const authProvider = container.getProvider('auth-internal');\n  const appCheckProvider = container.getProvider('app-check-internal');\n\n  return new FirebaseStorageImpl(\n    app,\n    authProvider,\n    appCheckProvider,\n    url,\n    SDK_VERSION\n  );\n}\n\nfunction registerStorage(): void {\n  _registerComponent(\n    new Component(\n      STORAGE_TYPE,\n      factory,\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  //RUNTIME_ENV will be replaced during the compilation to \"node\" for nodejs and an empty string for browser\n  registerVersion(name, version, '__RUNTIME_ENV__');\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n\nregisterStorage();\n","import { render } from \"./MyProductsView.vue?vue&type=template&id=80183452\"\nimport script from \"./MyProductsView.vue?vue&type=script&lang=js\"\nexport * from \"./MyProductsView.vue?vue&type=script&lang=js\"\n\nimport \"./MyProductsView.vue?vue&type=style&index=0&id=80183452&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\diliy\\\\Desktop\\\\Online-Store-main\\\\Online-Store-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","class","type","style","href","target","id","tabindex","_hoisted_1","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_createElementBlock","_Fragment","_renderList","$data","item","key","name","src","image","alt","_toDisplayString","brand","price","_hoisted_16","description","onClick","$options","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_26","onSubmit","placeholder","$event","_hoisted_30","lang","accept","onChange","value","max","rows","_hoisted_33","_hoisted_34","_hoisted_38","pla","ceholder","_hoisted_42","_hoisted_43","_hoisted_47","_hoisted_50","_hoisted_51","_hoisted_53","DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","DEFAULT_MAX_OPERATION_RETRY_TIME","DEFAULT_MAX_UPLOAD_RETRY_TIME","StorageError","FirebaseError","constructor","code","message","super","prependCode","customData","serverResponse","this","_baseMessage","Object","setPrototypeOf","prototype","_codeEquals","unknown","objectNotFound","path","quotaExceeded","bucket","unauthenticated","unauthorizedApp","unauthorized","retryLimitExceeded","canceled","invalidUrl","url","invalidDefaultBucket","noDefaultBucket","cannotSliceBlob","serverFileWrongSize","noDownloadURL","invalidArgument","appDeleted","invalidRootOperation","invalidFormat","format","internalError","Location","path_","isRoot","length","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","bucketString","host","bucketLocation","makeFromUrl","e","location","bucketDomain","gsModify","loc","charAt","slice","gsPath","gsRegex","RegExp","gsIndices","httpModify","decodeURIComponent","version","firebaseStorageHost","replace","firebaseStoragePath","firebaseStorageRegExp","firebaseStorageIndices","cloudStorageHost","cloudStoragePath","cloudStorageRegExp","cloudStorageIndices","groups","regex","indices","postModify","i","group","captures","exec","bucketValue","pathValue","FailRequest","error","promise_","Promise","reject","getPromise","cancel","_appDelete","start","f","callback","timeout","waitSeconds","retryTimeoutId","globalTimeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","args","apply","callWithDelay","millis","setTimeout","handler","clearGlobalTimeout","clearTimeout","success","call","mustStop","waitMillis","Math","random","stopped","stop","wasTimeout","isJustDef","p","isFunction","isNonArrayObject","Array","isArray","isString","String","isNativeBlob","isNativeBlobDefined","Blob","validateNumber","argument","minValue","maxValue","makeUrl","urlPart","protocol","origin","makeQueryString","params","queryPart","hasOwnProperty","nextPart","ErrorCode","NetworkRequest","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","timeout_","progressCallback_","connectionFactory_","pendingConnection_","backoffId_","canceled_","appDelete_","resolve","resolve_","reject_","start_","doTheRequest","backoffCallback","RequestEndStatus","connection","progressListener","progressEvent","loaded","total","lengthComputable","addUploadProgressListener","send","then","removeUploadProgressListener","hitServer","getErrorCode","NO_ERROR","status","getStatus","isRetryStatusCode_","wasCanceled","ABORT","successCode","indexOf","backoffDone","requestWentThrough","wasSuccessCode","result","getResponse","err","getErrorText","appDelete","abort","isFiveHundredCode","extraRetryCodes","isExtraRetryCode","isRequestSpecificRetryCode","addAuthHeader_","headers","authToken","addVersionHeader_","firebaseVersion","addGmpidHeader_","appId","addAppCheckHeader_","appCheckToken","makeRequest","requestInfo","requestFactory","urlParams","assign","method","body","successCodes","additionalRetryCodes","errorHandler","progressCallback","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","undefined","bb","append","getBlob","sliceBlob","blob","end","webkitSlice","mozSlice","decodeBase64","encoded","atob","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","StringData","data","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataURLBytes_","dataURLContentType_","b","c","charCodeAt","push","valid","hi","lo","Uint8Array","percentEncodedBytes_","decoded","hasMinus","hasUnder","invalidChar","hasPlus","hasSlash","bytes","array","DataURLParts","dataURL","base64","matches","match","middle","endsWith","substring","rest","dataUrl","parts","s","longEnough","FbsBlob","elideCopy","size","blobType","data_","ArrayBuffer","byteLength","set","size_","type_","startByte","endByte","realBlob","sliced","buffer","blobby","map","val","uint8Arrays","finalLength","forEach","merged","index","uploadData","jsonObjectOrNull","obj","JSON","parse","parent","lastIndexOf","newPath","child","childPath","canonicalChildPath","split","filter","component","join","lastComponent","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","xformPath","fullPath","getMappings","mappings","mappingsXformPath","_metadata","nameMapping","xformSize","Number","sizeMapping","addRef","service","generateRef","_makeStorageReference","defineProperty","get","fromResource","resource","len","mapping","fromResourceString","resourceString","downloadUrlFromResourceString","tokens","tokensList","urls","token","base","queryString","toResourceString","stringify","RequestInfo","handlerCheck","cndn","metadataHandler","xhr","text","downloadUrlHandler","_protocol","sharedErrorHandler","newErr","includes","objectErrorHandler","shared","getMetadata","maxOperationRetryTime","getDownloadUrl","determineContentType_","metadataForUpload_","metadataClone","multipartUpload","genBoundary","str","toString","boundary","metadata_","metadataString","preBlobPart","postBlobPart","maxUploadRetryTime","ResumableUploadStatus","current","finalized","checkResumeHeader_","allowed","getResponseHeader","allowedStatus","createResumableUpload","metadataForUpload","getResumableUploadStatus","sizeString","isNaN","RESUMABLE_UPLOAD_CHUNK_SIZE","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","min","uploadCommand","uploadStatus","newCurrent","TaskState","RUNNING","PAUSED","SUCCESS","CANCELED","ERROR","taskStateFromInternalTaskState","state","Observer","nextOrObserver","complete","asFunctions","next","observer","async","argsToForward","textFactoryOverride","XhrConnection","sent_","xhr_","XMLHttpRequest","initXhr","errorCode_","sendPromise_","addEventListener","NETWORK_ERROR","open","setRequestHeader","response","statusText","header","listener","upload","removeEventListener","XhrTextConnection","responseType","newTextConnection","UploadTask","ref","_transferred","_needToFetchStatus","_needToFetchMetadata","_observers","_error","_uploadUrl","_request","_chunkMultiplier","_resolve","_reject","_ref","_blob","_mappings","_resumable","_shouldDoResumable","_state","_errorHandler","completeTransitions_","_transition","_metadataErrorHandler","_promise","_start","_makeProgressCallback","sizeBefore","_updateProgress","_createResumable","_fetchStatus","_fetchMetadata","_continueUpload","_oneShotUpload","_resolveToken","all","storage","_getAuthToken","_getAppCheckToken","_location","createRequest","_makeRequest","statusRequest","uploadRequest","newStatus","_increaseMultiplier","currentSize","metadataRequest","multipartRequest","transferred","old","_notifyObservers","wasPaused","snapshot","externalState","bytesTransferred","totalBytes","task","on","completed","_addObserver","_removeObserver","onFulfilled","onRejected","catch","_notifyObserver","splice","_finishPromise","observers","triggered","fbsAsync","bind","toCall","resume","pause","Reference","_service","_newRef","root","_throwIfRoot","uploadBytesResumable","getDownloadURL","requestsGetDownloadUrl","makeRequestWithTokens","isUrl","test","refFromURL","refFromPath","FirebaseStorageImpl","_bucket","reference","_getChild","serviceOrRef","pathOrUrl","extractBucket","config","makeFromBucketSpec","app","_authProvider","_appCheckProvider","_url","_firebaseVersion","_host","_appId","_deleted","_maxOperationRetryTime","_maxUploadRetryTime","_requests","Set","options","time","POSITIVE_INFINITY","_overrideAuthToken","auth","getImmediate","optional","tokenData","getToken","accessToken","appCheck","_delete","request","clear","add","delete","STORAGE_TYPE","getModularInstance","uploadBytesResumableInternal","getDownloadURLInternal","refInternal","getStorage","getApp","bucketUrl","storageProvider","_getProvider","storageInstance","identifier","factory","container","instanceIdentifier","getProvider","authProvider","appCheckProvider","SDK_VERSION","registerStorage","_registerComponent","Component","setMultipleInstances","registerVersion","db","getFirestore","q","query","collection","product","uid","localStorage","getItem","dataProduct","messageSuccess","messageUpdateSuccess","products","uploadValue","ProgressShow","picture","imageData","imageName","methods","AddProduct","addDoc","getData","getDataKey","UpdateProduct","DocRef","doc","updateDoc","DeleteProduct","deleteDoc","document","getElementById","click","previewImage","event","files","storageRef","uploadTask","console","log","downloadURL","created","onSnapshot","querySnapshot","quantity","totalPrice","__exports__","render"],"sourceRoot":""}